start = ?{
            $this->conv = array(
                'b' => "\b",
                'f' => "\f",
                'n' => "\n",
                'r' => "\r",
                't' => "\t"
            );

            return TRUE;
        }

        S v:value S !. -> $v

value = "{" S "}" -> array()
      / "{" S ms:member S ("," S m:member S -> { $ms = array_merge($ms, $m); })* "}" -> $ms
      / "[" S "]" -> array()
      / "[" S vs:value ?{$vs = array($vs); return TRUE;} S ("," S v:value S -> { array_push($vs, $v); })* "]" -> $vs
      / string
      / number
      / "true" -> TRUE
      / "false" -> FALSE
      / "null" -> NULL

member = k:string S ":" S v:value -> array($k => $v)

string = ["] cs:(!["] !"\\" c:. -> $c
               / "\\" c:["\\/] -> $c
               / "\\" c:[bfnrt] -> $this->conv[$c]
               / "\\u" a:[0-9a-fA-F] b:[0-9a-fA-F] c:[0-9a-fA-F] d:[0-9a-fA-F] -> {
                    $c = hexdec($a . $b . $c . $d);

                    if ($c < 0x80) { return chr($c); }
                    else if ($c < 0x0800) { return chr(($c >> 6) | 0xC0) . chr(($c & 0x3F) | 0x80); }
                    else if ($c < 0x10000) { return chr(($c >> 12) | 0xE0) . chr((($c >> 6) & 0x3F) | 0x80) . chr(($c & 0x3F) | 0x80); }
                    else if ($c < 0x200000) { return chr(($c >> 18) | 0xF0) . chr((($c >> 12) & 0x3F) | 0x80) . chr((($c >> 6) & 0x3F) | 0x80) . chr(($c & 0x3F) | 0x80); }

                    return '?';
               }
             )*
         ["] -> implode('', $cs)

number = minus:"-"? int:("0" / [1-9][0-9]*) frac:("." [0-9]+ ([eE] [+-]? [0-9]+)?)? -> floatval($minus . $int . $frac)

S = [ \t\r\n]*
