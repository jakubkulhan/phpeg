<?php
// !!! AUTOGENERATED FILE !!!

function parse_php($s, array $opts = array()) {


    if (!class_exists('__parse_php')) {

        class __parse_php {
            var $_s;
            var $_p;
            var $_maxp;
            var $_expected;
            var $_memo;

            function __construct($_s, array $opts = array())
            {
                foreach ($opts as $n => $v) { $this->$n = $v; }
                $this->_s = $_s;
                $this->_p = $this->_maxp = 0;
                $this->_expected = $this->_memo = array();
            }

            function _parse_grammar() {
                $_m = NULL;
                $k = 'grammar:' . ((string) $_oldp = $this->_p);
                if (isset($this->_memo[$k])) {
                    $_m = $this->_memo[$k];
                }
            
                if ($_m === NULL) {
                    do {
                        $_1 = array(FALSE, NULL);
                        $rs =& $_1;
                        $_1 = array(FALSE, NULL);
                        $_2 = $this->_parse_rule();
                        if ($_2[0]) { $_1[1] = (array) $_1[1]; $_1[1][] = $_2[1]; }
                        $_1[0] = $_2[0];
                        while ($_2[0]) {
                            $_pos1 = $this->_p;
                            $_2 = $this->_parse_rule();
                            $_1[1] = (array) $_1[1];
                            if (!$_2[0]) { $this->_p = $_pos1; }
                            else { $_1[1][] = $_2[1]; };
                        }
                        if (!$_1[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_pos2 = $this->_p;
                        $_3 = array(isset($this->_s[$this->_p]), NULL);
                        if ($_3[0]) {
                            $_3[1] = $this->_s[$this->_p];
                            $this->_p += 1;
                        } else {
                            if ($this->_p >= $this->_maxp) {
                                if ($this->_p > $this->_maxp) {
                                    $this->_maxp = $this->_p;
                                    $this->_expected = array();
                                }
                            
                                if (!in_array('any character', $this->_expected)) {
                                    $this->_expected[] = 'any character';
                                }
                            }
                        }
                        $_2 = array(!$_3[0], NULL);
                        $this->_p = $_pos2;
                        if (!$_2[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                    } while(0);
                    $_0 = array(FALSE, NULL);
                    if ($_1[0]) {
                        $_0 = array(TRUE, $this->_0($rs[1]));
                    }
            
                    $this->_memo['grammar:' . ((string) $_oldp)] = $_m = array_merge($_0, array($this->_p));
            
                    return $_0;
                }
                $this->_p = $_m[2];
                return array($_m[0], $_m[1]);
            }
            function _parse_rule() {
                $_m = NULL;
                $k = 'rule:' . ((string) $_oldp = $this->_p);
                if (isset($this->_memo[$k])) {
                    $_m = $this->_memo[$k];
                }
            
                if ($_m === NULL) {
                    do {
                        $_1 = array(TRUE, array());
                        do {
                            $_pos1 = $this->_p;
                            $_2 = array(FALSE, NULL);
                            $_pos2 = $this->_p;
                            do {
                                $_3 = array(FALSE, NULL);
                                $_3_ = ord(substr($this->_s, $this->_p, 1));
                                if (isset($this->_s[$this->_p]) && (($_3_ === 32) || ($_3_ === 9) || ($_3_ === 13) || ($_3_ === 10))) {
                                    $_3 = array(TRUE, substr($this->_s, $this->_p, 1));
                                    $this->_p += 1;
                                } else {
                                    if ($this->_p >= $this->_maxp) {
                                        if ($this->_p > $this->_maxp) {
                                            $this->_maxp = $this->_p;
                                            $this->_expected = array();
                                        }
                                    
                                        if (!in_array('[ \\t\\r\\n]', $this->_expected)) {
                                            $this->_expected[] = '[ \\t\\r\\n]';
                                        }
                                    }
                                }
                                if (!$_3[0]) {
                                    $this->_p = $_pos2;
                                } else {
                                    $_2 = $_3;
                                    break;
                                }
                                do {
                                    $_4 = array(FALSE, NULL);
                                    if (($_4_ = substr($this->_s, $this->_p, 2)) === "//") {
                                        $_4 = array(TRUE, $_4_);
                                        $this->_p += 2;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('"//"', $this->_expected)) {
                                                $this->_expected[] = '"//"';
                                            }
                                        }
                                    }
                                    if (!$_4[0]) {
                                        $_4 = array(FALSE, NULL);
                                        break;
                                    }
                                    $_5 = array(TRUE, array());
                                    do {
                                        $_pos5 = $this->_p;
                                        do {
                                            $_pos6 = $this->_p;
                                            $_7 = array(FALSE, NULL);
                                            $_pos7 = $this->_p;
                                            do {
                                                $_8 = array(FALSE, NULL);
                                                if (($_8_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                    $_8 = array(TRUE, $_8_);
                                                    $this->_p += 2;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_8[0]) {
                                                    $this->_p = $_pos7;
                                                } else {
                                                    $_7 = $_8;
                                                    break;
                                                }
                                                $_9 = array(FALSE, NULL);
                                                if (($_9_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                    $_9 = array(TRUE, $_9_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_9[0]) {
                                                    $this->_p = $_pos7;
                                                } else {
                                                    $_7 = $_9;
                                                    break;
                                                }
                                                $_10 = array(FALSE, NULL);
                                                if (($_10_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                    $_10 = array(TRUE, $_10_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r"';
                                                        }
                                                    }
                                                }
                                                if (!$_10[0]) {
                                                    $this->_p = $_pos7;
                                                } else {
                                                    $_7 = $_10;
                                                    break;
                                                }
                                            } while(0);
                                            $_6 = array(!$_7[0], NULL);
                                            $this->_p = $_pos6;
                                            if (!$_6[0]) {
                                                $_7 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_7 = array(isset($this->_s[$this->_p]), NULL);
                                            if ($_7[0]) {
                                                $_7[1] = $this->_s[$this->_p];
                                                $this->_p += 1;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('any character', $this->_expected)) {
                                                        $this->_expected[] = 'any character';
                                                    }
                                                }
                                            }
                                            if (!$_7[0]) {
                                                $_7 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_7 = array(TRUE, implode('', array($_6[1], $_7[1])));
                                        } while(0);
                                        $_6 = $_7;
                                        if (!$_6[0]) { $this->_p = $_pos5; }
                                        else { $_5[1][] = $_6[1]; }
                                    } while ($_6[0]);
                                    $_5[1] = implode('', (array) $_5[1]);
                                    if (!$_5[0]) {
                                        $_4 = array(FALSE, NULL);
                                        break;
                                    }
                                    $_6 = array(FALSE, NULL);
                                    $_pos6 = $this->_p;
                                    do {
                                        $_7 = array(FALSE, NULL);
                                        if (($_7_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                            $_7 = array(TRUE, $_7_);
                                            $this->_p += 2;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"\\r\\n"', $this->_expected)) {
                                                    $this->_expected[] = '"\\r\\n"';
                                                }
                                            }
                                        }
                                        if (!$_7[0]) {
                                            $this->_p = $_pos6;
                                        } else {
                                            $_6 = $_7;
                                            break;
                                        }
                                        $_8 = array(FALSE, NULL);
                                        if (($_8_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                            $_8 = array(TRUE, $_8_);
                                            $this->_p += 1;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"\\n"', $this->_expected)) {
                                                    $this->_expected[] = '"\\n"';
                                                }
                                            }
                                        }
                                        if (!$_8[0]) {
                                            $this->_p = $_pos6;
                                        } else {
                                            $_6 = $_8;
                                            break;
                                        }
                                        $_9 = array(FALSE, NULL);
                                        if (($_9_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                            $_9 = array(TRUE, $_9_);
                                            $this->_p += 1;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"\\r"', $this->_expected)) {
                                                    $this->_expected[] = '"\\r"';
                                                }
                                            }
                                        }
                                        if (!$_9[0]) {
                                            $this->_p = $_pos6;
                                        } else {
                                            $_6 = $_9;
                                            break;
                                        }
                                    } while(0);
                                    if (!$_6[0]) {
                                        $_4 = array(FALSE, NULL);
                                        break;
                                    }
                                } while(0);
                                if (!$_4[0]) {
                                    $this->_p = $_pos2;
                                } else {
                                    $_2 = $_4;
                                    break;
                                }
                            } while(0);
                            if (!$_2[0]) { $this->_p = $_pos1; }
                            else { $_1[1][] = $_2[1]; }
                        } while ($_2[0]);
                        if (!$_1[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_2 = array(FALSE, NULL);
                        $n =& $_2;
                        do {
                            $_2 = array(FALSE, NULL);
                            $_2_ = ord(substr($this->_s, $this->_p, 1));
                            if (isset($this->_s[$this->_p]) && ((97 <= $_2_ && $_2_ <= 122) || (65 <= $_2_ && $_2_ <= 90) || (48 <= $_2_ && $_2_ <= 57))) {
                                $_2 = array(TRUE, substr($this->_s, $this->_p, 1));
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('[a-zA-Z0-9]', $this->_expected)) {
                                        $this->_expected[] = '[a-zA-Z0-9]';
                                    }
                                }
                            }
                            if (!$_2[0]) {
                                $_2 = array(FALSE, NULL);
                                break;
                            }
                            $_3 = array(TRUE, array());
                            do {
                                $_pos3 = $this->_p;
                                $_4 = array(FALSE, NULL);
                                $_4_ = ord(substr($this->_s, $this->_p, 1));
                                if (isset($this->_s[$this->_p]) && ((97 <= $_4_ && $_4_ <= 122) || (65 <= $_4_ && $_4_ <= 90) || (48 <= $_4_ && $_4_ <= 57) || ($_4_ === 95))) {
                                    $_4 = array(TRUE, substr($this->_s, $this->_p, 1));
                                    $this->_p += 1;
                                } else {
                                    if ($this->_p >= $this->_maxp) {
                                        if ($this->_p > $this->_maxp) {
                                            $this->_maxp = $this->_p;
                                            $this->_expected = array();
                                        }
                                    
                                        if (!in_array('[a-zA-Z0-9_]', $this->_expected)) {
                                            $this->_expected[] = '[a-zA-Z0-9_]';
                                        }
                                    }
                                }
                                if (!$_4[0]) { $this->_p = $_pos3; }
                                else { $_3[1][] = $_4[1]; }
                            } while ($_4[0]);
                            $_3[1] = implode('', (array) $_3[1]);
                            if (!$_3[0]) {
                                $_2 = array(FALSE, NULL);
                                break;
                            }
                            $_2 = array(TRUE, implode('', array($_2[1], $_3[1])));
                        } while(0);
                        if (!$_2[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_3 = array(TRUE, array());
                        do {
                            $_pos3 = $this->_p;
                            $_4 = array(FALSE, NULL);
                            $_pos4 = $this->_p;
                            do {
                                $_5 = array(FALSE, NULL);
                                $_5_ = ord(substr($this->_s, $this->_p, 1));
                                if (isset($this->_s[$this->_p]) && (($_5_ === 32) || ($_5_ === 9) || ($_5_ === 13) || ($_5_ === 10))) {
                                    $_5 = array(TRUE, substr($this->_s, $this->_p, 1));
                                    $this->_p += 1;
                                } else {
                                    if ($this->_p >= $this->_maxp) {
                                        if ($this->_p > $this->_maxp) {
                                            $this->_maxp = $this->_p;
                                            $this->_expected = array();
                                        }
                                    
                                        if (!in_array('[ \\t\\r\\n]', $this->_expected)) {
                                            $this->_expected[] = '[ \\t\\r\\n]';
                                        }
                                    }
                                }
                                if (!$_5[0]) {
                                    $this->_p = $_pos4;
                                } else {
                                    $_4 = $_5;
                                    break;
                                }
                                do {
                                    $_6 = array(FALSE, NULL);
                                    if (($_6_ = substr($this->_s, $this->_p, 2)) === "//") {
                                        $_6 = array(TRUE, $_6_);
                                        $this->_p += 2;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('"//"', $this->_expected)) {
                                                $this->_expected[] = '"//"';
                                            }
                                        }
                                    }
                                    if (!$_6[0]) {
                                        $_6 = array(FALSE, NULL);
                                        break;
                                    }
                                    $_7 = array(TRUE, array());
                                    do {
                                        $_pos7 = $this->_p;
                                        do {
                                            $_pos8 = $this->_p;
                                            $_9 = array(FALSE, NULL);
                                            $_pos9 = $this->_p;
                                            do {
                                                $_10 = array(FALSE, NULL);
                                                if (($_10_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                    $_10 = array(TRUE, $_10_);
                                                    $this->_p += 2;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_10[0]) {
                                                    $this->_p = $_pos9;
                                                } else {
                                                    $_9 = $_10;
                                                    break;
                                                }
                                                $_11 = array(FALSE, NULL);
                                                if (($_11_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                    $_11 = array(TRUE, $_11_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_11[0]) {
                                                    $this->_p = $_pos9;
                                                } else {
                                                    $_9 = $_11;
                                                    break;
                                                }
                                                $_12 = array(FALSE, NULL);
                                                if (($_12_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                    $_12 = array(TRUE, $_12_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r"';
                                                        }
                                                    }
                                                }
                                                if (!$_12[0]) {
                                                    $this->_p = $_pos9;
                                                } else {
                                                    $_9 = $_12;
                                                    break;
                                                }
                                            } while(0);
                                            $_8 = array(!$_9[0], NULL);
                                            $this->_p = $_pos8;
                                            if (!$_8[0]) {
                                                $_9 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_9 = array(isset($this->_s[$this->_p]), NULL);
                                            if ($_9[0]) {
                                                $_9[1] = $this->_s[$this->_p];
                                                $this->_p += 1;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('any character', $this->_expected)) {
                                                        $this->_expected[] = 'any character';
                                                    }
                                                }
                                            }
                                            if (!$_9[0]) {
                                                $_9 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_9 = array(TRUE, implode('', array($_8[1], $_9[1])));
                                        } while(0);
                                        $_8 = $_9;
                                        if (!$_8[0]) { $this->_p = $_pos7; }
                                        else { $_7[1][] = $_8[1]; }
                                    } while ($_8[0]);
                                    $_7[1] = implode('', (array) $_7[1]);
                                    if (!$_7[0]) {
                                        $_6 = array(FALSE, NULL);
                                        break;
                                    }
                                    $_8 = array(FALSE, NULL);
                                    $_pos8 = $this->_p;
                                    do {
                                        $_9 = array(FALSE, NULL);
                                        if (($_9_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                            $_9 = array(TRUE, $_9_);
                                            $this->_p += 2;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"\\r\\n"', $this->_expected)) {
                                                    $this->_expected[] = '"\\r\\n"';
                                                }
                                            }
                                        }
                                        if (!$_9[0]) {
                                            $this->_p = $_pos8;
                                        } else {
                                            $_8 = $_9;
                                            break;
                                        }
                                        $_10 = array(FALSE, NULL);
                                        if (($_10_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                            $_10 = array(TRUE, $_10_);
                                            $this->_p += 1;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"\\n"', $this->_expected)) {
                                                    $this->_expected[] = '"\\n"';
                                                }
                                            }
                                        }
                                        if (!$_10[0]) {
                                            $this->_p = $_pos8;
                                        } else {
                                            $_8 = $_10;
                                            break;
                                        }
                                        $_11 = array(FALSE, NULL);
                                        if (($_11_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                            $_11 = array(TRUE, $_11_);
                                            $this->_p += 1;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"\\r"', $this->_expected)) {
                                                    $this->_expected[] = '"\\r"';
                                                }
                                            }
                                        }
                                        if (!$_11[0]) {
                                            $this->_p = $_pos8;
                                        } else {
                                            $_8 = $_11;
                                            break;
                                        }
                                    } while(0);
                                    if (!$_8[0]) {
                                        $_6 = array(FALSE, NULL);
                                        break;
                                    }
                                } while(0);
                                if (!$_6[0]) {
                                    $this->_p = $_pos4;
                                } else {
                                    $_4 = $_6;
                                    break;
                                }
                            } while(0);
                            if (!$_4[0]) { $this->_p = $_pos3; }
                            else { $_3[1][] = $_4[1]; }
                        } while ($_4[0]);
                        if (!$_3[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_4 = array(FALSE, NULL);
                        if (($_4_ = substr($this->_s, $this->_p, 1)) === "=") {
                            $_4 = array(TRUE, $_4_);
                            $this->_p += 1;
                        } else {
                            if ($this->_p >= $this->_maxp) {
                                if ($this->_p > $this->_maxp) {
                                    $this->_maxp = $this->_p;
                                    $this->_expected = array();
                                }
                            
                                if (!in_array('"="', $this->_expected)) {
                                    $this->_expected[] = '"="';
                                }
                            }
                        }
                        if (!$_4[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_5 = array(FALSE, NULL);
                        $e =& $_5;
                        $_5 = $this->_parse_expression();
                        if (!$_5[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                    } while(0);
                    $_0 = array(FALSE, NULL);
                    if ($_1[0]) {
                        $_0 = array(TRUE, $this->_1($n[1], $e[1]));
                    }
            
                    $this->_memo['rule:' . ((string) $_oldp)] = $_m = array_merge($_0, array($this->_p));
            
                    return $_0;
                }
                $this->_p = $_m[2];
                return array($_m[0], $_m[1]);
            }
            function _parse_expression() {
                $_m = NULL;
                $k = 'expression:' . ((string) $_oldp = $this->_p);
                if (isset($this->_memo[$k])) {
                    $_m = $this->_memo[$k];
                }
            
                if ($_m === NULL) {
                    do {
                        $_1 = array(TRUE, array());
                        do {
                            $_pos1 = $this->_p;
                            $_2 = array(FALSE, NULL);
                            $_pos2 = $this->_p;
                            do {
                                $_3 = array(FALSE, NULL);
                                $_3_ = ord(substr($this->_s, $this->_p, 1));
                                if (isset($this->_s[$this->_p]) && (($_3_ === 32) || ($_3_ === 9) || ($_3_ === 13) || ($_3_ === 10))) {
                                    $_3 = array(TRUE, substr($this->_s, $this->_p, 1));
                                    $this->_p += 1;
                                } else {
                                    if ($this->_p >= $this->_maxp) {
                                        if ($this->_p > $this->_maxp) {
                                            $this->_maxp = $this->_p;
                                            $this->_expected = array();
                                        }
                                    
                                        if (!in_array('[ \\t\\r\\n]', $this->_expected)) {
                                            $this->_expected[] = '[ \\t\\r\\n]';
                                        }
                                    }
                                }
                                if (!$_3[0]) {
                                    $this->_p = $_pos2;
                                } else {
                                    $_2 = $_3;
                                    break;
                                }
                                do {
                                    $_4 = array(FALSE, NULL);
                                    if (($_4_ = substr($this->_s, $this->_p, 2)) === "//") {
                                        $_4 = array(TRUE, $_4_);
                                        $this->_p += 2;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('"//"', $this->_expected)) {
                                                $this->_expected[] = '"//"';
                                            }
                                        }
                                    }
                                    if (!$_4[0]) {
                                        $_4 = array(FALSE, NULL);
                                        break;
                                    }
                                    $_5 = array(TRUE, array());
                                    do {
                                        $_pos5 = $this->_p;
                                        do {
                                            $_pos6 = $this->_p;
                                            $_7 = array(FALSE, NULL);
                                            $_pos7 = $this->_p;
                                            do {
                                                $_8 = array(FALSE, NULL);
                                                if (($_8_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                    $_8 = array(TRUE, $_8_);
                                                    $this->_p += 2;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_8[0]) {
                                                    $this->_p = $_pos7;
                                                } else {
                                                    $_7 = $_8;
                                                    break;
                                                }
                                                $_9 = array(FALSE, NULL);
                                                if (($_9_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                    $_9 = array(TRUE, $_9_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_9[0]) {
                                                    $this->_p = $_pos7;
                                                } else {
                                                    $_7 = $_9;
                                                    break;
                                                }
                                                $_10 = array(FALSE, NULL);
                                                if (($_10_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                    $_10 = array(TRUE, $_10_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r"';
                                                        }
                                                    }
                                                }
                                                if (!$_10[0]) {
                                                    $this->_p = $_pos7;
                                                } else {
                                                    $_7 = $_10;
                                                    break;
                                                }
                                            } while(0);
                                            $_6 = array(!$_7[0], NULL);
                                            $this->_p = $_pos6;
                                            if (!$_6[0]) {
                                                $_7 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_7 = array(isset($this->_s[$this->_p]), NULL);
                                            if ($_7[0]) {
                                                $_7[1] = $this->_s[$this->_p];
                                                $this->_p += 1;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('any character', $this->_expected)) {
                                                        $this->_expected[] = 'any character';
                                                    }
                                                }
                                            }
                                            if (!$_7[0]) {
                                                $_7 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_7 = array(TRUE, implode('', array($_6[1], $_7[1])));
                                        } while(0);
                                        $_6 = $_7;
                                        if (!$_6[0]) { $this->_p = $_pos5; }
                                        else { $_5[1][] = $_6[1]; }
                                    } while ($_6[0]);
                                    $_5[1] = implode('', (array) $_5[1]);
                                    if (!$_5[0]) {
                                        $_4 = array(FALSE, NULL);
                                        break;
                                    }
                                    $_6 = array(FALSE, NULL);
                                    $_pos6 = $this->_p;
                                    do {
                                        $_7 = array(FALSE, NULL);
                                        if (($_7_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                            $_7 = array(TRUE, $_7_);
                                            $this->_p += 2;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"\\r\\n"', $this->_expected)) {
                                                    $this->_expected[] = '"\\r\\n"';
                                                }
                                            }
                                        }
                                        if (!$_7[0]) {
                                            $this->_p = $_pos6;
                                        } else {
                                            $_6 = $_7;
                                            break;
                                        }
                                        $_8 = array(FALSE, NULL);
                                        if (($_8_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                            $_8 = array(TRUE, $_8_);
                                            $this->_p += 1;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"\\n"', $this->_expected)) {
                                                    $this->_expected[] = '"\\n"';
                                                }
                                            }
                                        }
                                        if (!$_8[0]) {
                                            $this->_p = $_pos6;
                                        } else {
                                            $_6 = $_8;
                                            break;
                                        }
                                        $_9 = array(FALSE, NULL);
                                        if (($_9_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                            $_9 = array(TRUE, $_9_);
                                            $this->_p += 1;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"\\r"', $this->_expected)) {
                                                    $this->_expected[] = '"\\r"';
                                                }
                                            }
                                        }
                                        if (!$_9[0]) {
                                            $this->_p = $_pos6;
                                        } else {
                                            $_6 = $_9;
                                            break;
                                        }
                                    } while(0);
                                    if (!$_6[0]) {
                                        $_4 = array(FALSE, NULL);
                                        break;
                                    }
                                } while(0);
                                if (!$_4[0]) {
                                    $this->_p = $_pos2;
                                } else {
                                    $_2 = $_4;
                                    break;
                                }
                            } while(0);
                            if (!$_2[0]) { $this->_p = $_pos1; }
                            else { $_1[1][] = $_2[1]; }
                        } while ($_2[0]);
                        if (!$_1[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_2 = array(FALSE, NULL);
                        $s =& $_2;
                        $_2 = $this->_parse_sequence();
                        if (!$_2[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_3 = array(FALSE, NULL);
                        $ss =& $_3;
                        $_3 = array(TRUE, array());
                        do {
                            $_pos3 = $this->_p;
                            do {
                                $_5 = array(TRUE, array());
                                do {
                                    $_pos5 = $this->_p;
                                    $_6 = array(FALSE, NULL);
                                    $_pos6 = $this->_p;
                                    do {
                                        $_7 = array(FALSE, NULL);
                                        $_7_ = ord(substr($this->_s, $this->_p, 1));
                                        if (isset($this->_s[$this->_p]) && (($_7_ === 32) || ($_7_ === 9) || ($_7_ === 13) || ($_7_ === 10))) {
                                            $_7 = array(TRUE, substr($this->_s, $this->_p, 1));
                                            $this->_p += 1;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('[ \\t\\r\\n]', $this->_expected)) {
                                                    $this->_expected[] = '[ \\t\\r\\n]';
                                                }
                                            }
                                        }
                                        if (!$_7[0]) {
                                            $this->_p = $_pos6;
                                        } else {
                                            $_6 = $_7;
                                            break;
                                        }
                                        do {
                                            $_8 = array(FALSE, NULL);
                                            if (($_8_ = substr($this->_s, $this->_p, 2)) === "//") {
                                                $_8 = array(TRUE, $_8_);
                                                $this->_p += 2;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"//"', $this->_expected)) {
                                                        $this->_expected[] = '"//"';
                                                    }
                                                }
                                            }
                                            if (!$_8[0]) {
                                                $_8 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_9 = array(TRUE, array());
                                            do {
                                                $_pos9 = $this->_p;
                                                do {
                                                    $_pos10 = $this->_p;
                                                    $_11 = array(FALSE, NULL);
                                                    $_pos11 = $this->_p;
                                                    do {
                                                        $_12 = array(FALSE, NULL);
                                                        if (($_12_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                            $_12 = array(TRUE, $_12_);
                                                            $this->_p += 2;
                                                        } else {
                                                            if ($this->_p >= $this->_maxp) {
                                                                if ($this->_p > $this->_maxp) {
                                                                    $this->_maxp = $this->_p;
                                                                    $this->_expected = array();
                                                                }
                                                            
                                                                if (!in_array('"\\r\\n"', $this->_expected)) {
                                                                    $this->_expected[] = '"\\r\\n"';
                                                                }
                                                            }
                                                        }
                                                        if (!$_12[0]) {
                                                            $this->_p = $_pos11;
                                                        } else {
                                                            $_11 = $_12;
                                                            break;
                                                        }
                                                        $_13 = array(FALSE, NULL);
                                                        if (($_13_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                            $_13 = array(TRUE, $_13_);
                                                            $this->_p += 1;
                                                        } else {
                                                            if ($this->_p >= $this->_maxp) {
                                                                if ($this->_p > $this->_maxp) {
                                                                    $this->_maxp = $this->_p;
                                                                    $this->_expected = array();
                                                                }
                                                            
                                                                if (!in_array('"\\n"', $this->_expected)) {
                                                                    $this->_expected[] = '"\\n"';
                                                                }
                                                            }
                                                        }
                                                        if (!$_13[0]) {
                                                            $this->_p = $_pos11;
                                                        } else {
                                                            $_11 = $_13;
                                                            break;
                                                        }
                                                        $_14 = array(FALSE, NULL);
                                                        if (($_14_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                            $_14 = array(TRUE, $_14_);
                                                            $this->_p += 1;
                                                        } else {
                                                            if ($this->_p >= $this->_maxp) {
                                                                if ($this->_p > $this->_maxp) {
                                                                    $this->_maxp = $this->_p;
                                                                    $this->_expected = array();
                                                                }
                                                            
                                                                if (!in_array('"\\r"', $this->_expected)) {
                                                                    $this->_expected[] = '"\\r"';
                                                                }
                                                            }
                                                        }
                                                        if (!$_14[0]) {
                                                            $this->_p = $_pos11;
                                                        } else {
                                                            $_11 = $_14;
                                                            break;
                                                        }
                                                    } while(0);
                                                    $_10 = array(!$_11[0], NULL);
                                                    $this->_p = $_pos10;
                                                    if (!$_10[0]) {
                                                        $_11 = array(FALSE, NULL);
                                                        break;
                                                    }
                                                    $_11 = array(isset($this->_s[$this->_p]), NULL);
                                                    if ($_11[0]) {
                                                        $_11[1] = $this->_s[$this->_p];
                                                        $this->_p += 1;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('any character', $this->_expected)) {
                                                                $this->_expected[] = 'any character';
                                                            }
                                                        }
                                                    }
                                                    if (!$_11[0]) {
                                                        $_11 = array(FALSE, NULL);
                                                        break;
                                                    }
                                                    $_11 = array(TRUE, implode('', array($_10[1], $_11[1])));
                                                } while(0);
                                                $_10 = $_11;
                                                if (!$_10[0]) { $this->_p = $_pos9; }
                                                else { $_9[1][] = $_10[1]; }
                                            } while ($_10[0]);
                                            $_9[1] = implode('', (array) $_9[1]);
                                            if (!$_9[0]) {
                                                $_8 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_10 = array(FALSE, NULL);
                                            $_pos10 = $this->_p;
                                            do {
                                                $_11 = array(FALSE, NULL);
                                                if (($_11_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                    $_11 = array(TRUE, $_11_);
                                                    $this->_p += 2;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_11[0]) {
                                                    $this->_p = $_pos10;
                                                } else {
                                                    $_10 = $_11;
                                                    break;
                                                }
                                                $_12 = array(FALSE, NULL);
                                                if (($_12_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                    $_12 = array(TRUE, $_12_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_12[0]) {
                                                    $this->_p = $_pos10;
                                                } else {
                                                    $_10 = $_12;
                                                    break;
                                                }
                                                $_13 = array(FALSE, NULL);
                                                if (($_13_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                    $_13 = array(TRUE, $_13_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r"';
                                                        }
                                                    }
                                                }
                                                if (!$_13[0]) {
                                                    $this->_p = $_pos10;
                                                } else {
                                                    $_10 = $_13;
                                                    break;
                                                }
                                            } while(0);
                                            if (!$_10[0]) {
                                                $_8 = array(FALSE, NULL);
                                                break;
                                            }
                                        } while(0);
                                        if (!$_8[0]) {
                                            $this->_p = $_pos6;
                                        } else {
                                            $_6 = $_8;
                                            break;
                                        }
                                    } while(0);
                                    if (!$_6[0]) { $this->_p = $_pos5; }
                                    else { $_5[1][] = $_6[1]; }
                                } while ($_6[0]);
                                if (!$_5[0]) {
                                    $_5 = array(FALSE, NULL);
                                    break;
                                }
                                $_6 = array(FALSE, NULL);
                                if (($_6_ = substr($this->_s, $this->_p, 1)) === "/") {
                                    $_6 = array(TRUE, $_6_);
                                    $this->_p += 1;
                                } else {
                                    if ($this->_p >= $this->_maxp) {
                                        if ($this->_p > $this->_maxp) {
                                            $this->_maxp = $this->_p;
                                            $this->_expected = array();
                                        }
                                    
                                        if (!in_array('"/"', $this->_expected)) {
                                            $this->_expected[] = '"/"';
                                        }
                                    }
                                }
                                if (!$_6[0]) {
                                    $_5 = array(FALSE, NULL);
                                    break;
                                }
                                $_7 = array(TRUE, array());
                                do {
                                    $_pos7 = $this->_p;
                                    $_8 = array(FALSE, NULL);
                                    $_pos8 = $this->_p;
                                    do {
                                        $_9 = array(FALSE, NULL);
                                        $_9_ = ord(substr($this->_s, $this->_p, 1));
                                        if (isset($this->_s[$this->_p]) && (($_9_ === 32) || ($_9_ === 9) || ($_9_ === 13) || ($_9_ === 10))) {
                                            $_9 = array(TRUE, substr($this->_s, $this->_p, 1));
                                            $this->_p += 1;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('[ \\t\\r\\n]', $this->_expected)) {
                                                    $this->_expected[] = '[ \\t\\r\\n]';
                                                }
                                            }
                                        }
                                        if (!$_9[0]) {
                                            $this->_p = $_pos8;
                                        } else {
                                            $_8 = $_9;
                                            break;
                                        }
                                        do {
                                            $_10 = array(FALSE, NULL);
                                            if (($_10_ = substr($this->_s, $this->_p, 2)) === "//") {
                                                $_10 = array(TRUE, $_10_);
                                                $this->_p += 2;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"//"', $this->_expected)) {
                                                        $this->_expected[] = '"//"';
                                                    }
                                                }
                                            }
                                            if (!$_10[0]) {
                                                $_10 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_11 = array(TRUE, array());
                                            do {
                                                $_pos11 = $this->_p;
                                                do {
                                                    $_pos12 = $this->_p;
                                                    $_13 = array(FALSE, NULL);
                                                    $_pos13 = $this->_p;
                                                    do {
                                                        $_14 = array(FALSE, NULL);
                                                        if (($_14_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                            $_14 = array(TRUE, $_14_);
                                                            $this->_p += 2;
                                                        } else {
                                                            if ($this->_p >= $this->_maxp) {
                                                                if ($this->_p > $this->_maxp) {
                                                                    $this->_maxp = $this->_p;
                                                                    $this->_expected = array();
                                                                }
                                                            
                                                                if (!in_array('"\\r\\n"', $this->_expected)) {
                                                                    $this->_expected[] = '"\\r\\n"';
                                                                }
                                                            }
                                                        }
                                                        if (!$_14[0]) {
                                                            $this->_p = $_pos13;
                                                        } else {
                                                            $_13 = $_14;
                                                            break;
                                                        }
                                                        $_15 = array(FALSE, NULL);
                                                        if (($_15_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                            $_15 = array(TRUE, $_15_);
                                                            $this->_p += 1;
                                                        } else {
                                                            if ($this->_p >= $this->_maxp) {
                                                                if ($this->_p > $this->_maxp) {
                                                                    $this->_maxp = $this->_p;
                                                                    $this->_expected = array();
                                                                }
                                                            
                                                                if (!in_array('"\\n"', $this->_expected)) {
                                                                    $this->_expected[] = '"\\n"';
                                                                }
                                                            }
                                                        }
                                                        if (!$_15[0]) {
                                                            $this->_p = $_pos13;
                                                        } else {
                                                            $_13 = $_15;
                                                            break;
                                                        }
                                                        $_16 = array(FALSE, NULL);
                                                        if (($_16_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                            $_16 = array(TRUE, $_16_);
                                                            $this->_p += 1;
                                                        } else {
                                                            if ($this->_p >= $this->_maxp) {
                                                                if ($this->_p > $this->_maxp) {
                                                                    $this->_maxp = $this->_p;
                                                                    $this->_expected = array();
                                                                }
                                                            
                                                                if (!in_array('"\\r"', $this->_expected)) {
                                                                    $this->_expected[] = '"\\r"';
                                                                }
                                                            }
                                                        }
                                                        if (!$_16[0]) {
                                                            $this->_p = $_pos13;
                                                        } else {
                                                            $_13 = $_16;
                                                            break;
                                                        }
                                                    } while(0);
                                                    $_12 = array(!$_13[0], NULL);
                                                    $this->_p = $_pos12;
                                                    if (!$_12[0]) {
                                                        $_13 = array(FALSE, NULL);
                                                        break;
                                                    }
                                                    $_13 = array(isset($this->_s[$this->_p]), NULL);
                                                    if ($_13[0]) {
                                                        $_13[1] = $this->_s[$this->_p];
                                                        $this->_p += 1;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('any character', $this->_expected)) {
                                                                $this->_expected[] = 'any character';
                                                            }
                                                        }
                                                    }
                                                    if (!$_13[0]) {
                                                        $_13 = array(FALSE, NULL);
                                                        break;
                                                    }
                                                    $_13 = array(TRUE, implode('', array($_12[1], $_13[1])));
                                                } while(0);
                                                $_12 = $_13;
                                                if (!$_12[0]) { $this->_p = $_pos11; }
                                                else { $_11[1][] = $_12[1]; }
                                            } while ($_12[0]);
                                            $_11[1] = implode('', (array) $_11[1]);
                                            if (!$_11[0]) {
                                                $_10 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_12 = array(FALSE, NULL);
                                            $_pos12 = $this->_p;
                                            do {
                                                $_13 = array(FALSE, NULL);
                                                if (($_13_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                    $_13 = array(TRUE, $_13_);
                                                    $this->_p += 2;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_13[0]) {
                                                    $this->_p = $_pos12;
                                                } else {
                                                    $_12 = $_13;
                                                    break;
                                                }
                                                $_14 = array(FALSE, NULL);
                                                if (($_14_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                    $_14 = array(TRUE, $_14_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_14[0]) {
                                                    $this->_p = $_pos12;
                                                } else {
                                                    $_12 = $_14;
                                                    break;
                                                }
                                                $_15 = array(FALSE, NULL);
                                                if (($_15_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                    $_15 = array(TRUE, $_15_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r"';
                                                        }
                                                    }
                                                }
                                                if (!$_15[0]) {
                                                    $this->_p = $_pos12;
                                                } else {
                                                    $_12 = $_15;
                                                    break;
                                                }
                                            } while(0);
                                            if (!$_12[0]) {
                                                $_10 = array(FALSE, NULL);
                                                break;
                                            }
                                        } while(0);
                                        if (!$_10[0]) {
                                            $this->_p = $_pos8;
                                        } else {
                                            $_8 = $_10;
                                            break;
                                        }
                                    } while(0);
                                    if (!$_8[0]) { $this->_p = $_pos7; }
                                    else { $_7[1][] = $_8[1]; }
                                } while ($_8[0]);
                                if (!$_7[0]) {
                                    $_5 = array(FALSE, NULL);
                                    break;
                                }
                                $_8 = array(FALSE, NULL);
                                $is =& $_8;
                                $_8 = $this->_parse_sequence();
                                if (!$_8[0]) {
                                    $_5 = array(FALSE, NULL);
                                    break;
                                }
                            } while(0);
                            $_4 = array(FALSE, NULL);
                            if ($_5[0]) {
                                $_4 = array(TRUE, $this->_2($s[1], $ss[1], $is[1]));
                            }
                            if (!$_4[0]) { $this->_p = $_pos3; }
                            else { $_3[1][] = $_4[1]; }
                        } while ($_4[0]);
                        if (!$_3[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_4 = array(TRUE, array());
                        do {
                            $_pos4 = $this->_p;
                            $_5 = array(FALSE, NULL);
                            $_pos5 = $this->_p;
                            do {
                                $_6 = array(FALSE, NULL);
                                $_6_ = ord(substr($this->_s, $this->_p, 1));
                                if (isset($this->_s[$this->_p]) && (($_6_ === 32) || ($_6_ === 9) || ($_6_ === 13) || ($_6_ === 10))) {
                                    $_6 = array(TRUE, substr($this->_s, $this->_p, 1));
                                    $this->_p += 1;
                                } else {
                                    if ($this->_p >= $this->_maxp) {
                                        if ($this->_p > $this->_maxp) {
                                            $this->_maxp = $this->_p;
                                            $this->_expected = array();
                                        }
                                    
                                        if (!in_array('[ \\t\\r\\n]', $this->_expected)) {
                                            $this->_expected[] = '[ \\t\\r\\n]';
                                        }
                                    }
                                }
                                if (!$_6[0]) {
                                    $this->_p = $_pos5;
                                } else {
                                    $_5 = $_6;
                                    break;
                                }
                                do {
                                    $_7 = array(FALSE, NULL);
                                    if (($_7_ = substr($this->_s, $this->_p, 2)) === "//") {
                                        $_7 = array(TRUE, $_7_);
                                        $this->_p += 2;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('"//"', $this->_expected)) {
                                                $this->_expected[] = '"//"';
                                            }
                                        }
                                    }
                                    if (!$_7[0]) {
                                        $_7 = array(FALSE, NULL);
                                        break;
                                    }
                                    $_8 = array(TRUE, array());
                                    do {
                                        $_pos8 = $this->_p;
                                        do {
                                            $_pos9 = $this->_p;
                                            $_10 = array(FALSE, NULL);
                                            $_pos10 = $this->_p;
                                            do {
                                                $_11 = array(FALSE, NULL);
                                                if (($_11_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                    $_11 = array(TRUE, $_11_);
                                                    $this->_p += 2;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_11[0]) {
                                                    $this->_p = $_pos10;
                                                } else {
                                                    $_10 = $_11;
                                                    break;
                                                }
                                                $_12 = array(FALSE, NULL);
                                                if (($_12_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                    $_12 = array(TRUE, $_12_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_12[0]) {
                                                    $this->_p = $_pos10;
                                                } else {
                                                    $_10 = $_12;
                                                    break;
                                                }
                                                $_13 = array(FALSE, NULL);
                                                if (($_13_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                    $_13 = array(TRUE, $_13_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r"';
                                                        }
                                                    }
                                                }
                                                if (!$_13[0]) {
                                                    $this->_p = $_pos10;
                                                } else {
                                                    $_10 = $_13;
                                                    break;
                                                }
                                            } while(0);
                                            $_9 = array(!$_10[0], NULL);
                                            $this->_p = $_pos9;
                                            if (!$_9[0]) {
                                                $_10 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_10 = array(isset($this->_s[$this->_p]), NULL);
                                            if ($_10[0]) {
                                                $_10[1] = $this->_s[$this->_p];
                                                $this->_p += 1;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('any character', $this->_expected)) {
                                                        $this->_expected[] = 'any character';
                                                    }
                                                }
                                            }
                                            if (!$_10[0]) {
                                                $_10 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_10 = array(TRUE, implode('', array($_9[1], $_10[1])));
                                        } while(0);
                                        $_9 = $_10;
                                        if (!$_9[0]) { $this->_p = $_pos8; }
                                        else { $_8[1][] = $_9[1]; }
                                    } while ($_9[0]);
                                    $_8[1] = implode('', (array) $_8[1]);
                                    if (!$_8[0]) {
                                        $_7 = array(FALSE, NULL);
                                        break;
                                    }
                                    $_9 = array(FALSE, NULL);
                                    $_pos9 = $this->_p;
                                    do {
                                        $_10 = array(FALSE, NULL);
                                        if (($_10_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                            $_10 = array(TRUE, $_10_);
                                            $this->_p += 2;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"\\r\\n"', $this->_expected)) {
                                                    $this->_expected[] = '"\\r\\n"';
                                                }
                                            }
                                        }
                                        if (!$_10[0]) {
                                            $this->_p = $_pos9;
                                        } else {
                                            $_9 = $_10;
                                            break;
                                        }
                                        $_11 = array(FALSE, NULL);
                                        if (($_11_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                            $_11 = array(TRUE, $_11_);
                                            $this->_p += 1;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"\\n"', $this->_expected)) {
                                                    $this->_expected[] = '"\\n"';
                                                }
                                            }
                                        }
                                        if (!$_11[0]) {
                                            $this->_p = $_pos9;
                                        } else {
                                            $_9 = $_11;
                                            break;
                                        }
                                        $_12 = array(FALSE, NULL);
                                        if (($_12_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                            $_12 = array(TRUE, $_12_);
                                            $this->_p += 1;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"\\r"', $this->_expected)) {
                                                    $this->_expected[] = '"\\r"';
                                                }
                                            }
                                        }
                                        if (!$_12[0]) {
                                            $this->_p = $_pos9;
                                        } else {
                                            $_9 = $_12;
                                            break;
                                        }
                                    } while(0);
                                    if (!$_9[0]) {
                                        $_7 = array(FALSE, NULL);
                                        break;
                                    }
                                } while(0);
                                if (!$_7[0]) {
                                    $this->_p = $_pos5;
                                } else {
                                    $_5 = $_7;
                                    break;
                                }
                            } while(0);
                            if (!$_5[0]) { $this->_p = $_pos4; }
                            else { $_4[1][] = $_5[1]; }
                        } while ($_5[0]);
                        if (!$_4[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                    } while(0);
                    $_0 = array(FALSE, NULL);
                    if ($_1[0]) {
                        $_0 = array(TRUE, $this->_3($s[1], $ss[1]));
                    }
            
                    $this->_memo['expression:' . ((string) $_oldp)] = $_m = array_merge($_0, array($this->_p));
            
                    return $_0;
                }
                $this->_p = $_m[2];
                return array($_m[0], $_m[1]);
            }
            function _parse_sequence() {
                $_m = NULL;
                $k = 'sequence:' . ((string) $_oldp = $this->_p);
                if (isset($this->_memo[$k])) {
                    $_m = $this->_memo[$k];
                }
            
                if ($_m === NULL) {
                    do {
                        $_1 = array(FALSE, NULL);
                        $ps =& $_1;
                        $_1 = array(FALSE, NULL);
                        do {
                            $_3 = array(TRUE, array());
                            do {
                                $_pos3 = $this->_p;
                                $_4 = array(FALSE, NULL);
                                $_pos4 = $this->_p;
                                do {
                                    $_5 = array(FALSE, NULL);
                                    $_5_ = ord(substr($this->_s, $this->_p, 1));
                                    if (isset($this->_s[$this->_p]) && (($_5_ === 32) || ($_5_ === 9) || ($_5_ === 13) || ($_5_ === 10))) {
                                        $_5 = array(TRUE, substr($this->_s, $this->_p, 1));
                                        $this->_p += 1;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('[ \\t\\r\\n]', $this->_expected)) {
                                                $this->_expected[] = '[ \\t\\r\\n]';
                                            }
                                        }
                                    }
                                    if (!$_5[0]) {
                                        $this->_p = $_pos4;
                                    } else {
                                        $_4 = $_5;
                                        break;
                                    }
                                    do {
                                        $_6 = array(FALSE, NULL);
                                        if (($_6_ = substr($this->_s, $this->_p, 2)) === "//") {
                                            $_6 = array(TRUE, $_6_);
                                            $this->_p += 2;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"//"', $this->_expected)) {
                                                    $this->_expected[] = '"//"';
                                                }
                                            }
                                        }
                                        if (!$_6[0]) {
                                            $_6 = array(FALSE, NULL);
                                            break;
                                        }
                                        $_7 = array(TRUE, array());
                                        do {
                                            $_pos7 = $this->_p;
                                            do {
                                                $_pos8 = $this->_p;
                                                $_9 = array(FALSE, NULL);
                                                $_pos9 = $this->_p;
                                                do {
                                                    $_10 = array(FALSE, NULL);
                                                    if (($_10_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                        $_10 = array(TRUE, $_10_);
                                                        $this->_p += 2;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('"\\r\\n"', $this->_expected)) {
                                                                $this->_expected[] = '"\\r\\n"';
                                                            }
                                                        }
                                                    }
                                                    if (!$_10[0]) {
                                                        $this->_p = $_pos9;
                                                    } else {
                                                        $_9 = $_10;
                                                        break;
                                                    }
                                                    $_11 = array(FALSE, NULL);
                                                    if (($_11_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                        $_11 = array(TRUE, $_11_);
                                                        $this->_p += 1;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('"\\n"', $this->_expected)) {
                                                                $this->_expected[] = '"\\n"';
                                                            }
                                                        }
                                                    }
                                                    if (!$_11[0]) {
                                                        $this->_p = $_pos9;
                                                    } else {
                                                        $_9 = $_11;
                                                        break;
                                                    }
                                                    $_12 = array(FALSE, NULL);
                                                    if (($_12_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                        $_12 = array(TRUE, $_12_);
                                                        $this->_p += 1;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('"\\r"', $this->_expected)) {
                                                                $this->_expected[] = '"\\r"';
                                                            }
                                                        }
                                                    }
                                                    if (!$_12[0]) {
                                                        $this->_p = $_pos9;
                                                    } else {
                                                        $_9 = $_12;
                                                        break;
                                                    }
                                                } while(0);
                                                $_8 = array(!$_9[0], NULL);
                                                $this->_p = $_pos8;
                                                if (!$_8[0]) {
                                                    $_9 = array(FALSE, NULL);
                                                    break;
                                                }
                                                $_9 = array(isset($this->_s[$this->_p]), NULL);
                                                if ($_9[0]) {
                                                    $_9[1] = $this->_s[$this->_p];
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('any character', $this->_expected)) {
                                                            $this->_expected[] = 'any character';
                                                        }
                                                    }
                                                }
                                                if (!$_9[0]) {
                                                    $_9 = array(FALSE, NULL);
                                                    break;
                                                }
                                                $_9 = array(TRUE, implode('', array($_8[1], $_9[1])));
                                            } while(0);
                                            $_8 = $_9;
                                            if (!$_8[0]) { $this->_p = $_pos7; }
                                            else { $_7[1][] = $_8[1]; }
                                        } while ($_8[0]);
                                        $_7[1] = implode('', (array) $_7[1]);
                                        if (!$_7[0]) {
                                            $_6 = array(FALSE, NULL);
                                            break;
                                        }
                                        $_8 = array(FALSE, NULL);
                                        $_pos8 = $this->_p;
                                        do {
                                            $_9 = array(FALSE, NULL);
                                            if (($_9_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                $_9 = array(TRUE, $_9_);
                                                $this->_p += 2;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"\\r\\n"', $this->_expected)) {
                                                        $this->_expected[] = '"\\r\\n"';
                                                    }
                                                }
                                            }
                                            if (!$_9[0]) {
                                                $this->_p = $_pos8;
                                            } else {
                                                $_8 = $_9;
                                                break;
                                            }
                                            $_10 = array(FALSE, NULL);
                                            if (($_10_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                $_10 = array(TRUE, $_10_);
                                                $this->_p += 1;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"\\n"', $this->_expected)) {
                                                        $this->_expected[] = '"\\n"';
                                                    }
                                                }
                                            }
                                            if (!$_10[0]) {
                                                $this->_p = $_pos8;
                                            } else {
                                                $_8 = $_10;
                                                break;
                                            }
                                            $_11 = array(FALSE, NULL);
                                            if (($_11_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                $_11 = array(TRUE, $_11_);
                                                $this->_p += 1;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"\\r"', $this->_expected)) {
                                                        $this->_expected[] = '"\\r"';
                                                    }
                                                }
                                            }
                                            if (!$_11[0]) {
                                                $this->_p = $_pos8;
                                            } else {
                                                $_8 = $_11;
                                                break;
                                            }
                                        } while(0);
                                        if (!$_8[0]) {
                                            $_6 = array(FALSE, NULL);
                                            break;
                                        }
                                    } while(0);
                                    if (!$_6[0]) {
                                        $this->_p = $_pos4;
                                    } else {
                                        $_4 = $_6;
                                        break;
                                    }
                                } while(0);
                                if (!$_4[0]) { $this->_p = $_pos3; }
                                else { $_3[1][] = $_4[1]; }
                            } while ($_4[0]);
                            if (!$_3[0]) {
                                $_3 = array(FALSE, NULL);
                                break;
                            }
                            $_4 = array(FALSE, NULL);
                            $p =& $_4;
                            $_4 = $this->_parse_prefix();
                            if (!$_4[0]) {
                                $_3 = array(FALSE, NULL);
                                break;
                            }
                        } while(0);
                        $_2 = array(FALSE, NULL);
                        if ($_3[0]) {
                            $_2 = array(TRUE, $this->_4($ps[1], $p[1]));
                        }
                        if ($_2[0]) { $_1[1] = (array) $_1[1]; $_1[1][] = $_2[1]; }
                        $_1[0] = $_2[0];
                        while ($_2[0]) {
                            $_pos1 = $this->_p;
                            do {
                                $_3 = array(TRUE, array());
                                do {
                                    $_pos3 = $this->_p;
                                    $_4 = array(FALSE, NULL);
                                    $_pos4 = $this->_p;
                                    do {
                                        $_5 = array(FALSE, NULL);
                                        $_5_ = ord(substr($this->_s, $this->_p, 1));
                                        if (isset($this->_s[$this->_p]) && (($_5_ === 32) || ($_5_ === 9) || ($_5_ === 13) || ($_5_ === 10))) {
                                            $_5 = array(TRUE, substr($this->_s, $this->_p, 1));
                                            $this->_p += 1;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('[ \\t\\r\\n]', $this->_expected)) {
                                                    $this->_expected[] = '[ \\t\\r\\n]';
                                                }
                                            }
                                        }
                                        if (!$_5[0]) {
                                            $this->_p = $_pos4;
                                        } else {
                                            $_4 = $_5;
                                            break;
                                        }
                                        do {
                                            $_6 = array(FALSE, NULL);
                                            if (($_6_ = substr($this->_s, $this->_p, 2)) === "//") {
                                                $_6 = array(TRUE, $_6_);
                                                $this->_p += 2;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"//"', $this->_expected)) {
                                                        $this->_expected[] = '"//"';
                                                    }
                                                }
                                            }
                                            if (!$_6[0]) {
                                                $_6 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_7 = array(TRUE, array());
                                            do {
                                                $_pos7 = $this->_p;
                                                do {
                                                    $_pos8 = $this->_p;
                                                    $_9 = array(FALSE, NULL);
                                                    $_pos9 = $this->_p;
                                                    do {
                                                        $_10 = array(FALSE, NULL);
                                                        if (($_10_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                            $_10 = array(TRUE, $_10_);
                                                            $this->_p += 2;
                                                        } else {
                                                            if ($this->_p >= $this->_maxp) {
                                                                if ($this->_p > $this->_maxp) {
                                                                    $this->_maxp = $this->_p;
                                                                    $this->_expected = array();
                                                                }
                                                            
                                                                if (!in_array('"\\r\\n"', $this->_expected)) {
                                                                    $this->_expected[] = '"\\r\\n"';
                                                                }
                                                            }
                                                        }
                                                        if (!$_10[0]) {
                                                            $this->_p = $_pos9;
                                                        } else {
                                                            $_9 = $_10;
                                                            break;
                                                        }
                                                        $_11 = array(FALSE, NULL);
                                                        if (($_11_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                            $_11 = array(TRUE, $_11_);
                                                            $this->_p += 1;
                                                        } else {
                                                            if ($this->_p >= $this->_maxp) {
                                                                if ($this->_p > $this->_maxp) {
                                                                    $this->_maxp = $this->_p;
                                                                    $this->_expected = array();
                                                                }
                                                            
                                                                if (!in_array('"\\n"', $this->_expected)) {
                                                                    $this->_expected[] = '"\\n"';
                                                                }
                                                            }
                                                        }
                                                        if (!$_11[0]) {
                                                            $this->_p = $_pos9;
                                                        } else {
                                                            $_9 = $_11;
                                                            break;
                                                        }
                                                        $_12 = array(FALSE, NULL);
                                                        if (($_12_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                            $_12 = array(TRUE, $_12_);
                                                            $this->_p += 1;
                                                        } else {
                                                            if ($this->_p >= $this->_maxp) {
                                                                if ($this->_p > $this->_maxp) {
                                                                    $this->_maxp = $this->_p;
                                                                    $this->_expected = array();
                                                                }
                                                            
                                                                if (!in_array('"\\r"', $this->_expected)) {
                                                                    $this->_expected[] = '"\\r"';
                                                                }
                                                            }
                                                        }
                                                        if (!$_12[0]) {
                                                            $this->_p = $_pos9;
                                                        } else {
                                                            $_9 = $_12;
                                                            break;
                                                        }
                                                    } while(0);
                                                    $_8 = array(!$_9[0], NULL);
                                                    $this->_p = $_pos8;
                                                    if (!$_8[0]) {
                                                        $_9 = array(FALSE, NULL);
                                                        break;
                                                    }
                                                    $_9 = array(isset($this->_s[$this->_p]), NULL);
                                                    if ($_9[0]) {
                                                        $_9[1] = $this->_s[$this->_p];
                                                        $this->_p += 1;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('any character', $this->_expected)) {
                                                                $this->_expected[] = 'any character';
                                                            }
                                                        }
                                                    }
                                                    if (!$_9[0]) {
                                                        $_9 = array(FALSE, NULL);
                                                        break;
                                                    }
                                                    $_9 = array(TRUE, implode('', array($_8[1], $_9[1])));
                                                } while(0);
                                                $_8 = $_9;
                                                if (!$_8[0]) { $this->_p = $_pos7; }
                                                else { $_7[1][] = $_8[1]; }
                                            } while ($_8[0]);
                                            $_7[1] = implode('', (array) $_7[1]);
                                            if (!$_7[0]) {
                                                $_6 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_8 = array(FALSE, NULL);
                                            $_pos8 = $this->_p;
                                            do {
                                                $_9 = array(FALSE, NULL);
                                                if (($_9_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                    $_9 = array(TRUE, $_9_);
                                                    $this->_p += 2;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_9[0]) {
                                                    $this->_p = $_pos8;
                                                } else {
                                                    $_8 = $_9;
                                                    break;
                                                }
                                                $_10 = array(FALSE, NULL);
                                                if (($_10_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                    $_10 = array(TRUE, $_10_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_10[0]) {
                                                    $this->_p = $_pos8;
                                                } else {
                                                    $_8 = $_10;
                                                    break;
                                                }
                                                $_11 = array(FALSE, NULL);
                                                if (($_11_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                    $_11 = array(TRUE, $_11_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r"';
                                                        }
                                                    }
                                                }
                                                if (!$_11[0]) {
                                                    $this->_p = $_pos8;
                                                } else {
                                                    $_8 = $_11;
                                                    break;
                                                }
                                            } while(0);
                                            if (!$_8[0]) {
                                                $_6 = array(FALSE, NULL);
                                                break;
                                            }
                                        } while(0);
                                        if (!$_6[0]) {
                                            $this->_p = $_pos4;
                                        } else {
                                            $_4 = $_6;
                                            break;
                                        }
                                    } while(0);
                                    if (!$_4[0]) { $this->_p = $_pos3; }
                                    else { $_3[1][] = $_4[1]; }
                                } while ($_4[0]);
                                if (!$_3[0]) {
                                    $_3 = array(FALSE, NULL);
                                    break;
                                }
                                $_4 = array(FALSE, NULL);
                                $p =& $_4;
                                $_4 = $this->_parse_prefix();
                                if (!$_4[0]) {
                                    $_3 = array(FALSE, NULL);
                                    break;
                                }
                            } while(0);
                            $_2 = array(FALSE, NULL);
                            if ($_3[0]) {
                                $_2 = array(TRUE, $this->_5($ps[1], $p[1]));
                            }
                            $_1[1] = (array) $_1[1];
                            if (!$_2[0]) { $this->_p = $_pos1; }
                            else { $_1[1][] = $_2[1]; };
                        }
                        if (!$_1[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_2 = array(FALSE, NULL);
                        $a =& $_2;
                        $_2 = array(TRUE, NULL);
                        $_pos2 = $this->_p;
                        do {
                            $_4 = array(TRUE, array());
                            do {
                                $_pos4 = $this->_p;
                                $_5 = array(FALSE, NULL);
                                $_pos5 = $this->_p;
                                do {
                                    $_6 = array(FALSE, NULL);
                                    $_6_ = ord(substr($this->_s, $this->_p, 1));
                                    if (isset($this->_s[$this->_p]) && (($_6_ === 32) || ($_6_ === 9) || ($_6_ === 13) || ($_6_ === 10))) {
                                        $_6 = array(TRUE, substr($this->_s, $this->_p, 1));
                                        $this->_p += 1;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('[ \\t\\r\\n]', $this->_expected)) {
                                                $this->_expected[] = '[ \\t\\r\\n]';
                                            }
                                        }
                                    }
                                    if (!$_6[0]) {
                                        $this->_p = $_pos5;
                                    } else {
                                        $_5 = $_6;
                                        break;
                                    }
                                    do {
                                        $_7 = array(FALSE, NULL);
                                        if (($_7_ = substr($this->_s, $this->_p, 2)) === "//") {
                                            $_7 = array(TRUE, $_7_);
                                            $this->_p += 2;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"//"', $this->_expected)) {
                                                    $this->_expected[] = '"//"';
                                                }
                                            }
                                        }
                                        if (!$_7[0]) {
                                            $_7 = array(FALSE, NULL);
                                            break;
                                        }
                                        $_8 = array(TRUE, array());
                                        do {
                                            $_pos8 = $this->_p;
                                            do {
                                                $_pos9 = $this->_p;
                                                $_10 = array(FALSE, NULL);
                                                $_pos10 = $this->_p;
                                                do {
                                                    $_11 = array(FALSE, NULL);
                                                    if (($_11_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                        $_11 = array(TRUE, $_11_);
                                                        $this->_p += 2;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('"\\r\\n"', $this->_expected)) {
                                                                $this->_expected[] = '"\\r\\n"';
                                                            }
                                                        }
                                                    }
                                                    if (!$_11[0]) {
                                                        $this->_p = $_pos10;
                                                    } else {
                                                        $_10 = $_11;
                                                        break;
                                                    }
                                                    $_12 = array(FALSE, NULL);
                                                    if (($_12_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                        $_12 = array(TRUE, $_12_);
                                                        $this->_p += 1;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('"\\n"', $this->_expected)) {
                                                                $this->_expected[] = '"\\n"';
                                                            }
                                                        }
                                                    }
                                                    if (!$_12[0]) {
                                                        $this->_p = $_pos10;
                                                    } else {
                                                        $_10 = $_12;
                                                        break;
                                                    }
                                                    $_13 = array(FALSE, NULL);
                                                    if (($_13_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                        $_13 = array(TRUE, $_13_);
                                                        $this->_p += 1;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('"\\r"', $this->_expected)) {
                                                                $this->_expected[] = '"\\r"';
                                                            }
                                                        }
                                                    }
                                                    if (!$_13[0]) {
                                                        $this->_p = $_pos10;
                                                    } else {
                                                        $_10 = $_13;
                                                        break;
                                                    }
                                                } while(0);
                                                $_9 = array(!$_10[0], NULL);
                                                $this->_p = $_pos9;
                                                if (!$_9[0]) {
                                                    $_10 = array(FALSE, NULL);
                                                    break;
                                                }
                                                $_10 = array(isset($this->_s[$this->_p]), NULL);
                                                if ($_10[0]) {
                                                    $_10[1] = $this->_s[$this->_p];
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('any character', $this->_expected)) {
                                                            $this->_expected[] = 'any character';
                                                        }
                                                    }
                                                }
                                                if (!$_10[0]) {
                                                    $_10 = array(FALSE, NULL);
                                                    break;
                                                }
                                                $_10 = array(TRUE, implode('', array($_9[1], $_10[1])));
                                            } while(0);
                                            $_9 = $_10;
                                            if (!$_9[0]) { $this->_p = $_pos8; }
                                            else { $_8[1][] = $_9[1]; }
                                        } while ($_9[0]);
                                        $_8[1] = implode('', (array) $_8[1]);
                                        if (!$_8[0]) {
                                            $_7 = array(FALSE, NULL);
                                            break;
                                        }
                                        $_9 = array(FALSE, NULL);
                                        $_pos9 = $this->_p;
                                        do {
                                            $_10 = array(FALSE, NULL);
                                            if (($_10_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                $_10 = array(TRUE, $_10_);
                                                $this->_p += 2;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"\\r\\n"', $this->_expected)) {
                                                        $this->_expected[] = '"\\r\\n"';
                                                    }
                                                }
                                            }
                                            if (!$_10[0]) {
                                                $this->_p = $_pos9;
                                            } else {
                                                $_9 = $_10;
                                                break;
                                            }
                                            $_11 = array(FALSE, NULL);
                                            if (($_11_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                $_11 = array(TRUE, $_11_);
                                                $this->_p += 1;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"\\n"', $this->_expected)) {
                                                        $this->_expected[] = '"\\n"';
                                                    }
                                                }
                                            }
                                            if (!$_11[0]) {
                                                $this->_p = $_pos9;
                                            } else {
                                                $_9 = $_11;
                                                break;
                                            }
                                            $_12 = array(FALSE, NULL);
                                            if (($_12_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                $_12 = array(TRUE, $_12_);
                                                $this->_p += 1;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"\\r"', $this->_expected)) {
                                                        $this->_expected[] = '"\\r"';
                                                    }
                                                }
                                            }
                                            if (!$_12[0]) {
                                                $this->_p = $_pos9;
                                            } else {
                                                $_9 = $_12;
                                                break;
                                            }
                                        } while(0);
                                        if (!$_9[0]) {
                                            $_7 = array(FALSE, NULL);
                                            break;
                                        }
                                    } while(0);
                                    if (!$_7[0]) {
                                        $this->_p = $_pos5;
                                    } else {
                                        $_5 = $_7;
                                        break;
                                    }
                                } while(0);
                                if (!$_5[0]) { $this->_p = $_pos4; }
                                else { $_4[1][] = $_5[1]; }
                            } while ($_5[0]);
                            if (!$_4[0]) {
                                $_4 = array(FALSE, NULL);
                                break;
                            }
                            $_5 = array(FALSE, NULL);
                            if (($_5_ = substr($this->_s, $this->_p, 2)) === "->") {
                                $_5 = array(TRUE, $_5_);
                                $this->_p += 2;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('"->"', $this->_expected)) {
                                        $this->_expected[] = '"->"';
                                    }
                                }
                            }
                            if (!$_5[0]) {
                                $_4 = array(FALSE, NULL);
                                break;
                            }
                            $_6 = array(TRUE, array());
                            do {
                                $_pos6 = $this->_p;
                                $_7 = array(FALSE, NULL);
                                $_pos7 = $this->_p;
                                do {
                                    $_8 = array(FALSE, NULL);
                                    $_8_ = ord(substr($this->_s, $this->_p, 1));
                                    if (isset($this->_s[$this->_p]) && (($_8_ === 32) || ($_8_ === 9) || ($_8_ === 13) || ($_8_ === 10))) {
                                        $_8 = array(TRUE, substr($this->_s, $this->_p, 1));
                                        $this->_p += 1;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('[ \\t\\r\\n]', $this->_expected)) {
                                                $this->_expected[] = '[ \\t\\r\\n]';
                                            }
                                        }
                                    }
                                    if (!$_8[0]) {
                                        $this->_p = $_pos7;
                                    } else {
                                        $_7 = $_8;
                                        break;
                                    }
                                    do {
                                        $_9 = array(FALSE, NULL);
                                        if (($_9_ = substr($this->_s, $this->_p, 2)) === "//") {
                                            $_9 = array(TRUE, $_9_);
                                            $this->_p += 2;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"//"', $this->_expected)) {
                                                    $this->_expected[] = '"//"';
                                                }
                                            }
                                        }
                                        if (!$_9[0]) {
                                            $_9 = array(FALSE, NULL);
                                            break;
                                        }
                                        $_10 = array(TRUE, array());
                                        do {
                                            $_pos10 = $this->_p;
                                            do {
                                                $_pos11 = $this->_p;
                                                $_12 = array(FALSE, NULL);
                                                $_pos12 = $this->_p;
                                                do {
                                                    $_13 = array(FALSE, NULL);
                                                    if (($_13_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                        $_13 = array(TRUE, $_13_);
                                                        $this->_p += 2;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('"\\r\\n"', $this->_expected)) {
                                                                $this->_expected[] = '"\\r\\n"';
                                                            }
                                                        }
                                                    }
                                                    if (!$_13[0]) {
                                                        $this->_p = $_pos12;
                                                    } else {
                                                        $_12 = $_13;
                                                        break;
                                                    }
                                                    $_14 = array(FALSE, NULL);
                                                    if (($_14_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                        $_14 = array(TRUE, $_14_);
                                                        $this->_p += 1;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('"\\n"', $this->_expected)) {
                                                                $this->_expected[] = '"\\n"';
                                                            }
                                                        }
                                                    }
                                                    if (!$_14[0]) {
                                                        $this->_p = $_pos12;
                                                    } else {
                                                        $_12 = $_14;
                                                        break;
                                                    }
                                                    $_15 = array(FALSE, NULL);
                                                    if (($_15_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                        $_15 = array(TRUE, $_15_);
                                                        $this->_p += 1;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('"\\r"', $this->_expected)) {
                                                                $this->_expected[] = '"\\r"';
                                                            }
                                                        }
                                                    }
                                                    if (!$_15[0]) {
                                                        $this->_p = $_pos12;
                                                    } else {
                                                        $_12 = $_15;
                                                        break;
                                                    }
                                                } while(0);
                                                $_11 = array(!$_12[0], NULL);
                                                $this->_p = $_pos11;
                                                if (!$_11[0]) {
                                                    $_12 = array(FALSE, NULL);
                                                    break;
                                                }
                                                $_12 = array(isset($this->_s[$this->_p]), NULL);
                                                if ($_12[0]) {
                                                    $_12[1] = $this->_s[$this->_p];
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('any character', $this->_expected)) {
                                                            $this->_expected[] = 'any character';
                                                        }
                                                    }
                                                }
                                                if (!$_12[0]) {
                                                    $_12 = array(FALSE, NULL);
                                                    break;
                                                }
                                                $_12 = array(TRUE, implode('', array($_11[1], $_12[1])));
                                            } while(0);
                                            $_11 = $_12;
                                            if (!$_11[0]) { $this->_p = $_pos10; }
                                            else { $_10[1][] = $_11[1]; }
                                        } while ($_11[0]);
                                        $_10[1] = implode('', (array) $_10[1]);
                                        if (!$_10[0]) {
                                            $_9 = array(FALSE, NULL);
                                            break;
                                        }
                                        $_11 = array(FALSE, NULL);
                                        $_pos11 = $this->_p;
                                        do {
                                            $_12 = array(FALSE, NULL);
                                            if (($_12_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                $_12 = array(TRUE, $_12_);
                                                $this->_p += 2;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"\\r\\n"', $this->_expected)) {
                                                        $this->_expected[] = '"\\r\\n"';
                                                    }
                                                }
                                            }
                                            if (!$_12[0]) {
                                                $this->_p = $_pos11;
                                            } else {
                                                $_11 = $_12;
                                                break;
                                            }
                                            $_13 = array(FALSE, NULL);
                                            if (($_13_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                $_13 = array(TRUE, $_13_);
                                                $this->_p += 1;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"\\n"', $this->_expected)) {
                                                        $this->_expected[] = '"\\n"';
                                                    }
                                                }
                                            }
                                            if (!$_13[0]) {
                                                $this->_p = $_pos11;
                                            } else {
                                                $_11 = $_13;
                                                break;
                                            }
                                            $_14 = array(FALSE, NULL);
                                            if (($_14_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                $_14 = array(TRUE, $_14_);
                                                $this->_p += 1;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"\\r"', $this->_expected)) {
                                                        $this->_expected[] = '"\\r"';
                                                    }
                                                }
                                            }
                                            if (!$_14[0]) {
                                                $this->_p = $_pos11;
                                            } else {
                                                $_11 = $_14;
                                                break;
                                            }
                                        } while(0);
                                        if (!$_11[0]) {
                                            $_9 = array(FALSE, NULL);
                                            break;
                                        }
                                    } while(0);
                                    if (!$_9[0]) {
                                        $this->_p = $_pos7;
                                    } else {
                                        $_7 = $_9;
                                        break;
                                    }
                                } while(0);
                                if (!$_7[0]) { $this->_p = $_pos6; }
                                else { $_6[1][] = $_7[1]; }
                            } while ($_7[0]);
                            if (!$_6[0]) {
                                $_4 = array(FALSE, NULL);
                                break;
                            }
                            $_7 = array(FALSE, NULL);
                            $ac =& $_7;
                            $_7 = $this->_parse_ACTION();
                            if (!$_7[0]) {
                                $_4 = array(FALSE, NULL);
                                break;
                            }
                        } while(0);
                        $_3 = array(FALSE, NULL);
                        if ($_4[0]) {
                            $_3 = array(TRUE, $this->_6($ps[1], $a[1], $ac[1]));
                        }
                        if (!$_3[0]) {
                            $this->_p = $_pos2;
                        } else {
                            $_2 = $_3;
                        }
                        if (!$_2[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                    } while(0);
                    $_0 = array(FALSE, NULL);
                    if ($_1[0]) {
                        $_0 = array(TRUE, $this->_7($ps[1], $a[1]));
                    }
            
                    $this->_memo['sequence:' . ((string) $_oldp)] = $_m = array_merge($_0, array($this->_p));
            
                    return $_0;
                }
                $this->_p = $_m[2];
                return array($_m[0], $_m[1]);
            }
            function _parse_prefix() {
                $_m = NULL;
                $k = 'prefix:' . ((string) $_oldp = $this->_p);
                if (isset($this->_memo[$k])) {
                    $_m = $this->_memo[$k];
                }
            
                if ($_m === NULL) {
                    $_0 = array(FALSE, NULL);
                    $_pos0 = $this->_p;
                    do {
                        do {
                            $_2 = array(FALSE, NULL);
                            $p =& $_2;
                            $_2 = array(FALSE, NULL);
                            $_2_ = ord(substr($this->_s, $this->_p, 1));
                            if (isset($this->_s[$this->_p]) && (($_2_ === 38) || ($_2_ === 33))) {
                                $_2 = array(TRUE, substr($this->_s, $this->_p, 1));
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('[&!]', $this->_expected)) {
                                        $this->_expected[] = '[&!]';
                                    }
                                }
                            }
                            if (!$_2[0]) {
                                $_2 = array(FALSE, NULL);
                                break;
                            }
                            $_3 = array(FALSE, NULL);
                            $s =& $_3;
                            $_3 = $this->_parse_suffix();
                            if (!$_3[0]) {
                                $_2 = array(FALSE, NULL);
                                break;
                            }
                        } while(0);
                        $_1 = array(FALSE, NULL);
                        if ($_2[0]) {
                            $_1 = array(TRUE, $this->_8($p[1], $s[1]));
                        }
                        if (!$_1[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_1;
                            break;
                        }
                        do {
                            $_3 = array(FALSE, NULL);
                            if (($_3_ = substr($this->_s, $this->_p, 1)) === "?") {
                                $_3 = array(TRUE, $_3_);
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('"?"', $this->_expected)) {
                                        $this->_expected[] = '"?"';
                                    }
                                }
                            }
                            if (!$_3[0]) {
                                $_3 = array(FALSE, NULL);
                                break;
                            }
                            $_4 = array(FALSE, NULL);
                            $a =& $_4;
                            $_4 = $this->_parse_ACTION();
                            if (!$_4[0]) {
                                $_3 = array(FALSE, NULL);
                                break;
                            }
                        } while(0);
                        $_2 = array(FALSE, NULL);
                        if ($_3[0]) {
                            $_2 = array(TRUE, $this->_9($a[1]));
                        }
                        if (!$_2[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_2;
                            break;
                        }
                        do {
                            $_4 = array(FALSE, NULL);
                            $id =& $_4;
                            do {
                                $_4 = array(FALSE, NULL);
                                $_4_ = ord(substr($this->_s, $this->_p, 1));
                                if (isset($this->_s[$this->_p]) && ((97 <= $_4_ && $_4_ <= 122) || (65 <= $_4_ && $_4_ <= 90) || (48 <= $_4_ && $_4_ <= 57))) {
                                    $_4 = array(TRUE, substr($this->_s, $this->_p, 1));
                                    $this->_p += 1;
                                } else {
                                    if ($this->_p >= $this->_maxp) {
                                        if ($this->_p > $this->_maxp) {
                                            $this->_maxp = $this->_p;
                                            $this->_expected = array();
                                        }
                                    
                                        if (!in_array('[a-zA-Z0-9]', $this->_expected)) {
                                            $this->_expected[] = '[a-zA-Z0-9]';
                                        }
                                    }
                                }
                                if (!$_4[0]) {
                                    $_4 = array(FALSE, NULL);
                                    break;
                                }
                                $_5 = array(TRUE, array());
                                do {
                                    $_pos5 = $this->_p;
                                    $_6 = array(FALSE, NULL);
                                    $_6_ = ord(substr($this->_s, $this->_p, 1));
                                    if (isset($this->_s[$this->_p]) && ((97 <= $_6_ && $_6_ <= 122) || (65 <= $_6_ && $_6_ <= 90) || (48 <= $_6_ && $_6_ <= 57) || ($_6_ === 95))) {
                                        $_6 = array(TRUE, substr($this->_s, $this->_p, 1));
                                        $this->_p += 1;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('[a-zA-Z0-9_]', $this->_expected)) {
                                                $this->_expected[] = '[a-zA-Z0-9_]';
                                            }
                                        }
                                    }
                                    if (!$_6[0]) { $this->_p = $_pos5; }
                                    else { $_5[1][] = $_6[1]; }
                                } while ($_6[0]);
                                $_5[1] = implode('', (array) $_5[1]);
                                if (!$_5[0]) {
                                    $_4 = array(FALSE, NULL);
                                    break;
                                }
                                $_4 = array(TRUE, implode('', array($_4[1], $_5[1])));
                            } while(0);
                            if (!$_4[0]) {
                                $_4 = array(FALSE, NULL);
                                break;
                            }
                            $_5 = array(FALSE, NULL);
                            if (($_5_ = substr($this->_s, $this->_p, 1)) === ":") {
                                $_5 = array(TRUE, $_5_);
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('":"', $this->_expected)) {
                                        $this->_expected[] = '":"';
                                    }
                                }
                            }
                            if (!$_5[0]) {
                                $_4 = array(FALSE, NULL);
                                break;
                            }
                            $_6 = array(FALSE, NULL);
                            $s =& $_6;
                            $_6 = $this->_parse_suffix();
                            if (!$_6[0]) {
                                $_4 = array(FALSE, NULL);
                                break;
                            }
                        } while(0);
                        $_3 = array(FALSE, NULL);
                        if ($_4[0]) {
                            $_3 = array(TRUE, $this->_10($id[1], $s[1]));
                        }
                        if (!$_3[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_3;
                            break;
                        }
                        $_4 = $this->_parse_suffix();
                        if (!$_4[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_4;
                            break;
                        }
                    } while(0);
            
                    $this->_memo['prefix:' . ((string) $_oldp)] = $_m = array_merge($_0, array($this->_p));
            
                    return $_0;
                }
                $this->_p = $_m[2];
                return array($_m[0], $_m[1]);
            }
            function _parse_suffix() {
                $_m = NULL;
                $k = 'suffix:' . ((string) $_oldp = $this->_p);
                if (isset($this->_memo[$k])) {
                    $_m = $this->_memo[$k];
                }
            
                if ($_m === NULL) {
                    do {
                        $_1 = array(FALSE, NULL);
                        $p =& $_1;
                        $_1 = $this->_parse_primary();
                        if (!$_1[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_2 = array(FALSE, NULL);
                        $s =& $_2;
                        $_2 = array(TRUE, NULL);
                        $_pos2 = $this->_p;
                        $_3 = array(FALSE, NULL);
                        $_3_ = ord(substr($this->_s, $this->_p, 1));
                        if (isset($this->_s[$this->_p]) && (($_3_ === 63) || ($_3_ === 42) || ($_3_ === 43))) {
                            $_3 = array(TRUE, substr($this->_s, $this->_p, 1));
                            $this->_p += 1;
                        } else {
                            if ($this->_p >= $this->_maxp) {
                                if ($this->_p > $this->_maxp) {
                                    $this->_maxp = $this->_p;
                                    $this->_expected = array();
                                }
                            
                                if (!in_array('[?*+]', $this->_expected)) {
                                    $this->_expected[] = '[?*+]';
                                }
                            }
                        }
                        if (!$_3[0]) {
                            $this->_p = $_pos2;
                        } else {
                            $_2 = $_3;
                        }
                        if (!$_2[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                    } while(0);
                    $_0 = array(FALSE, NULL);
                    if ($_1[0]) {
                        $_0 = array(TRUE, $this->_11($p[1], $s[1]));
                    }
            
                    $this->_memo['suffix:' . ((string) $_oldp)] = $_m = array_merge($_0, array($this->_p));
            
                    return $_0;
                }
                $this->_p = $_m[2];
                return array($_m[0], $_m[1]);
            }
            function _parse_primary() {
                $_m = NULL;
                $k = 'primary:' . ((string) $_oldp = $this->_p);
                if (isset($this->_memo[$k])) {
                    $_m = $this->_memo[$k];
                }
            
                if ($_m === NULL) {
                    $_0 = array(FALSE, NULL);
                    $_pos0 = $this->_p;
                    do {
                        do {
                            $_2 = array(FALSE, NULL);
                            $id =& $_2;
                            do {
                                $_2 = array(FALSE, NULL);
                                $_2_ = ord(substr($this->_s, $this->_p, 1));
                                if (isset($this->_s[$this->_p]) && ((97 <= $_2_ && $_2_ <= 122) || (65 <= $_2_ && $_2_ <= 90) || (48 <= $_2_ && $_2_ <= 57))) {
                                    $_2 = array(TRUE, substr($this->_s, $this->_p, 1));
                                    $this->_p += 1;
                                } else {
                                    if ($this->_p >= $this->_maxp) {
                                        if ($this->_p > $this->_maxp) {
                                            $this->_maxp = $this->_p;
                                            $this->_expected = array();
                                        }
                                    
                                        if (!in_array('[a-zA-Z0-9]', $this->_expected)) {
                                            $this->_expected[] = '[a-zA-Z0-9]';
                                        }
                                    }
                                }
                                if (!$_2[0]) {
                                    $_2 = array(FALSE, NULL);
                                    break;
                                }
                                $_3 = array(TRUE, array());
                                do {
                                    $_pos3 = $this->_p;
                                    $_4 = array(FALSE, NULL);
                                    $_4_ = ord(substr($this->_s, $this->_p, 1));
                                    if (isset($this->_s[$this->_p]) && ((97 <= $_4_ && $_4_ <= 122) || (65 <= $_4_ && $_4_ <= 90) || (48 <= $_4_ && $_4_ <= 57) || ($_4_ === 95))) {
                                        $_4 = array(TRUE, substr($this->_s, $this->_p, 1));
                                        $this->_p += 1;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('[a-zA-Z0-9_]', $this->_expected)) {
                                                $this->_expected[] = '[a-zA-Z0-9_]';
                                            }
                                        }
                                    }
                                    if (!$_4[0]) { $this->_p = $_pos3; }
                                    else { $_3[1][] = $_4[1]; }
                                } while ($_4[0]);
                                $_3[1] = implode('', (array) $_3[1]);
                                if (!$_3[0]) {
                                    $_2 = array(FALSE, NULL);
                                    break;
                                }
                                $_2 = array(TRUE, implode('', array($_2[1], $_3[1])));
                            } while(0);
                            if (!$_2[0]) {
                                $_2 = array(FALSE, NULL);
                                break;
                            }
                            $_pos3 = $this->_p;
                            do {
                                $_4 = array(TRUE, array());
                                do {
                                    $_pos4 = $this->_p;
                                    $_5 = array(FALSE, NULL);
                                    $_pos5 = $this->_p;
                                    do {
                                        $_6 = array(FALSE, NULL);
                                        $_6_ = ord(substr($this->_s, $this->_p, 1));
                                        if (isset($this->_s[$this->_p]) && (($_6_ === 32) || ($_6_ === 9) || ($_6_ === 13) || ($_6_ === 10))) {
                                            $_6 = array(TRUE, substr($this->_s, $this->_p, 1));
                                            $this->_p += 1;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('[ \\t\\r\\n]', $this->_expected)) {
                                                    $this->_expected[] = '[ \\t\\r\\n]';
                                                }
                                            }
                                        }
                                        if (!$_6[0]) {
                                            $this->_p = $_pos5;
                                        } else {
                                            $_5 = $_6;
                                            break;
                                        }
                                        do {
                                            $_7 = array(FALSE, NULL);
                                            if (($_7_ = substr($this->_s, $this->_p, 2)) === "//") {
                                                $_7 = array(TRUE, $_7_);
                                                $this->_p += 2;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"//"', $this->_expected)) {
                                                        $this->_expected[] = '"//"';
                                                    }
                                                }
                                            }
                                            if (!$_7[0]) {
                                                $_7 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_8 = array(TRUE, array());
                                            do {
                                                $_pos8 = $this->_p;
                                                do {
                                                    $_pos9 = $this->_p;
                                                    $_10 = array(FALSE, NULL);
                                                    $_pos10 = $this->_p;
                                                    do {
                                                        $_11 = array(FALSE, NULL);
                                                        if (($_11_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                            $_11 = array(TRUE, $_11_);
                                                            $this->_p += 2;
                                                        } else {
                                                            if ($this->_p >= $this->_maxp) {
                                                                if ($this->_p > $this->_maxp) {
                                                                    $this->_maxp = $this->_p;
                                                                    $this->_expected = array();
                                                                }
                                                            
                                                                if (!in_array('"\\r\\n"', $this->_expected)) {
                                                                    $this->_expected[] = '"\\r\\n"';
                                                                }
                                                            }
                                                        }
                                                        if (!$_11[0]) {
                                                            $this->_p = $_pos10;
                                                        } else {
                                                            $_10 = $_11;
                                                            break;
                                                        }
                                                        $_12 = array(FALSE, NULL);
                                                        if (($_12_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                            $_12 = array(TRUE, $_12_);
                                                            $this->_p += 1;
                                                        } else {
                                                            if ($this->_p >= $this->_maxp) {
                                                                if ($this->_p > $this->_maxp) {
                                                                    $this->_maxp = $this->_p;
                                                                    $this->_expected = array();
                                                                }
                                                            
                                                                if (!in_array('"\\n"', $this->_expected)) {
                                                                    $this->_expected[] = '"\\n"';
                                                                }
                                                            }
                                                        }
                                                        if (!$_12[0]) {
                                                            $this->_p = $_pos10;
                                                        } else {
                                                            $_10 = $_12;
                                                            break;
                                                        }
                                                        $_13 = array(FALSE, NULL);
                                                        if (($_13_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                            $_13 = array(TRUE, $_13_);
                                                            $this->_p += 1;
                                                        } else {
                                                            if ($this->_p >= $this->_maxp) {
                                                                if ($this->_p > $this->_maxp) {
                                                                    $this->_maxp = $this->_p;
                                                                    $this->_expected = array();
                                                                }
                                                            
                                                                if (!in_array('"\\r"', $this->_expected)) {
                                                                    $this->_expected[] = '"\\r"';
                                                                }
                                                            }
                                                        }
                                                        if (!$_13[0]) {
                                                            $this->_p = $_pos10;
                                                        } else {
                                                            $_10 = $_13;
                                                            break;
                                                        }
                                                    } while(0);
                                                    $_9 = array(!$_10[0], NULL);
                                                    $this->_p = $_pos9;
                                                    if (!$_9[0]) {
                                                        $_10 = array(FALSE, NULL);
                                                        break;
                                                    }
                                                    $_10 = array(isset($this->_s[$this->_p]), NULL);
                                                    if ($_10[0]) {
                                                        $_10[1] = $this->_s[$this->_p];
                                                        $this->_p += 1;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('any character', $this->_expected)) {
                                                                $this->_expected[] = 'any character';
                                                            }
                                                        }
                                                    }
                                                    if (!$_10[0]) {
                                                        $_10 = array(FALSE, NULL);
                                                        break;
                                                    }
                                                    $_10 = array(TRUE, implode('', array($_9[1], $_10[1])));
                                                } while(0);
                                                $_9 = $_10;
                                                if (!$_9[0]) { $this->_p = $_pos8; }
                                                else { $_8[1][] = $_9[1]; }
                                            } while ($_9[0]);
                                            $_8[1] = implode('', (array) $_8[1]);
                                            if (!$_8[0]) {
                                                $_7 = array(FALSE, NULL);
                                                break;
                                            }
                                            $_9 = array(FALSE, NULL);
                                            $_pos9 = $this->_p;
                                            do {
                                                $_10 = array(FALSE, NULL);
                                                if (($_10_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                    $_10 = array(TRUE, $_10_);
                                                    $this->_p += 2;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_10[0]) {
                                                    $this->_p = $_pos9;
                                                } else {
                                                    $_9 = $_10;
                                                    break;
                                                }
                                                $_11 = array(FALSE, NULL);
                                                if (($_11_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                    $_11 = array(TRUE, $_11_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\n"', $this->_expected)) {
                                                            $this->_expected[] = '"\\n"';
                                                        }
                                                    }
                                                }
                                                if (!$_11[0]) {
                                                    $this->_p = $_pos9;
                                                } else {
                                                    $_9 = $_11;
                                                    break;
                                                }
                                                $_12 = array(FALSE, NULL);
                                                if (($_12_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                    $_12 = array(TRUE, $_12_);
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('"\\r"', $this->_expected)) {
                                                            $this->_expected[] = '"\\r"';
                                                        }
                                                    }
                                                }
                                                if (!$_12[0]) {
                                                    $this->_p = $_pos9;
                                                } else {
                                                    $_9 = $_12;
                                                    break;
                                                }
                                            } while(0);
                                            if (!$_9[0]) {
                                                $_7 = array(FALSE, NULL);
                                                break;
                                            }
                                        } while(0);
                                        if (!$_7[0]) {
                                            $this->_p = $_pos5;
                                        } else {
                                            $_5 = $_7;
                                            break;
                                        }
                                    } while(0);
                                    if (!$_5[0]) { $this->_p = $_pos4; }
                                    else { $_4[1][] = $_5[1]; }
                                } while ($_5[0]);
                                if (!$_4[0]) {
                                    $_4 = array(FALSE, NULL);
                                    break;
                                }
                                $_5 = array(FALSE, NULL);
                                if (($_5_ = substr($this->_s, $this->_p, 1)) === "=") {
                                    $_5 = array(TRUE, $_5_);
                                    $this->_p += 1;
                                } else {
                                    if ($this->_p >= $this->_maxp) {
                                        if ($this->_p > $this->_maxp) {
                                            $this->_maxp = $this->_p;
                                            $this->_expected = array();
                                        }
                                    
                                        if (!in_array('"="', $this->_expected)) {
                                            $this->_expected[] = '"="';
                                        }
                                    }
                                }
                                if (!$_5[0]) {
                                    $_4 = array(FALSE, NULL);
                                    break;
                                }
                            } while(0);
                            $_3 = array(!$_4[0], NULL);
                            $this->_p = $_pos3;
                            if (!$_3[0]) {
                                $_2 = array(FALSE, NULL);
                                break;
                            }
                        } while(0);
                        $_1 = array(FALSE, NULL);
                        if ($_2[0]) {
                            $_1 = array(TRUE, $this->_12($id[1]));
                        }
                        if (!$_1[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_1;
                            break;
                        }
                        do {
                            $_3 = array(FALSE, NULL);
                            if (($_3_ = substr($this->_s, $this->_p, 1)) === "(") {
                                $_3 = array(TRUE, $_3_);
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('"("', $this->_expected)) {
                                        $this->_expected[] = '"("';
                                    }
                                }
                            }
                            if (!$_3[0]) {
                                $_3 = array(FALSE, NULL);
                                break;
                            }
                            $_4 = array(TRUE, array());
                            do {
                                $_pos4 = $this->_p;
                                $_5 = array(FALSE, NULL);
                                $_pos5 = $this->_p;
                                do {
                                    $_6 = array(FALSE, NULL);
                                    $_6_ = ord(substr($this->_s, $this->_p, 1));
                                    if (isset($this->_s[$this->_p]) && (($_6_ === 32) || ($_6_ === 9) || ($_6_ === 13) || ($_6_ === 10))) {
                                        $_6 = array(TRUE, substr($this->_s, $this->_p, 1));
                                        $this->_p += 1;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('[ \\t\\r\\n]', $this->_expected)) {
                                                $this->_expected[] = '[ \\t\\r\\n]';
                                            }
                                        }
                                    }
                                    if (!$_6[0]) {
                                        $this->_p = $_pos5;
                                    } else {
                                        $_5 = $_6;
                                        break;
                                    }
                                    do {
                                        $_7 = array(FALSE, NULL);
                                        if (($_7_ = substr($this->_s, $this->_p, 2)) === "//") {
                                            $_7 = array(TRUE, $_7_);
                                            $this->_p += 2;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"//"', $this->_expected)) {
                                                    $this->_expected[] = '"//"';
                                                }
                                            }
                                        }
                                        if (!$_7[0]) {
                                            $_7 = array(FALSE, NULL);
                                            break;
                                        }
                                        $_8 = array(TRUE, array());
                                        do {
                                            $_pos8 = $this->_p;
                                            do {
                                                $_pos9 = $this->_p;
                                                $_10 = array(FALSE, NULL);
                                                $_pos10 = $this->_p;
                                                do {
                                                    $_11 = array(FALSE, NULL);
                                                    if (($_11_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                        $_11 = array(TRUE, $_11_);
                                                        $this->_p += 2;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('"\\r\\n"', $this->_expected)) {
                                                                $this->_expected[] = '"\\r\\n"';
                                                            }
                                                        }
                                                    }
                                                    if (!$_11[0]) {
                                                        $this->_p = $_pos10;
                                                    } else {
                                                        $_10 = $_11;
                                                        break;
                                                    }
                                                    $_12 = array(FALSE, NULL);
                                                    if (($_12_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                        $_12 = array(TRUE, $_12_);
                                                        $this->_p += 1;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('"\\n"', $this->_expected)) {
                                                                $this->_expected[] = '"\\n"';
                                                            }
                                                        }
                                                    }
                                                    if (!$_12[0]) {
                                                        $this->_p = $_pos10;
                                                    } else {
                                                        $_10 = $_12;
                                                        break;
                                                    }
                                                    $_13 = array(FALSE, NULL);
                                                    if (($_13_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                        $_13 = array(TRUE, $_13_);
                                                        $this->_p += 1;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('"\\r"', $this->_expected)) {
                                                                $this->_expected[] = '"\\r"';
                                                            }
                                                        }
                                                    }
                                                    if (!$_13[0]) {
                                                        $this->_p = $_pos10;
                                                    } else {
                                                        $_10 = $_13;
                                                        break;
                                                    }
                                                } while(0);
                                                $_9 = array(!$_10[0], NULL);
                                                $this->_p = $_pos9;
                                                if (!$_9[0]) {
                                                    $_10 = array(FALSE, NULL);
                                                    break;
                                                }
                                                $_10 = array(isset($this->_s[$this->_p]), NULL);
                                                if ($_10[0]) {
                                                    $_10[1] = $this->_s[$this->_p];
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('any character', $this->_expected)) {
                                                            $this->_expected[] = 'any character';
                                                        }
                                                    }
                                                }
                                                if (!$_10[0]) {
                                                    $_10 = array(FALSE, NULL);
                                                    break;
                                                }
                                                $_10 = array(TRUE, implode('', array($_9[1], $_10[1])));
                                            } while(0);
                                            $_9 = $_10;
                                            if (!$_9[0]) { $this->_p = $_pos8; }
                                            else { $_8[1][] = $_9[1]; }
                                        } while ($_9[0]);
                                        $_8[1] = implode('', (array) $_8[1]);
                                        if (!$_8[0]) {
                                            $_7 = array(FALSE, NULL);
                                            break;
                                        }
                                        $_9 = array(FALSE, NULL);
                                        $_pos9 = $this->_p;
                                        do {
                                            $_10 = array(FALSE, NULL);
                                            if (($_10_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                $_10 = array(TRUE, $_10_);
                                                $this->_p += 2;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"\\r\\n"', $this->_expected)) {
                                                        $this->_expected[] = '"\\r\\n"';
                                                    }
                                                }
                                            }
                                            if (!$_10[0]) {
                                                $this->_p = $_pos9;
                                            } else {
                                                $_9 = $_10;
                                                break;
                                            }
                                            $_11 = array(FALSE, NULL);
                                            if (($_11_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                $_11 = array(TRUE, $_11_);
                                                $this->_p += 1;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"\\n"', $this->_expected)) {
                                                        $this->_expected[] = '"\\n"';
                                                    }
                                                }
                                            }
                                            if (!$_11[0]) {
                                                $this->_p = $_pos9;
                                            } else {
                                                $_9 = $_11;
                                                break;
                                            }
                                            $_12 = array(FALSE, NULL);
                                            if (($_12_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                $_12 = array(TRUE, $_12_);
                                                $this->_p += 1;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"\\r"', $this->_expected)) {
                                                        $this->_expected[] = '"\\r"';
                                                    }
                                                }
                                            }
                                            if (!$_12[0]) {
                                                $this->_p = $_pos9;
                                            } else {
                                                $_9 = $_12;
                                                break;
                                            }
                                        } while(0);
                                        if (!$_9[0]) {
                                            $_7 = array(FALSE, NULL);
                                            break;
                                        }
                                    } while(0);
                                    if (!$_7[0]) {
                                        $this->_p = $_pos5;
                                    } else {
                                        $_5 = $_7;
                                        break;
                                    }
                                } while(0);
                                if (!$_5[0]) { $this->_p = $_pos4; }
                                else { $_4[1][] = $_5[1]; }
                            } while ($_5[0]);
                            if (!$_4[0]) {
                                $_3 = array(FALSE, NULL);
                                break;
                            }
                            $_5 = array(FALSE, NULL);
                            $e =& $_5;
                            $_5 = $this->_parse_expression();
                            if (!$_5[0]) {
                                $_3 = array(FALSE, NULL);
                                break;
                            }
                            $_6 = array(TRUE, array());
                            do {
                                $_pos6 = $this->_p;
                                $_7 = array(FALSE, NULL);
                                $_pos7 = $this->_p;
                                do {
                                    $_8 = array(FALSE, NULL);
                                    $_8_ = ord(substr($this->_s, $this->_p, 1));
                                    if (isset($this->_s[$this->_p]) && (($_8_ === 32) || ($_8_ === 9) || ($_8_ === 13) || ($_8_ === 10))) {
                                        $_8 = array(TRUE, substr($this->_s, $this->_p, 1));
                                        $this->_p += 1;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('[ \\t\\r\\n]', $this->_expected)) {
                                                $this->_expected[] = '[ \\t\\r\\n]';
                                            }
                                        }
                                    }
                                    if (!$_8[0]) {
                                        $this->_p = $_pos7;
                                    } else {
                                        $_7 = $_8;
                                        break;
                                    }
                                    do {
                                        $_9 = array(FALSE, NULL);
                                        if (($_9_ = substr($this->_s, $this->_p, 2)) === "//") {
                                            $_9 = array(TRUE, $_9_);
                                            $this->_p += 2;
                                        } else {
                                            if ($this->_p >= $this->_maxp) {
                                                if ($this->_p > $this->_maxp) {
                                                    $this->_maxp = $this->_p;
                                                    $this->_expected = array();
                                                }
                                            
                                                if (!in_array('"//"', $this->_expected)) {
                                                    $this->_expected[] = '"//"';
                                                }
                                            }
                                        }
                                        if (!$_9[0]) {
                                            $_9 = array(FALSE, NULL);
                                            break;
                                        }
                                        $_10 = array(TRUE, array());
                                        do {
                                            $_pos10 = $this->_p;
                                            do {
                                                $_pos11 = $this->_p;
                                                $_12 = array(FALSE, NULL);
                                                $_pos12 = $this->_p;
                                                do {
                                                    $_13 = array(FALSE, NULL);
                                                    if (($_13_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                        $_13 = array(TRUE, $_13_);
                                                        $this->_p += 2;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('"\\r\\n"', $this->_expected)) {
                                                                $this->_expected[] = '"\\r\\n"';
                                                            }
                                                        }
                                                    }
                                                    if (!$_13[0]) {
                                                        $this->_p = $_pos12;
                                                    } else {
                                                        $_12 = $_13;
                                                        break;
                                                    }
                                                    $_14 = array(FALSE, NULL);
                                                    if (($_14_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                        $_14 = array(TRUE, $_14_);
                                                        $this->_p += 1;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('"\\n"', $this->_expected)) {
                                                                $this->_expected[] = '"\\n"';
                                                            }
                                                        }
                                                    }
                                                    if (!$_14[0]) {
                                                        $this->_p = $_pos12;
                                                    } else {
                                                        $_12 = $_14;
                                                        break;
                                                    }
                                                    $_15 = array(FALSE, NULL);
                                                    if (($_15_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                        $_15 = array(TRUE, $_15_);
                                                        $this->_p += 1;
                                                    } else {
                                                        if ($this->_p >= $this->_maxp) {
                                                            if ($this->_p > $this->_maxp) {
                                                                $this->_maxp = $this->_p;
                                                                $this->_expected = array();
                                                            }
                                                        
                                                            if (!in_array('"\\r"', $this->_expected)) {
                                                                $this->_expected[] = '"\\r"';
                                                            }
                                                        }
                                                    }
                                                    if (!$_15[0]) {
                                                        $this->_p = $_pos12;
                                                    } else {
                                                        $_12 = $_15;
                                                        break;
                                                    }
                                                } while(0);
                                                $_11 = array(!$_12[0], NULL);
                                                $this->_p = $_pos11;
                                                if (!$_11[0]) {
                                                    $_12 = array(FALSE, NULL);
                                                    break;
                                                }
                                                $_12 = array(isset($this->_s[$this->_p]), NULL);
                                                if ($_12[0]) {
                                                    $_12[1] = $this->_s[$this->_p];
                                                    $this->_p += 1;
                                                } else {
                                                    if ($this->_p >= $this->_maxp) {
                                                        if ($this->_p > $this->_maxp) {
                                                            $this->_maxp = $this->_p;
                                                            $this->_expected = array();
                                                        }
                                                    
                                                        if (!in_array('any character', $this->_expected)) {
                                                            $this->_expected[] = 'any character';
                                                        }
                                                    }
                                                }
                                                if (!$_12[0]) {
                                                    $_12 = array(FALSE, NULL);
                                                    break;
                                                }
                                                $_12 = array(TRUE, implode('', array($_11[1], $_12[1])));
                                            } while(0);
                                            $_11 = $_12;
                                            if (!$_11[0]) { $this->_p = $_pos10; }
                                            else { $_10[1][] = $_11[1]; }
                                        } while ($_11[0]);
                                        $_10[1] = implode('', (array) $_10[1]);
                                        if (!$_10[0]) {
                                            $_9 = array(FALSE, NULL);
                                            break;
                                        }
                                        $_11 = array(FALSE, NULL);
                                        $_pos11 = $this->_p;
                                        do {
                                            $_12 = array(FALSE, NULL);
                                            if (($_12_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                                $_12 = array(TRUE, $_12_);
                                                $this->_p += 2;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"\\r\\n"', $this->_expected)) {
                                                        $this->_expected[] = '"\\r\\n"';
                                                    }
                                                }
                                            }
                                            if (!$_12[0]) {
                                                $this->_p = $_pos11;
                                            } else {
                                                $_11 = $_12;
                                                break;
                                            }
                                            $_13 = array(FALSE, NULL);
                                            if (($_13_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                                $_13 = array(TRUE, $_13_);
                                                $this->_p += 1;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"\\n"', $this->_expected)) {
                                                        $this->_expected[] = '"\\n"';
                                                    }
                                                }
                                            }
                                            if (!$_13[0]) {
                                                $this->_p = $_pos11;
                                            } else {
                                                $_11 = $_13;
                                                break;
                                            }
                                            $_14 = array(FALSE, NULL);
                                            if (($_14_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                                $_14 = array(TRUE, $_14_);
                                                $this->_p += 1;
                                            } else {
                                                if ($this->_p >= $this->_maxp) {
                                                    if ($this->_p > $this->_maxp) {
                                                        $this->_maxp = $this->_p;
                                                        $this->_expected = array();
                                                    }
                                                
                                                    if (!in_array('"\\r"', $this->_expected)) {
                                                        $this->_expected[] = '"\\r"';
                                                    }
                                                }
                                            }
                                            if (!$_14[0]) {
                                                $this->_p = $_pos11;
                                            } else {
                                                $_11 = $_14;
                                                break;
                                            }
                                        } while(0);
                                        if (!$_11[0]) {
                                            $_9 = array(FALSE, NULL);
                                            break;
                                        }
                                    } while(0);
                                    if (!$_9[0]) {
                                        $this->_p = $_pos7;
                                    } else {
                                        $_7 = $_9;
                                        break;
                                    }
                                } while(0);
                                if (!$_7[0]) { $this->_p = $_pos6; }
                                else { $_6[1][] = $_7[1]; }
                            } while ($_7[0]);
                            if (!$_6[0]) {
                                $_3 = array(FALSE, NULL);
                                break;
                            }
                            $_7 = array(FALSE, NULL);
                            if (($_7_ = substr($this->_s, $this->_p, 1)) === ")") {
                                $_7 = array(TRUE, $_7_);
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('")"', $this->_expected)) {
                                        $this->_expected[] = '")"';
                                    }
                                }
                            }
                            if (!$_7[0]) {
                                $_3 = array(FALSE, NULL);
                                break;
                            }
                        } while(0);
                        $_2 = array(FALSE, NULL);
                        if ($_3[0]) {
                            $_2 = array(TRUE, $this->_13($e[1]));
                        }
                        if (!$_2[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_2;
                            break;
                        }
                        $_4 = array(FALSE, NULL);
                        $l =& $_4;
                        $_4 = $this->_parse_literal();
                        $_3 = array(FALSE, NULL);
                        if ($_4[0]) {
                            $_3 = array(TRUE, $this->_14($l[1]));
                        }
                        if (!$_3[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_3;
                            break;
                        }
                        $_5 = array(FALSE, NULL);
                        $r =& $_5;
                        $_5 = $this->_parse_range();
                        $_4 = array(FALSE, NULL);
                        if ($_5[0]) {
                            $_4 = array(TRUE, $this->_15($r[1]));
                        }
                        if (!$_4[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_4;
                            break;
                        }
                        $_6 = array(FALSE, NULL);
                        if (($_6_ = substr($this->_s, $this->_p, 1)) === ".") {
                            $_6 = array(TRUE, $_6_);
                            $this->_p += 1;
                        } else {
                            if ($this->_p >= $this->_maxp) {
                                if ($this->_p > $this->_maxp) {
                                    $this->_maxp = $this->_p;
                                    $this->_expected = array();
                                }
                            
                                if (!in_array('"."', $this->_expected)) {
                                    $this->_expected[] = '"."';
                                }
                            }
                        }
                        $_5 = array(FALSE, NULL);
                        if ($_6[0]) {
                            $_5 = array(TRUE, $this->_16());
                        }
                        if (!$_5[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_5;
                            break;
                        }
                    } while(0);
            
                    $this->_memo['primary:' . ((string) $_oldp)] = $_m = array_merge($_0, array($this->_p));
            
                    return $_0;
                }
                $this->_p = $_m[2];
                return array($_m[0], $_m[1]);
            }
            function _parse_ACTION() {
                $_m = NULL;
                $k = 'ACTION:' . ((string) $_oldp = $this->_p);
                if (isset($this->_memo[$k])) {
                    $_m = $this->_memo[$k];
                }
            
                if ($_m === NULL) {
                    $_0 = array(FALSE, NULL);
                    $_pos0 = $this->_p;
                    do {
                        do {
                            $_2 = array(FALSE, NULL);
                            if (($_2_ = substr($this->_s, $this->_p, 1)) === "{") {
                                $_2 = array(TRUE, $_2_);
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('"{"', $this->_expected)) {
                                        $this->_expected[] = '"{"';
                                    }
                                }
                            }
                            if (!$_2[0]) {
                                $_2 = array(FALSE, NULL);
                                break;
                            }
                            $_3 = array(FALSE, NULL);
                            $n =& $_3;
                            $_3 = array(FALSE, NULL);
                            $_4 = array(FALSE, NULL);
                            $_pos4 = $this->_p;
                            do {
                                $_5 = $this->_parse_braced();
                                if (!$_5[0]) {
                                    $this->_p = $_pos4;
                                } else {
                                    $_4 = $_5;
                                    break;
                                }
                                $_6 = $this->_parse_nonbrace();
                                if (!$_6[0]) {
                                    $this->_p = $_pos4;
                                } else {
                                    $_4 = $_6;
                                    break;
                                }
                            } while(0);
                            if ($_4[0]) { $_3[1] = (array) $_3[1]; $_3[1][] = $_4[1]; }
                            $_3[0] = $_4[0];
                            while ($_4[0]) {
                                $_pos3 = $this->_p;
                                $_4 = array(FALSE, NULL);
                                $_pos4 = $this->_p;
                                do {
                                    $_5 = $this->_parse_braced();
                                    if (!$_5[0]) {
                                        $this->_p = $_pos4;
                                    } else {
                                        $_4 = $_5;
                                        break;
                                    }
                                    $_6 = $this->_parse_nonbrace();
                                    if (!$_6[0]) {
                                        $this->_p = $_pos4;
                                    } else {
                                        $_4 = $_6;
                                        break;
                                    }
                                } while(0);
                                $_3[1] = (array) $_3[1];
                                if (!$_4[0]) { $this->_p = $_pos3; }
                                else { $_3[1][] = $_4[1]; };
                            }
                            if (!$_3[0]) {
                                $_2 = array(FALSE, NULL);
                                break;
                            }
                            $_4 = array(FALSE, NULL);
                            if (($_4_ = substr($this->_s, $this->_p, 1)) === "}") {
                                $_4 = array(TRUE, $_4_);
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('"}"', $this->_expected)) {
                                        $this->_expected[] = '"}"';
                                    }
                                }
                            }
                            if (!$_4[0]) {
                                $_2 = array(FALSE, NULL);
                                break;
                            }
                        } while(0);
                        $_1 = array(FALSE, NULL);
                        if ($_2[0]) {
                            $_1 = array(TRUE, $this->_17($n[1]));
                        }
                        if (!$_1[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_1;
                            break;
                        }
                        $_3 = array(FALSE, NULL);
                        $l =& $_3;
                        $_3 = array(FALSE, NULL);
                        do {
                            $_pos4 = $this->_p;
                            $_5 = array(FALSE, NULL);
                            $_pos5 = $this->_p;
                            do {
                                $_6 = array(FALSE, NULL);
                                if (($_6_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                    $_6 = array(TRUE, $_6_);
                                    $this->_p += 2;
                                } else {
                                    if ($this->_p >= $this->_maxp) {
                                        if ($this->_p > $this->_maxp) {
                                            $this->_maxp = $this->_p;
                                            $this->_expected = array();
                                        }
                                    
                                        if (!in_array('"\\r\\n"', $this->_expected)) {
                                            $this->_expected[] = '"\\r\\n"';
                                        }
                                    }
                                }
                                if (!$_6[0]) {
                                    $this->_p = $_pos5;
                                } else {
                                    $_5 = $_6;
                                    break;
                                }
                                $_7 = array(FALSE, NULL);
                                if (($_7_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                    $_7 = array(TRUE, $_7_);
                                    $this->_p += 1;
                                } else {
                                    if ($this->_p >= $this->_maxp) {
                                        if ($this->_p > $this->_maxp) {
                                            $this->_maxp = $this->_p;
                                            $this->_expected = array();
                                        }
                                    
                                        if (!in_array('"\\n"', $this->_expected)) {
                                            $this->_expected[] = '"\\n"';
                                        }
                                    }
                                }
                                if (!$_7[0]) {
                                    $this->_p = $_pos5;
                                } else {
                                    $_5 = $_7;
                                    break;
                                }
                                $_8 = array(FALSE, NULL);
                                if (($_8_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                    $_8 = array(TRUE, $_8_);
                                    $this->_p += 1;
                                } else {
                                    if ($this->_p >= $this->_maxp) {
                                        if ($this->_p > $this->_maxp) {
                                            $this->_maxp = $this->_p;
                                            $this->_expected = array();
                                        }
                                    
                                        if (!in_array('"\\r"', $this->_expected)) {
                                            $this->_expected[] = '"\\r"';
                                        }
                                    }
                                }
                                if (!$_8[0]) {
                                    $this->_p = $_pos5;
                                } else {
                                    $_5 = $_8;
                                    break;
                                }
                            } while(0);
                            $_4 = array(!$_5[0], NULL);
                            $this->_p = $_pos4;
                            if (!$_4[0]) {
                                $_5 = array(FALSE, NULL);
                                break;
                            }
                            $_5 = array(isset($this->_s[$this->_p]), NULL);
                            if ($_5[0]) {
                                $_5[1] = $this->_s[$this->_p];
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('any character', $this->_expected)) {
                                        $this->_expected[] = 'any character';
                                    }
                                }
                            }
                            if (!$_5[0]) {
                                $_5 = array(FALSE, NULL);
                                break;
                            }
                            $_5 = array(TRUE, implode('', array($_4[1], $_5[1])));
                        } while(0);
                        $_4 = $_5;
                        if ($_4[0]) { $_3[1] = (array) $_3[1]; $_3[1][] = $_4[1]; }
                        $_3[0] = $_4[0];
                        while ($_4[0]) {
                            $_pos3 = $this->_p;
                            do {
                                $_pos4 = $this->_p;
                                $_5 = array(FALSE, NULL);
                                $_pos5 = $this->_p;
                                do {
                                    $_6 = array(FALSE, NULL);
                                    if (($_6_ = substr($this->_s, $this->_p, 2)) === "\r\n") {
                                        $_6 = array(TRUE, $_6_);
                                        $this->_p += 2;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('"\\r\\n"', $this->_expected)) {
                                                $this->_expected[] = '"\\r\\n"';
                                            }
                                        }
                                    }
                                    if (!$_6[0]) {
                                        $this->_p = $_pos5;
                                    } else {
                                        $_5 = $_6;
                                        break;
                                    }
                                    $_7 = array(FALSE, NULL);
                                    if (($_7_ = substr($this->_s, $this->_p, 1)) === "\n") {
                                        $_7 = array(TRUE, $_7_);
                                        $this->_p += 1;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('"\\n"', $this->_expected)) {
                                                $this->_expected[] = '"\\n"';
                                            }
                                        }
                                    }
                                    if (!$_7[0]) {
                                        $this->_p = $_pos5;
                                    } else {
                                        $_5 = $_7;
                                        break;
                                    }
                                    $_8 = array(FALSE, NULL);
                                    if (($_8_ = substr($this->_s, $this->_p, 1)) === "\r") {
                                        $_8 = array(TRUE, $_8_);
                                        $this->_p += 1;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('"\\r"', $this->_expected)) {
                                                $this->_expected[] = '"\\r"';
                                            }
                                        }
                                    }
                                    if (!$_8[0]) {
                                        $this->_p = $_pos5;
                                    } else {
                                        $_5 = $_8;
                                        break;
                                    }
                                } while(0);
                                $_4 = array(!$_5[0], NULL);
                                $this->_p = $_pos4;
                                if (!$_4[0]) {
                                    $_5 = array(FALSE, NULL);
                                    break;
                                }
                                $_5 = array(isset($this->_s[$this->_p]), NULL);
                                if ($_5[0]) {
                                    $_5[1] = $this->_s[$this->_p];
                                    $this->_p += 1;
                                } else {
                                    if ($this->_p >= $this->_maxp) {
                                        if ($this->_p > $this->_maxp) {
                                            $this->_maxp = $this->_p;
                                            $this->_expected = array();
                                        }
                                    
                                        if (!in_array('any character', $this->_expected)) {
                                            $this->_expected[] = 'any character';
                                        }
                                    }
                                }
                                if (!$_5[0]) {
                                    $_5 = array(FALSE, NULL);
                                    break;
                                }
                                $_5 = array(TRUE, implode('', array($_4[1], $_5[1])));
                            } while(0);
                            $_4 = $_5;
                            $_3[1] = (array) $_3[1];
                            if (!$_4[0]) { $this->_p = $_pos3; }
                            else { $_3[1][] = $_4[1]; };
                        }
                        $_3[1] = implode('', (array) $_3[1]);
                        $_2 = array(FALSE, NULL);
                        if ($_3[0]) {
                            $_2 = array(TRUE, $this->_18($l[1]));
                        }
                        if (!$_2[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_2;
                            break;
                        }
                    } while(0);
            
                    $this->_memo['ACTION:' . ((string) $_oldp)] = $_m = array_merge($_0, array($this->_p));
            
                    return $_0;
                }
                $this->_p = $_m[2];
                return array($_m[0], $_m[1]);
            }
            function _parse_braced() {
                $_m = NULL;
                $k = 'braced:' . ((string) $_oldp = $this->_p);
                if (isset($this->_memo[$k])) {
                    $_m = $this->_memo[$k];
                }
            
                if ($_m === NULL) {
                    do {
                        $_1 = array(FALSE, NULL);
                        if (($_1_ = substr($this->_s, $this->_p, 1)) === "{") {
                            $_1 = array(TRUE, $_1_);
                            $this->_p += 1;
                        } else {
                            if ($this->_p >= $this->_maxp) {
                                if ($this->_p > $this->_maxp) {
                                    $this->_maxp = $this->_p;
                                    $this->_expected = array();
                                }
                            
                                if (!in_array('"{"', $this->_expected)) {
                                    $this->_expected[] = '"{"';
                                }
                            }
                        }
                        if (!$_1[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_2 = array(FALSE, NULL);
                        $n =& $_2;
                        $_2 = array(FALSE, NULL);
                        $_3 = array(FALSE, NULL);
                        $_pos3 = $this->_p;
                        do {
                            $_4 = $this->_parse_braced();
                            if (!$_4[0]) {
                                $this->_p = $_pos3;
                            } else {
                                $_3 = $_4;
                                break;
                            }
                            $_5 = $this->_parse_nonbrace();
                            if (!$_5[0]) {
                                $this->_p = $_pos3;
                            } else {
                                $_3 = $_5;
                                break;
                            }
                        } while(0);
                        if ($_3[0]) { $_2[1] = (array) $_2[1]; $_2[1][] = $_3[1]; }
                        $_2[0] = $_3[0];
                        while ($_3[0]) {
                            $_pos2 = $this->_p;
                            $_3 = array(FALSE, NULL);
                            $_pos3 = $this->_p;
                            do {
                                $_4 = $this->_parse_braced();
                                if (!$_4[0]) {
                                    $this->_p = $_pos3;
                                } else {
                                    $_3 = $_4;
                                    break;
                                }
                                $_5 = $this->_parse_nonbrace();
                                if (!$_5[0]) {
                                    $this->_p = $_pos3;
                                } else {
                                    $_3 = $_5;
                                    break;
                                }
                            } while(0);
                            $_2[1] = (array) $_2[1];
                            if (!$_3[0]) { $this->_p = $_pos2; }
                            else { $_2[1][] = $_3[1]; };
                        }
                        if (!$_2[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_3 = array(FALSE, NULL);
                        if (($_3_ = substr($this->_s, $this->_p, 1)) === "}") {
                            $_3 = array(TRUE, $_3_);
                            $this->_p += 1;
                        } else {
                            if ($this->_p >= $this->_maxp) {
                                if ($this->_p > $this->_maxp) {
                                    $this->_maxp = $this->_p;
                                    $this->_expected = array();
                                }
                            
                                if (!in_array('"}"', $this->_expected)) {
                                    $this->_expected[] = '"}"';
                                }
                            }
                        }
                        if (!$_3[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                    } while(0);
                    $_0 = array(FALSE, NULL);
                    if ($_1[0]) {
                        $_0 = array(TRUE, $this->_19($n[1]));
                    }
            
                    $this->_memo['braced:' . ((string) $_oldp)] = $_m = array_merge($_0, array($this->_p));
            
                    return $_0;
                }
                $this->_p = $_m[2];
                return array($_m[0], $_m[1]);
            }
            function _parse_nonbrace() {
                $_m = NULL;
                $k = 'nonbrace:' . ((string) $_oldp = $this->_p);
                if (isset($this->_memo[$k])) {
                    $_m = $this->_memo[$k];
                }
            
                if ($_m === NULL) {
                    do {
                        $_pos0 = $this->_p;
                        $_1 = array(FALSE, NULL);
                        if (($_1_ = substr($this->_s, $this->_p, 1)) === "}") {
                            $_1 = array(TRUE, $_1_);
                            $this->_p += 1;
                        } else {
                            if ($this->_p >= $this->_maxp) {
                                if ($this->_p > $this->_maxp) {
                                    $this->_maxp = $this->_p;
                                    $this->_expected = array();
                                }
                            
                                if (!in_array('"}"', $this->_expected)) {
                                    $this->_expected[] = '"}"';
                                }
                            }
                        }
                        $_0 = array(!$_1[0], NULL);
                        $this->_p = $_pos0;
                        if (!$_0[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_1 = array(isset($this->_s[$this->_p]), NULL);
                        if ($_1[0]) {
                            $_1[1] = $this->_s[$this->_p];
                            $this->_p += 1;
                        } else {
                            if ($this->_p >= $this->_maxp) {
                                if ($this->_p > $this->_maxp) {
                                    $this->_maxp = $this->_p;
                                    $this->_expected = array();
                                }
                            
                                if (!in_array('any character', $this->_expected)) {
                                    $this->_expected[] = 'any character';
                                }
                            }
                        }
                        if (!$_1[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_1 = array(TRUE, implode('', array($_0[1], $_1[1])));
                    } while(0);
                    $_0 = $_1;
            
                    $this->_memo['nonbrace:' . ((string) $_oldp)] = $_m = array_merge($_0, array($this->_p));
            
                    return $_0;
                }
                $this->_p = $_m[2];
                return array($_m[0], $_m[1]);
            }
            function _parse_range() {
                $_m = NULL;
                $k = 'range:' . ((string) $_oldp = $this->_p);
                if (isset($this->_memo[$k])) {
                    $_m = $this->_memo[$k];
                }
            
                if ($_m === NULL) {
                    do {
                        $_1 = array(FALSE, NULL);
                        if (($_1_ = substr($this->_s, $this->_p, 1)) === "[") {
                            $_1 = array(TRUE, $_1_);
                            $this->_p += 1;
                        } else {
                            if ($this->_p >= $this->_maxp) {
                                if ($this->_p > $this->_maxp) {
                                    $this->_maxp = $this->_p;
                                    $this->_expected = array();
                                }
                            
                                if (!in_array('"["', $this->_expected)) {
                                    $this->_expected[] = '"["';
                                }
                            }
                        }
                        if (!$_1[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_2 = array(FALSE, NULL);
                        $r =& $_2;
                        $_2 = array(FALSE, NULL);
                        $_3 = array(FALSE, NULL);
                        $_pos3 = $this->_p;
                        do {
                            do {
                                $_5 = array(FALSE, NULL);
                                $f =& $_5;
                                $_5 = $this->_parse_rchar();
                                if (!$_5[0]) {
                                    $_5 = array(FALSE, NULL);
                                    break;
                                }
                                $_6 = array(FALSE, NULL);
                                if (($_6_ = substr($this->_s, $this->_p, 1)) === "-") {
                                    $_6 = array(TRUE, $_6_);
                                    $this->_p += 1;
                                } else {
                                    if ($this->_p >= $this->_maxp) {
                                        if ($this->_p > $this->_maxp) {
                                            $this->_maxp = $this->_p;
                                            $this->_expected = array();
                                        }
                                    
                                        if (!in_array('"-"', $this->_expected)) {
                                            $this->_expected[] = '"-"';
                                        }
                                    }
                                }
                                if (!$_6[0]) {
                                    $_5 = array(FALSE, NULL);
                                    break;
                                }
                                $_7 = array(FALSE, NULL);
                                $s =& $_7;
                                $_7 = $this->_parse_rchar();
                                if (!$_7[0]) {
                                    $_5 = array(FALSE, NULL);
                                    break;
                                }
                            } while(0);
                            $_4 = array(FALSE, NULL);
                            if ($_5[0]) {
                                $_4 = array(TRUE, $this->_20($r[1], $f[1], $s[1]));
                            }
                            if (!$_4[0]) {
                                $this->_p = $_pos3;
                            } else {
                                $_3 = $_4;
                                break;
                            }
                            $_6 = array(FALSE, NULL);
                            $c =& $_6;
                            $_6 = $this->_parse_rchar();
                            $_5 = array(FALSE, NULL);
                            if ($_6[0]) {
                                $_5 = array(TRUE, $this->_21($r[1], $c[1]));
                            }
                            if (!$_5[0]) {
                                $this->_p = $_pos3;
                            } else {
                                $_3 = $_5;
                                break;
                            }
                        } while(0);
                        if ($_3[0]) { $_2[1] = (array) $_2[1]; $_2[1][] = $_3[1]; }
                        $_2[0] = $_3[0];
                        while ($_3[0]) {
                            $_pos2 = $this->_p;
                            $_3 = array(FALSE, NULL);
                            $_pos3 = $this->_p;
                            do {
                                do {
                                    $_5 = array(FALSE, NULL);
                                    $f =& $_5;
                                    $_5 = $this->_parse_rchar();
                                    if (!$_5[0]) {
                                        $_5 = array(FALSE, NULL);
                                        break;
                                    }
                                    $_6 = array(FALSE, NULL);
                                    if (($_6_ = substr($this->_s, $this->_p, 1)) === "-") {
                                        $_6 = array(TRUE, $_6_);
                                        $this->_p += 1;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('"-"', $this->_expected)) {
                                                $this->_expected[] = '"-"';
                                            }
                                        }
                                    }
                                    if (!$_6[0]) {
                                        $_5 = array(FALSE, NULL);
                                        break;
                                    }
                                    $_7 = array(FALSE, NULL);
                                    $s =& $_7;
                                    $_7 = $this->_parse_rchar();
                                    if (!$_7[0]) {
                                        $_5 = array(FALSE, NULL);
                                        break;
                                    }
                                } while(0);
                                $_4 = array(FALSE, NULL);
                                if ($_5[0]) {
                                    $_4 = array(TRUE, $this->_22($r[1], $f[1], $s[1]));
                                }
                                if (!$_4[0]) {
                                    $this->_p = $_pos3;
                                } else {
                                    $_3 = $_4;
                                    break;
                                }
                                $_6 = array(FALSE, NULL);
                                $c =& $_6;
                                $_6 = $this->_parse_rchar();
                                $_5 = array(FALSE, NULL);
                                if ($_6[0]) {
                                    $_5 = array(TRUE, $this->_23($r[1], $c[1]));
                                }
                                if (!$_5[0]) {
                                    $this->_p = $_pos3;
                                } else {
                                    $_3 = $_5;
                                    break;
                                }
                            } while(0);
                            $_2[1] = (array) $_2[1];
                            if (!$_3[0]) { $this->_p = $_pos2; }
                            else { $_2[1][] = $_3[1]; };
                        }
                        if (!$_2[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_3 = array(FALSE, NULL);
                        if (($_3_ = substr($this->_s, $this->_p, 1)) === "]") {
                            $_3 = array(TRUE, $_3_);
                            $this->_p += 1;
                        } else {
                            if ($this->_p >= $this->_maxp) {
                                if ($this->_p > $this->_maxp) {
                                    $this->_maxp = $this->_p;
                                    $this->_expected = array();
                                }
                            
                                if (!in_array('"]"', $this->_expected)) {
                                    $this->_expected[] = '"]"';
                                }
                            }
                        }
                        if (!$_3[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                    } while(0);
                    $_0 = array(FALSE, NULL);
                    if ($_1[0]) {
                        $_0 = array(TRUE, $this->_24($r[1]));
                    }
            
                    $this->_memo['range:' . ((string) $_oldp)] = $_m = array_merge($_0, array($this->_p));
            
                    return $_0;
                }
                $this->_p = $_m[2];
                return array($_m[0], $_m[1]);
            }
            function _parse_rchar() {
                $_m = NULL;
                $k = 'rchar:' . ((string) $_oldp = $this->_p);
                if (isset($this->_memo[$k])) {
                    $_m = $this->_memo[$k];
                }
            
                if ($_m === NULL) {
                    $_0 = array(FALSE, NULL);
                    $_pos0 = $this->_p;
                    do {
                        do {
                            $_pos1 = $this->_p;
                            $_2 = array(FALSE, NULL);
                            $_2_ = ord(substr($this->_s, $this->_p, 1));
                            if (isset($this->_s[$this->_p]) && (($_2_ === 93) || ($_2_ === 92))) {
                                $_2 = array(TRUE, substr($this->_s, $this->_p, 1));
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('[]\\\\]', $this->_expected)) {
                                        $this->_expected[] = '[]\\\\]';
                                    }
                                }
                            }
                            $_1 = array(!$_2[0], NULL);
                            $this->_p = $_pos1;
                            if (!$_1[0]) {
                                $_2 = array(FALSE, NULL);
                                break;
                            }
                            $_2 = array(isset($this->_s[$this->_p]), NULL);
                            if ($_2[0]) {
                                $_2[1] = $this->_s[$this->_p];
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('any character', $this->_expected)) {
                                        $this->_expected[] = 'any character';
                                    }
                                }
                            }
                            if (!$_2[0]) {
                                $_2 = array(FALSE, NULL);
                                break;
                            }
                            $_2 = array(TRUE, implode('', array($_1[1], $_2[1])));
                        } while(0);
                        $_1 = $_2;
                        if (!$_1[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_1;
                            break;
                        }
                        do {
                            $_3 = array(FALSE, NULL);
                            if (($_3_ = substr($this->_s, $this->_p, 1)) === "\\") {
                                $_3 = array(TRUE, $_3_);
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('"\\\\"', $this->_expected)) {
                                        $this->_expected[] = '"\\\\"';
                                    }
                                }
                            }
                            if (!$_3[0]) {
                                $_3 = array(FALSE, NULL);
                                break;
                            }
                            $_4 = array(FALSE, NULL);
                            $e =& $_4;
                            $_4 = array(FALSE, NULL);
                            $_4_ = ord(substr($this->_s, $this->_p, 1));
                            if (isset($this->_s[$this->_p]) && (($_4_ === 93) || ($_4_ === 92))) {
                                $_4 = array(TRUE, substr($this->_s, $this->_p, 1));
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('[]\\\\]', $this->_expected)) {
                                        $this->_expected[] = '[]\\\\]';
                                    }
                                }
                            }
                            if (!$_4[0]) {
                                $_3 = array(FALSE, NULL);
                                break;
                            }
                        } while(0);
                        $_2 = array(FALSE, NULL);
                        if ($_3[0]) {
                            $_2 = array(TRUE, $this->_25($e[1]));
                        }
                        if (!$_2[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_2;
                            break;
                        }
                        $_3 = $this->_parse_eschar();
                        if (!$_3[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_3;
                            break;
                        }
                    } while(0);
            
                    $this->_memo['rchar:' . ((string) $_oldp)] = $_m = array_merge($_0, array($this->_p));
            
                    return $_0;
                }
                $this->_p = $_m[2];
                return array($_m[0], $_m[1]);
            }
            function _parse_literal() {
                $_m = NULL;
                $k = 'literal:' . ((string) $_oldp = $this->_p);
                if (isset($this->_memo[$k])) {
                    $_m = $this->_memo[$k];
                }
            
                if ($_m === NULL) {
                    do {
                        $_1 = array(FALSE, NULL);
                        $_1_ = ord(substr($this->_s, $this->_p, 1));
                        if (isset($this->_s[$this->_p]) && (($_1_ === 34))) {
                            $_1 = array(TRUE, substr($this->_s, $this->_p, 1));
                            $this->_p += 1;
                        } else {
                            if ($this->_p >= $this->_maxp) {
                                if ($this->_p > $this->_maxp) {
                                    $this->_maxp = $this->_p;
                                    $this->_expected = array();
                                }
                            
                                if (!in_array('["]', $this->_expected)) {
                                    $this->_expected[] = '["]';
                                }
                            }
                        }
                        if (!$_1[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_2 = array(FALSE, NULL);
                        $s =& $_2;
                        $_2 = array(TRUE, array());
                        do {
                            $_pos2 = $this->_p;
                            $_3 = array(FALSE, NULL);
                            $_pos3 = $this->_p;
                            do {
                                do {
                                    $_pos4 = $this->_p;
                                    $_5 = array(FALSE, NULL);
                                    $_5_ = ord(substr($this->_s, $this->_p, 1));
                                    if (isset($this->_s[$this->_p]) && (($_5_ === 34) || ($_5_ === 92))) {
                                        $_5 = array(TRUE, substr($this->_s, $this->_p, 1));
                                        $this->_p += 1;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('["\\\\]', $this->_expected)) {
                                                $this->_expected[] = '["\\\\]';
                                            }
                                        }
                                    }
                                    $_4 = array(!$_5[0], NULL);
                                    $this->_p = $_pos4;
                                    if (!$_4[0]) {
                                        $_5 = array(FALSE, NULL);
                                        break;
                                    }
                                    $_5 = array(isset($this->_s[$this->_p]), NULL);
                                    if ($_5[0]) {
                                        $_5[1] = $this->_s[$this->_p];
                                        $this->_p += 1;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('any character', $this->_expected)) {
                                                $this->_expected[] = 'any character';
                                            }
                                        }
                                    }
                                    if (!$_5[0]) {
                                        $_5 = array(FALSE, NULL);
                                        break;
                                    }
                                    $_5 = array(TRUE, implode('', array($_4[1], $_5[1])));
                                } while(0);
                                $_4 = $_5;
                                if (!$_4[0]) {
                                    $this->_p = $_pos3;
                                } else {
                                    $_3 = $_4;
                                    break;
                                }
                                do {
                                    $_6 = array(FALSE, NULL);
                                    if (($_6_ = substr($this->_s, $this->_p, 1)) === "\\") {
                                        $_6 = array(TRUE, $_6_);
                                        $this->_p += 1;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('"\\\\"', $this->_expected)) {
                                                $this->_expected[] = '"\\\\"';
                                            }
                                        }
                                    }
                                    if (!$_6[0]) {
                                        $_6 = array(FALSE, NULL);
                                        break;
                                    }
                                    $_7 = array(FALSE, NULL);
                                    $e =& $_7;
                                    $_7 = array(FALSE, NULL);
                                    $_7_ = ord(substr($this->_s, $this->_p, 1));
                                    if (isset($this->_s[$this->_p]) && (($_7_ === 34) || ($_7_ === 92))) {
                                        $_7 = array(TRUE, substr($this->_s, $this->_p, 1));
                                        $this->_p += 1;
                                    } else {
                                        if ($this->_p >= $this->_maxp) {
                                            if ($this->_p > $this->_maxp) {
                                                $this->_maxp = $this->_p;
                                                $this->_expected = array();
                                            }
                                        
                                            if (!in_array('["\\\\]', $this->_expected)) {
                                                $this->_expected[] = '["\\\\]';
                                            }
                                        }
                                    }
                                    if (!$_7[0]) {
                                        $_6 = array(FALSE, NULL);
                                        break;
                                    }
                                } while(0);
                                $_5 = array(FALSE, NULL);
                                if ($_6[0]) {
                                    $_5 = array(TRUE, $this->_26($s[1], $e[1]));
                                }
                                if (!$_5[0]) {
                                    $this->_p = $_pos3;
                                } else {
                                    $_3 = $_5;
                                    break;
                                }
                                $_6 = $this->_parse_eschar();
                                if (!$_6[0]) {
                                    $this->_p = $_pos3;
                                } else {
                                    $_3 = $_6;
                                    break;
                                }
                            } while(0);
                            if (!$_3[0]) { $this->_p = $_pos2; }
                            else { $_2[1][] = $_3[1]; }
                        } while ($_3[0]);
                        if (!$_2[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                        $_3 = array(FALSE, NULL);
                        $_3_ = ord(substr($this->_s, $this->_p, 1));
                        if (isset($this->_s[$this->_p]) && (($_3_ === 34))) {
                            $_3 = array(TRUE, substr($this->_s, $this->_p, 1));
                            $this->_p += 1;
                        } else {
                            if ($this->_p >= $this->_maxp) {
                                if ($this->_p > $this->_maxp) {
                                    $this->_maxp = $this->_p;
                                    $this->_expected = array();
                                }
                            
                                if (!in_array('["]', $this->_expected)) {
                                    $this->_expected[] = '["]';
                                }
                            }
                        }
                        if (!$_3[0]) {
                            $_1 = array(FALSE, NULL);
                            break;
                        }
                    } while(0);
                    $_0 = array(FALSE, NULL);
                    if ($_1[0]) {
                        $_0 = array(TRUE, $this->_27($s[1]));
                    }
            
                    $this->_memo['literal:' . ((string) $_oldp)] = $_m = array_merge($_0, array($this->_p));
            
                    return $_0;
                }
                $this->_p = $_m[2];
                return array($_m[0], $_m[1]);
            }
            function _parse_eschar() {
                $_m = NULL;
                $k = 'eschar:' . ((string) $_oldp = $this->_p);
                if (isset($this->_memo[$k])) {
                    $_m = $this->_memo[$k];
                }
            
                if ($_m === NULL) {
                    $_0 = array(FALSE, NULL);
                    $_pos0 = $this->_p;
                    do {
                        do {
                            $_2 = array(FALSE, NULL);
                            $_2_ = ord(substr($this->_s, $this->_p, 1));
                            if (isset($this->_s[$this->_p]) && (($_2_ === 92))) {
                                $_2 = array(TRUE, substr($this->_s, $this->_p, 1));
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('[\\\\]', $this->_expected)) {
                                        $this->_expected[] = '[\\\\]';
                                    }
                                }
                            }
                            if (!$_2[0]) {
                                $_2 = array(FALSE, NULL);
                                break;
                            }
                            $_3 = array(FALSE, NULL);
                            $e =& $_3;
                            $_3 = array(FALSE, NULL);
                            $_3_ = ord(substr($this->_s, $this->_p, 1));
                            if (isset($this->_s[$this->_p]) && (($_3_ === 110) || ($_3_ === 114) || ($_3_ === 116))) {
                                $_3 = array(TRUE, substr($this->_s, $this->_p, 1));
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('[nrt]', $this->_expected)) {
                                        $this->_expected[] = '[nrt]';
                                    }
                                }
                            }
                            if (!$_3[0]) {
                                $_2 = array(FALSE, NULL);
                                break;
                            }
                        } while(0);
                        $_1 = array(FALSE, NULL);
                        if ($_2[0]) {
                            $_1 = array(TRUE, $this->_28($e[1]));
                        }
                        if (!$_1[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_1;
                            break;
                        }
                        do {
                            $_3 = array(FALSE, NULL);
                            $_3_ = ord(substr($this->_s, $this->_p, 1));
                            if (isset($this->_s[$this->_p]) && (($_3_ === 92))) {
                                $_3 = array(TRUE, substr($this->_s, $this->_p, 1));
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('[\\\\]', $this->_expected)) {
                                        $this->_expected[] = '[\\\\]';
                                    }
                                }
                            }
                            if (!$_3[0]) {
                                $_3 = array(FALSE, NULL);
                                break;
                            }
                            $_4 = array(FALSE, NULL);
                            if (($_4_ = substr($this->_s, $this->_p, 1)) === "x") {
                                $_4 = array(TRUE, $_4_);
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('"x"', $this->_expected)) {
                                        $this->_expected[] = '"x"';
                                    }
                                }
                            }
                            if (!$_4[0]) {
                                $_3 = array(FALSE, NULL);
                                break;
                            }
                            $_5 = array(FALSE, NULL);
                            $f =& $_5;
                            $_5 = array(FALSE, NULL);
                            $_5_ = ord(substr($this->_s, $this->_p, 1));
                            if (isset($this->_s[$this->_p]) && ((48 <= $_5_ && $_5_ <= 57) || (97 <= $_5_ && $_5_ <= 102) || (65 <= $_5_ && $_5_ <= 70))) {
                                $_5 = array(TRUE, substr($this->_s, $this->_p, 1));
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('[0-9a-fA-F]', $this->_expected)) {
                                        $this->_expected[] = '[0-9a-fA-F]';
                                    }
                                }
                            }
                            if (!$_5[0]) {
                                $_3 = array(FALSE, NULL);
                                break;
                            }
                            $_6 = array(FALSE, NULL);
                            $s =& $_6;
                            $_6 = array(FALSE, NULL);
                            $_6_ = ord(substr($this->_s, $this->_p, 1));
                            if (isset($this->_s[$this->_p]) && ((48 <= $_6_ && $_6_ <= 57) || (97 <= $_6_ && $_6_ <= 102) || (65 <= $_6_ && $_6_ <= 70))) {
                                $_6 = array(TRUE, substr($this->_s, $this->_p, 1));
                                $this->_p += 1;
                            } else {
                                if ($this->_p >= $this->_maxp) {
                                    if ($this->_p > $this->_maxp) {
                                        $this->_maxp = $this->_p;
                                        $this->_expected = array();
                                    }
                                
                                    if (!in_array('[0-9a-fA-F]', $this->_expected)) {
                                        $this->_expected[] = '[0-9a-fA-F]';
                                    }
                                }
                            }
                            if (!$_6[0]) {
                                $_3 = array(FALSE, NULL);
                                break;
                            }
                        } while(0);
                        $_2 = array(FALSE, NULL);
                        if ($_3[0]) {
                            $_2 = array(TRUE, $this->_29($f[1], $s[1]));
                        }
                        if (!$_2[0]) {
                            $this->_p = $_pos0;
                        } else {
                            $_0 = $_2;
                            break;
                        }
                    } while(0);
            
                    $this->_memo['eschar:' . ((string) $_oldp)] = $_m = array_merge($_0, array($this->_p));
            
                    return $_0;
                }
                $this->_p = $_m[2];
                return array($_m[0], $_m[1]);
            }
            function _0(&$rs) {
            
                $ret = array();
            
                foreach ($rs as $r) {
                    list($n, $e) = $r;
            
                    if (!isset($ret[$n])) { $ret[$n] = $e; }
                    else {
                        if ($ret[$n][0] === 'fst') { $ret[$n] = array_slice($ret[$n], 1); }
                        else { $ret[$n] = array($ret[$n]); }
            
                        if ($e[0] === 'fst') { $e = array_slice($e, 1); }
                        else { $e = array($e); }
            
                        $ret[$n] = array_merge(array('fst'), $ret[$n], $e);
                    }
                }
            
                return $ret;
            
            }
            function _1(&$n, &$e) {
             return array($n, $e); 
            }
            function _2(&$s, &$ss, &$is) {
             return $is; 
            }
            function _3(&$s, &$ss) {
            
                             $ss = array_merge(array($s), $ss);
                             if (count($ss) < 2) { return $ss[0]; }
                             return array_merge(array("fst"), $ss);
                         
            }
            function _4(&$ps, &$p) {
             return $p; 
            }
            function _5(&$ps, &$p) {
             return $p; 
            }
            function _6(&$ps, &$a, &$ac) {
             return $ac; 
            }
            function _7(&$ps, &$a) {
            
                           $all = count($ps) < 2 ? $ps[0] : array_merge(array("all"), $ps);
                           if ($a) { return array("act", $a, $all); }
                           return $all;
                       
            }
            function _8(&$p, &$s) {
            
                         $predconv = array("&" => "and", "!" => "not");
                         return array($predconv[$p], $s);
                     
            }
            function _9(&$a) {
             return array("spr", $a); 
            }
            function _10(&$id, &$s) {
             return array("bnd", $id, $s); 
            }
            function _11(&$p, &$s) {
            
                $suffixconv = array(
                    "?" => "opt",
                    "*" => "mr0",
                    "+" => "mr1",
                );
            
                if ($s) { return array($suffixconv[$s], $p); }
                return $p;
            
            }
            function _12(&$id) {
             return array("app", $id); 
            }
            function _13(&$e) {
             return $e; 
            }
            function _14(&$l) {
             return array("lit", $l); 
            }
            function _15(&$r) {
             return array_merge(array("rng"), $r); 
            }
            function _16() {
             return array("any"); 
            }
            function _17(&$n) {
             return implode("", $n); 
            }
            function _18(&$l) {
             return "return " . $l . ";"; 
            }
            function _19(&$n) {
             return "{" . implode("", $n) . "}"; 
            }
            function _20(&$r, &$f, &$s) {
             return array(ord($f), ord($s)); 
            }
            function _21(&$r, &$c) {
             return ord($c); 
            }
            function _22(&$r, &$f, &$s) {
             return array(ord($f), ord($s)); 
            }
            function _23(&$r, &$c) {
             return ord($c); 
            }
            function _24(&$r) {
             return $r; 
            }
            function _25(&$e) {
             return $e; 
            }
            function _26(&$s, &$e) {
             return $e; 
            }
            function _27(&$s) {
             return implode("", $s); 
            }
            function _28(&$e) {
             $conv = array("n" => "\n", "r" => "\r", "t" => "\t"); return $conv[$e]; 
            }
            function _29(&$f, &$s) {
             return chr(hexdec($f . $s)); 
            }

        }
    }

    $i = new __parse_php($s, $opts);
    $ret = $i->_parse_grammar();
    return array_merge($ret, array($i->_maxp, $i->_expected));
}
