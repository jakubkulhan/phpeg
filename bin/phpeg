#!/usr/bin/php
<?php
/*LIBS*/
$phps = glob(dirname(__FILE__) . '/../build/*.php');
if (is_array($phps)) {
    foreach ($phps  as $php) {
        require_once $php;
    }
}
/*ENDLIBS*/

function o($o)
{
    return $o;
}

function c($o)
{
    $args = func_get_args();
    $o = array_shift($args);
    return call_user_func_array(array($o, '__invoke'), $args);
}

function i($s, $i = '    ')
{
    return $i . str_replace("\n", "\n" . $i,
        rtrim(str_replace(array("\r\n", "\r"), "\n", $s), "\n")) . "\n";
}

$help = FALSE;
$input = '-';
$output = '-';
$types = array('gotomachine', 'php');
$type = current($types);

for ($i = 1; $i < $_SERVER['argc']; ++$i) {
    switch ($_SERVER['argv'][$i]) {
        case '-h':
        case '--help':
            echo <<<E
{$_SERVER['argv'][0]} [ -t <type> ] [ <input> ] [ <output> ]
    -h, --help      show this help

    -t <type>       parser output type

    <input>         input file, if omitted standard input is used instead

    <output>        output file, if omitted and <input> supplied, <input>
                    with extension changed to .php, else standard output
                    is used instead

E;
            die();
        break;

        case '-t':
        case '--type':
            if (!isset($_SERVER['argv'][$i + 1])) {
                die("-t flag used, but not type supplied.\n");
            }
            $type = $_SERVER['argv'][$i + 1];
            if (strcasecmp($type, 'help') === 0) {
                die("available types: " . implode(', ', $types) . "\n");
            }
            if (!in_array($type, $types)) {
                die("output type $type not available.\n");
            }
            ++$i;
        break;

        default:
            if ($_SERVER['argc'] - $i < 3) {
                list($input, $output) = array_pad(array_slice($_SERVER['argv'], $i), 2, '-');
                break 2; // jump out of for loop
            } else {
                die("wrong parameters. use -h or --help to show help.\n");
            }
    }
}

if ($output === '-') {
    if ($input !== '-') {
        $output = preg_replace('~\.[^.]+$~', '.php', $input);
        if ($output === $input) {
            $output = $input . '.php';
        }
    } else {
        $output = 'php://stdout';
    }
}

if ($input === '-') {
    $input = 'php://stdin';
}

$generator = 'generate_' . $type;
file_put_contents($output, c(new $generator, $input));
