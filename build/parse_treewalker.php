<?php
// autogenerated file, do not edit!
class parse_treewalker {
    
    private $_environments = array(-1 => array());
    private $_environment_stack = array();
    private $_environment_stack_sp = -1;
    public function __construct() {
        
    }
    
    public function __invoke($s) {
        return $this->parse($s);
    }
    
    public function parse($_s) {
        $_addr = 0;
        $_maxp = $_p = 0;
        $_expected = array();
        L0: $_stack_sp = -1; $_stack = array();
        L1: $_fail = false;
        L2: $_value = NULL;
        L3: $_cache = array();
        L4: $_a = NULL;
        L5: $_b = NULL;
        L6: $_c = NULL;
        L7: $_d = NULL;
        L8: $_env = array();
        L9: $_stack[++$_stack_sp] = 11;
        L10: goto L12;
        L11: goto Lend;
        L12: $_stack[++$_stack_sp] = "0@";
        L13: $_stack[$_stack_sp] .= $_p;
        L14: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L21; }
        L15: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L16: $_b = $_cache[$_a];
        L17: $_fail = $_b[0];
        L18: $_value = $_b[1];
        L19: $_p = $_b[2];
        L20: goto L219;
        L21: $_stack[++$_stack_sp] = $_env;
        L22: $_env = array();
        L23: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L24: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L25: $_stack[++$_stack_sp] = $_b;
        L26: $_stack[++$_stack_sp] = NULL;
        L27: $_stack[++$_stack_sp] = 29;
        L28: goto L444;
        L29: $_stack[$_stack_sp] = $_value;
        L30: if ($_fail) { goto L207; }
        L31: $_stack[++$_stack_sp] = $_p;
        L32: $_stack[++$_stack_sp] = array();
        L33: $_stack[++$_stack_sp] = $_p;
        L34: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L35: $_stack[++$_stack_sp] = $_b;
        L36: $_stack[++$_stack_sp] = NULL;
        L37: $_fail = TRUE; if (($_a = substr($_s, $_p, 10)) === "-namespace") { $_fail = FALSE; $_value = $_a; $_p += 10; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-namespace"', $_expected)) { $_expected[] = '"-namespace"'; } } }
        L38: $_stack[$_stack_sp] = $_value;
        L39: if ($_fail) { goto L95; }
        L40: $_stack[++$_stack_sp] = 42;
        L41: goto L538;
        L42: if ($_fail) { goto L95; }
        L43: $_stack[++$_stack_sp] = $_env;
        L44: $_env = array();
        L45: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L46: $_stack[++$_stack_sp] = $_b;
        L47: $_stack[++$_stack_sp] = NULL;
        L48: $_stack[++$_stack_sp] = $_env;
        L49: $_env = array();
        L50: $_stack[++$_stack_sp] = 52;
        L51: goto L678;
        L52: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L53: $_env["first"] = $_value;
        L54: $_stack[$_stack_sp] = $_value;
        L55: if ($_fail) { goto L86; }
        L56: $_stack[++$_stack_sp] = $_p;
        L57: $_stack[++$_stack_sp] = array();
        L58: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L59: $_stack[++$_stack_sp] = $_b;
        L60: $_stack[++$_stack_sp] = NULL;
        L61: $_stack[++$_stack_sp] = $_env;
        L62: $_env = array();
        L63: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\\") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\"', $_expected)) { $_expected[] = '"\\\\"'; } } }
        L64: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L65: $_env["s"] = $_value;
        L66: $_stack[$_stack_sp] = $_value;
        L67: if ($_fail) { goto L74; }
        L68: $_stack[++$_stack_sp] = $_env;
        L69: $_env = array();
        L70: $_stack[++$_stack_sp] = 72;
        L71: goto L678;
        L72: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L73: $_env["next"] = $_value;
        L74: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L75: if ($_fail) { goto L77; }
        L76: $_value = $this->_3($_env);
        L77: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L78: if ($_fail) { goto L82; }
        L79: $_stack[$_stack_sp][] = $_value;
        L80: $_stack[$_stack_sp - 1] = $_p;
        L81: goto L58;
        L82: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L83: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L84: $_fail = false;
        L85: $_env["rest"] = $_value;
        L86: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L87: if ($_fail) { goto L89; }
        L88: $_value = $this->_2($_env);
        L89: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L90: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L91: $_env["namespace"] = $_value;
        L92: if ($_fail) { goto L95; }
        L93: $_stack[++$_stack_sp] = 95;
        L94: goto L444;
        L95: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L96: if ($_fail) { goto L98; }
        L97: $_value = $this->_1($_env);
        L98: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L99: if (!$_fail) { goto L175; }
        L100: $_p = $_stack[$_stack_sp];
        L101: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L102: $_stack[++$_stack_sp] = $_b;
        L103: $_stack[++$_stack_sp] = NULL;
        L104: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "-name") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-name"', $_expected)) { $_expected[] = '"-name"'; } } }
        L105: $_stack[$_stack_sp] = $_value;
        L106: if ($_fail) { goto L116; }
        L107: $_stack[++$_stack_sp] = 109;
        L108: goto L538;
        L109: if ($_fail) { goto L116; }
        L110: $_stack[++$_stack_sp] = 112;
        L111: goto L678;
        L112: $_env["name"] = $_value;
        L113: if ($_fail) { goto L116; }
        L114: $_stack[++$_stack_sp] = 116;
        L115: goto L444;
        L116: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L117: if ($_fail) { goto L119; }
        L118: $_value = $this->_4($_env);
        L119: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L120: if (!$_fail) { goto L175; }
        L121: $_p = $_stack[$_stack_sp];
        L122: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L123: $_stack[++$_stack_sp] = $_b;
        L124: $_stack[++$_stack_sp] = NULL;
        L125: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "-init") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-init"', $_expected)) { $_expected[] = '"-init"'; } } }
        L126: $_stack[$_stack_sp] = $_value;
        L127: if ($_fail) { goto L137; }
        L128: $_stack[++$_stack_sp] = 130;
        L129: goto L444;
        L130: if ($_fail) { goto L137; }
        L131: $_stack[++$_stack_sp] = 133;
        L132: goto L716;
        L133: $_env["code"] = $_value;
        L134: if ($_fail) { goto L137; }
        L135: $_stack[++$_stack_sp] = 137;
        L136: goto L444;
        L137: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L138: if ($_fail) { goto L140; }
        L139: $_value = $this->_5($_env);
        L140: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L141: if (!$_fail) { goto L175; }
        L142: $_p = $_stack[$_stack_sp];
        L143: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L144: $_stack[++$_stack_sp] = $_b;
        L145: $_stack[++$_stack_sp] = NULL;
        L146: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "-invoke") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-invoke"', $_expected)) { $_expected[] = '"-invoke"'; } } }
        L147: $_stack[$_stack_sp] = $_value;
        L148: if ($_fail) { goto L171; }
        L149: $_stack[++$_stack_sp] = 151;
        L150: goto L444;
        L151: if ($_fail) { goto L171; }
        L152: $_stack[++$_stack_sp] = $_p;
        L153: $_stack[++$_stack_sp] = 155;
        L154: goto L341;
        L155: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L156: if (!$_fail) { goto L160; }
        L157: $_fail = false;
        L158: $_value = NULL;
        L159: $_p = $_a;
        L160: $_env["parameters"] = $_value;
        L161: if ($_fail) { goto L171; }
        L162: $_stack[++$_stack_sp] = 164;
        L163: goto L444;
        L164: if ($_fail) { goto L171; }
        L165: $_stack[++$_stack_sp] = 167;
        L166: goto L716;
        L167: $_env["code"] = $_value;
        L168: if ($_fail) { goto L171; }
        L169: $_stack[++$_stack_sp] = 171;
        L170: goto L444;
        L171: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L172: if ($_fail) { goto L174; }
        L173: $_value = $this->_6($_env);
        L174: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L175: unset($_stack[$_stack_sp--]);
        L176: if ($_fail) { goto L180; }
        L177: $_stack[$_stack_sp][] = $_value;
        L178: $_stack[$_stack_sp - 1] = $_p;
        L179: goto L33;
        L180: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L181: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L182: $_fail = false;
        L183: $_env["declarations"] = $_value;
        L184: if ($_fail) { goto L207; }
        L185: $_stack[++$_stack_sp] = $_p;
        L186: $_stack[++$_stack_sp] = array();
        L187: $_stack[++$_stack_sp] = true;
        L188: $_stack[++$_stack_sp] = 190;
        L189: goto L221;
        L190: if ($_fail) { goto L195; }
        L191: $_stack[$_stack_sp] = false;
        L192: $_stack[$_stack_sp - 1][] = $_value;
        L193: $_stack[$_stack_sp - 2] = $_p;
        L194: goto L188;
        L195: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L196: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L197: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L198: if ($_a) { goto L200; }
        L199: $_fail = false;
        L200: $_env["definitions"] = $_value;
        L201: if ($_fail) { goto L207; }
        L202: $_stack[++$_stack_sp] = $_p;
        L203: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L204: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L205: $_value = NULL;
        L206: $_fail = !$_fail;
        L207: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L208: if ($_fail) { goto L210; }
        L209: $_value = $this->_0($_env);
        L210: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L211: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L212: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L213: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L214: $_b = array();
        L215: $_b[0] = $_fail;
        L216: $_b[1] = $_value;
        L217: $_b[2] = $_p;
        L218: $_cache[$_a] = $_b;
        L219: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L220: if ($_a !== 11) return array(FALSE, NULL, 0); goto L11;
        L221: $_stack[++$_stack_sp] = "1@";
        L222: $_stack[$_stack_sp] .= $_p;
        L223: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L230; }
        L224: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L225: $_b = $_cache[$_a];
        L226: $_fail = $_b[0];
        L227: $_value = $_b[1];
        L228: $_p = $_b[2];
        L229: goto L339;
        L230: $_stack[++$_stack_sp] = $_env;
        L231: $_env = array();
        L232: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L233: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L234: $_stack[++$_stack_sp] = $_b;
        L235: $_stack[++$_stack_sp] = NULL;
        L236: $_stack[++$_stack_sp] = $_p;
        L237: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L238: $_stack[++$_stack_sp] = $_b;
        L239: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "_") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"_"', $_expected)) { $_expected[] = '"_"'; } } }
        L240: if ($_fail) { goto L242; }
        L241: $_value = $this->_8($_env);
        L242: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L243: if (!$_fail) { goto L301; }
        L244: $_p = $_stack[$_stack_sp];
        L245: $_stack[++$_stack_sp] = $_env;
        L246: $_env = array();
        L247: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L248: $_stack[++$_stack_sp] = $_b;
        L249: $_stack[++$_stack_sp] = NULL;
        L250: $_stack[++$_stack_sp] = $_env;
        L251: $_env = array();
        L252: $_stack[++$_stack_sp] = 254;
        L253: goto L678;
        L254: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L255: $_env["first"] = $_value;
        L256: $_stack[$_stack_sp] = $_value;
        L257: if ($_fail) { goto L296; }
        L258: $_stack[++$_stack_sp] = $_p;
        L259: $_stack[++$_stack_sp] = array();
        L260: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L261: $_stack[++$_stack_sp] = $_b;
        L262: $_stack[++$_stack_sp] = NULL;
        L263: $_stack[++$_stack_sp] = $_env;
        L264: $_env = array();
        L265: $_stack[++$_stack_sp] = NULL;
        L266: $_stack[++$_stack_sp] = 268;
        L267: goto L444;
        L268: $_stack[$_stack_sp] = $_value;
        L269: if ($_fail) { goto L274; }
        L270: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ",") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('","', $_expected)) { $_expected[] = '","'; } } }
        L271: if ($_fail) { goto L274; }
        L272: $_stack[++$_stack_sp] = 274;
        L273: goto L444;
        L274: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L275: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L276: $_stack[$_stack_sp] = $_value;
        L277: if ($_fail) { goto L284; }
        L278: $_stack[++$_stack_sp] = $_env;
        L279: $_env = array();
        L280: $_stack[++$_stack_sp] = 282;
        L281: goto L678;
        L282: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L283: $_env["next"] = $_value;
        L284: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L285: if ($_fail) { goto L287; }
        L286: $_value = $this->_10($_env);
        L287: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L288: if ($_fail) { goto L292; }
        L289: $_stack[$_stack_sp][] = $_value;
        L290: $_stack[$_stack_sp - 1] = $_p;
        L291: goto L260;
        L292: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L293: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L294: $_fail = false;
        L295: $_env["rest"] = $_value;
        L296: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L297: if ($_fail) { goto L299; }
        L298: $_value = $this->_9($_env);
        L299: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L300: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L301: unset($_stack[$_stack_sp--]);
        L302: $_env["match"] = $_value;
        L303: $_stack[$_stack_sp] = $_value;
        L304: if ($_fail) { goto L327; }
        L305: $_stack[++$_stack_sp] = 307;
        L306: goto L444;
        L307: if ($_fail) { goto L327; }
        L308: $_stack[++$_stack_sp] = $_p;
        L309: $_stack[++$_stack_sp] = 311;
        L310: goto L341;
        L311: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L312: if (!$_fail) { goto L316; }
        L313: $_fail = false;
        L314: $_value = NULL;
        L315: $_p = $_a;
        L316: $_env["parameters"] = $_value;
        L317: if ($_fail) { goto L327; }
        L318: $_stack[++$_stack_sp] = 320;
        L319: goto L444;
        L320: if ($_fail) { goto L327; }
        L321: $_stack[++$_stack_sp] = 323;
        L322: goto L716;
        L323: $_env["code"] = $_value;
        L324: if ($_fail) { goto L327; }
        L325: $_stack[++$_stack_sp] = 327;
        L326: goto L444;
        L327: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L328: if ($_fail) { goto L330; }
        L329: $_value = $this->_7($_env);
        L330: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L331: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L332: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L333: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L334: $_b = array();
        L335: $_b[0] = $_fail;
        L336: $_b[1] = $_value;
        L337: $_b[2] = $_p;
        L338: $_cache[$_a] = $_b;
        L339: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L340: if ($_a !== 190) return array(FALSE, NULL, 1); goto L190;
        L341: $_stack[++$_stack_sp] = "2@";
        L342: $_stack[$_stack_sp] .= $_p;
        L343: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L350; }
        L344: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L345: $_b = $_cache[$_a];
        L346: $_fail = $_b[0];
        L347: $_value = $_b[1];
        L348: $_p = $_b[2];
        L349: goto L442;
        L350: $_stack[++$_stack_sp] = $_env;
        L351: $_env = array();
        L352: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L353: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L354: $_stack[++$_stack_sp] = $_b;
        L355: $_stack[++$_stack_sp] = NULL;
        L356: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L357: $_stack[$_stack_sp] = $_value;
        L358: if ($_fail) { goto L430; }
        L359: $_stack[++$_stack_sp] = 361;
        L360: goto L444;
        L361: if ($_fail) { goto L430; }
        L362: $_stack[++$_stack_sp] = $_p;
        L363: $_stack[++$_stack_sp] = $_env;
        L364: $_env = array();
        L365: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L366: $_stack[++$_stack_sp] = $_b;
        L367: $_stack[++$_stack_sp] = NULL;
        L368: $_stack[++$_stack_sp] = $_env;
        L369: $_env = array();
        L370: $_stack[++$_stack_sp] = 372;
        L371: goto L678;
        L372: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L373: $_env["first"] = $_value;
        L374: $_stack[$_stack_sp] = $_value;
        L375: if ($_fail) { goto L414; }
        L376: $_stack[++$_stack_sp] = $_p;
        L377: $_stack[++$_stack_sp] = array();
        L378: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L379: $_stack[++$_stack_sp] = $_b;
        L380: $_stack[++$_stack_sp] = NULL;
        L381: $_stack[++$_stack_sp] = $_env;
        L382: $_env = array();
        L383: $_stack[++$_stack_sp] = NULL;
        L384: $_stack[++$_stack_sp] = 386;
        L385: goto L444;
        L386: $_stack[$_stack_sp] = $_value;
        L387: if ($_fail) { goto L392; }
        L388: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ",") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('","', $_expected)) { $_expected[] = '","'; } } }
        L389: if ($_fail) { goto L392; }
        L390: $_stack[++$_stack_sp] = 392;
        L391: goto L444;
        L392: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L393: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L394: $_stack[$_stack_sp] = $_value;
        L395: if ($_fail) { goto L402; }
        L396: $_stack[++$_stack_sp] = $_env;
        L397: $_env = array();
        L398: $_stack[++$_stack_sp] = 400;
        L399: goto L678;
        L400: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L401: $_env["next"] = $_value;
        L402: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L403: if ($_fail) { goto L405; }
        L404: $_value = $this->_13($_env);
        L405: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L406: if ($_fail) { goto L410; }
        L407: $_stack[$_stack_sp][] = $_value;
        L408: $_stack[$_stack_sp - 1] = $_p;
        L409: goto L378;
        L410: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L411: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L412: $_fail = false;
        L413: $_env["rest"] = $_value;
        L414: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L415: if ($_fail) { goto L417; }
        L416: $_value = $this->_12($_env);
        L417: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L418: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L419: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L420: if (!$_fail) { goto L424; }
        L421: $_fail = false;
        L422: $_value = NULL;
        L423: $_p = $_a;
        L424: $_env["parameters"] = $_value;
        L425: if ($_fail) { goto L430; }
        L426: $_stack[++$_stack_sp] = 428;
        L427: goto L444;
        L428: if ($_fail) { goto L430; }
        L429: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ")") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('")"', $_expected)) { $_expected[] = '")"'; } } }
        L430: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L431: if ($_fail) { goto L433; }
        L432: $_value = $this->_11($_env);
        L433: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L434: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L435: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L436: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L437: $_b = array();
        L438: $_b[0] = $_fail;
        L439: $_b[1] = $_value;
        L440: $_b[2] = $_p;
        L441: $_cache[$_a] = $_b;
        L442: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L443: if ($_a === 155) { goto L155; } else if ($_a === 311) { goto L311; } else { return array(FALSE, NULL, 2); }
        L444: $_stack[++$_stack_sp] = "3@";
        L445: $_stack[$_stack_sp] .= $_p;
        L446: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L453; }
        L447: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L448: $_b = $_cache[$_a];
        L449: $_fail = $_b[0];
        L450: $_value = $_b[1];
        L451: $_p = $_b[2];
        L452: goto L536;
        L453: $_stack[++$_stack_sp] = $_env;
        L454: $_env = array();
        L455: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L456: $_stack[++$_stack_sp] = $_p;
        L457: $_stack[++$_stack_sp] = "";
        L458: $_stack[++$_stack_sp] = $_p;
        L459: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 32) || ($_a === 9) || ($_a === 13) || ($_a === 10))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[ \\t\\r\\n]', $_expected)) { $_expected[] = '[ \\t\\r\\n]'; } } }
        L460: if (!$_fail) { goto L520; }
        L461: $_p = $_stack[$_stack_sp];
        L462: $_stack[++$_stack_sp] = "";
        L463: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "//") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"//"', $_expected)) { $_expected[] = '"//"'; } } }
        L464: $_stack[$_stack_sp] .= $_value;
        L465: if ($_fail) { goto L488; }
        L466: $_stack[++$_stack_sp] = $_p;
        L467: $_stack[++$_stack_sp] = "";
        L468: $_stack[++$_stack_sp] = "";
        L469: $_stack[++$_stack_sp] = $_p;
        L470: $_stack[++$_stack_sp] = 472;
        L471: goto L638;
        L472: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L473: $_value = NULL;
        L474: $_fail = !$_fail;
        L475: $_stack[$_stack_sp] .= $_value;
        L476: if ($_fail) { goto L479; }
        L477: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L478: $_stack[$_stack_sp] .= $_value;
        L479: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L480: if ($_fail) { goto L484; }
        L481: $_stack[$_stack_sp] .= $_value;
        L482: $_stack[$_stack_sp - 1] = $_p;
        L483: goto L468;
        L484: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L485: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L486: $_fail = false;
        L487: $_stack[$_stack_sp] .= $_value;
        L488: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L489: if (!$_fail) { goto L520; }
        L490: $_p = $_stack[$_stack_sp];
        L491: $_stack[++$_stack_sp] = "";
        L492: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "/*") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"/*"', $_expected)) { $_expected[] = '"/*"'; } } }
        L493: $_stack[$_stack_sp] .= $_value;
        L494: if ($_fail) { goto L519; }
        L495: $_stack[++$_stack_sp] = $_p;
        L496: $_stack[++$_stack_sp] = "";
        L497: $_stack[++$_stack_sp] = "";
        L498: $_stack[++$_stack_sp] = $_p;
        L499: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L500: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L501: $_value = NULL;
        L502: $_fail = !$_fail;
        L503: $_stack[$_stack_sp] .= $_value;
        L504: if ($_fail) { goto L507; }
        L505: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L506: $_stack[$_stack_sp] .= $_value;
        L507: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L508: if ($_fail) { goto L512; }
        L509: $_stack[$_stack_sp] .= $_value;
        L510: $_stack[$_stack_sp - 1] = $_p;
        L511: goto L497;
        L512: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L513: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L514: $_fail = false;
        L515: $_stack[$_stack_sp] .= $_value;
        L516: if ($_fail) { goto L519; }
        L517: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L518: $_stack[$_stack_sp] .= $_value;
        L519: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L520: unset($_stack[$_stack_sp--]);
        L521: if ($_fail) { goto L525; }
        L522: $_stack[$_stack_sp] .= $_value;
        L523: $_stack[$_stack_sp - 1] = $_p;
        L524: goto L458;
        L525: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L526: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L527: $_fail = false;
        L528: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L529: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L530: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L531: $_b = array();
        L532: $_b[0] = $_fail;
        L533: $_b[1] = $_value;
        L534: $_b[2] = $_p;
        L535: $_cache[$_a] = $_b;
        L536: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L537: if ($_a === 29) { goto L29; } else if ($_a === 95) { goto L95; } else if ($_a === 116) { goto L116; } else if ($_a === 130) { goto L130; } else if ($_a === 137) { goto L137; } else if ($_a === 151) { goto L151; } else if ($_a === 164) { goto L164; } else if ($_a === 171) { goto L171; } else if ($_a === 268) { goto L268; } else if ($_a === 274) { goto L274; } else if ($_a === 307) { goto L307; } else if ($_a === 320) { goto L320; } else if ($_a === 327) { goto L327; } else if ($_a === 361) { goto L361; } else if ($_a === 386) { goto L386; } else if ($_a === 392) { goto L392; } else if ($_a === 428) { goto L428; } else if ($_a === 739) { goto L739; } else { return array(FALSE, NULL, 3); }
        L538: $_stack[++$_stack_sp] = "4@";
        L539: $_stack[$_stack_sp] .= $_p;
        L540: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L547; }
        L541: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L542: $_b = $_cache[$_a];
        L543: $_fail = $_b[0];
        L544: $_value = $_b[1];
        L545: $_p = $_b[2];
        L546: goto L636;
        L547: $_stack[++$_stack_sp] = $_env;
        L548: $_env = array();
        L549: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L550: $_stack[++$_stack_sp] = $_p;
        L551: $_stack[++$_stack_sp] = array();
        L552: $_stack[++$_stack_sp] = true;
        L553: $_stack[++$_stack_sp] = $_p;
        L554: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 32) || ($_a === 9) || ($_a === 13) || ($_a === 10))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[ \\t\\r\\n]', $_expected)) { $_expected[] = '[ \\t\\r\\n]'; } } }
        L555: if (!$_fail) { goto L617; }
        L556: $_p = $_stack[$_stack_sp];
        L557: $_stack[++$_stack_sp] = NULL;
        L558: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "//") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"//"', $_expected)) { $_expected[] = '"//"'; } } }
        L559: $_stack[$_stack_sp] = $_value;
        L560: if ($_fail) { goto L585; }
        L561: $_stack[++$_stack_sp] = $_p;
        L562: $_stack[++$_stack_sp] = "";
        L563: $_stack[++$_stack_sp] = "";
        L564: $_stack[++$_stack_sp] = $_p;
        L565: $_stack[++$_stack_sp] = 567;
        L566: goto L638;
        L567: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L568: $_value = NULL;
        L569: $_fail = !$_fail;
        L570: $_stack[$_stack_sp] .= $_value;
        L571: if ($_fail) { goto L574; }
        L572: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L573: $_stack[$_stack_sp] .= $_value;
        L574: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L575: if ($_fail) { goto L579; }
        L576: $_stack[$_stack_sp] .= $_value;
        L577: $_stack[$_stack_sp - 1] = $_p;
        L578: goto L563;
        L579: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L580: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L581: $_fail = false;
        L582: if ($_fail) { goto L585; }
        L583: $_stack[++$_stack_sp] = 585;
        L584: goto L638;
        L585: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L586: if (!$_fail) { goto L617; }
        L587: $_p = $_stack[$_stack_sp];
        L588: $_stack[++$_stack_sp] = "";
        L589: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "/*") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"/*"', $_expected)) { $_expected[] = '"/*"'; } } }
        L590: $_stack[$_stack_sp] .= $_value;
        L591: if ($_fail) { goto L616; }
        L592: $_stack[++$_stack_sp] = $_p;
        L593: $_stack[++$_stack_sp] = "";
        L594: $_stack[++$_stack_sp] = "";
        L595: $_stack[++$_stack_sp] = $_p;
        L596: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L597: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L598: $_value = NULL;
        L599: $_fail = !$_fail;
        L600: $_stack[$_stack_sp] .= $_value;
        L601: if ($_fail) { goto L604; }
        L602: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L603: $_stack[$_stack_sp] .= $_value;
        L604: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L605: if ($_fail) { goto L609; }
        L606: $_stack[$_stack_sp] .= $_value;
        L607: $_stack[$_stack_sp - 1] = $_p;
        L608: goto L594;
        L609: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L610: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L611: $_fail = false;
        L612: $_stack[$_stack_sp] .= $_value;
        L613: if ($_fail) { goto L616; }
        L614: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L615: $_stack[$_stack_sp] .= $_value;
        L616: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L617: unset($_stack[$_stack_sp--]);
        L618: if ($_fail) { goto L623; }
        L619: $_stack[$_stack_sp] = false;
        L620: $_stack[$_stack_sp - 1][] = $_value;
        L621: $_stack[$_stack_sp - 2] = $_p;
        L622: goto L553;
        L623: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L624: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L625: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L626: if ($_a) { goto L628; }
        L627: $_fail = false;
        L628: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L629: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L630: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L631: $_b = array();
        L632: $_b[0] = $_fail;
        L633: $_b[1] = $_value;
        L634: $_b[2] = $_p;
        L635: $_cache[$_a] = $_b;
        L636: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L637: if ($_a === 42) { goto L42; } else if ($_a === 109) { goto L109; } else { return array(FALSE, NULL, 4); }
        L638: $_stack[++$_stack_sp] = "5@";
        L639: $_stack[$_stack_sp] .= $_p;
        L640: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L647; }
        L641: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L642: $_b = $_cache[$_a];
        L643: $_fail = $_b[0];
        L644: $_value = $_b[1];
        L645: $_p = $_b[2];
        L646: goto L676;
        L647: $_stack[++$_stack_sp] = $_env;
        L648: $_env = array();
        L649: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L650: $_stack[++$_stack_sp] = $_p;
        L651: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\n") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\n"', $_expected)) { $_expected[] = '"\\n"'; } } }
        L652: if (!$_fail) { goto L667; }
        L653: $_p = $_stack[$_stack_sp];
        L654: $_stack[++$_stack_sp] = "";
        L655: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\r") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\r"', $_expected)) { $_expected[] = '"\\r"'; } } }
        L656: $_stack[$_stack_sp] .= $_value;
        L657: if ($_fail) { goto L666; }
        L658: $_stack[++$_stack_sp] = $_p;
        L659: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\n") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\n"', $_expected)) { $_expected[] = '"\\n"'; } } }
        L660: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L661: if (!$_fail) { goto L665; }
        L662: $_fail = false;
        L663: $_value = NULL;
        L664: $_p = $_a;
        L665: $_stack[$_stack_sp] .= $_value;
        L666: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L667: unset($_stack[$_stack_sp--]);
        L668: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L669: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L670: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L671: $_b = array();
        L672: $_b[0] = $_fail;
        L673: $_b[1] = $_value;
        L674: $_b[2] = $_p;
        L675: $_cache[$_a] = $_b;
        L676: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L677: if ($_a === 472) { goto L472; } else if ($_a === 567) { goto L567; } else if ($_a === 585) { goto L585; } else if ($_a === 772) { goto L772; } else { return array(FALSE, NULL, 5); }
        L678: $_stack[++$_stack_sp] = "6@";
        L679: $_stack[$_stack_sp] .= $_p;
        L680: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L687; }
        L681: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L682: $_b = $_cache[$_a];
        L683: $_fail = $_b[0];
        L684: $_value = $_b[1];
        L685: $_p = $_b[2];
        L686: goto L714;
        L687: $_stack[++$_stack_sp] = $_env;
        L688: $_env = array();
        L689: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L690: $_stack[++$_stack_sp] = "";
        L691: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((97 <= $_a && $_a <= 122) || (65 <= $_a && $_a <= 90) || ($_a === 95))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[a-zA-Z_]', $_expected)) { $_expected[] = '[a-zA-Z_]'; } } }
        L692: $_stack[$_stack_sp] .= $_value;
        L693: if ($_fail) { goto L705; }
        L694: $_stack[++$_stack_sp] = $_p;
        L695: $_stack[++$_stack_sp] = "";
        L696: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((97 <= $_a && $_a <= 122) || (65 <= $_a && $_a <= 90) || (48 <= $_a && $_a <= 57) || ($_a === 95))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[a-zA-Z0-9_]', $_expected)) { $_expected[] = '[a-zA-Z0-9_]'; } } }
        L697: if ($_fail) { goto L701; }
        L698: $_stack[$_stack_sp] .= $_value;
        L699: $_stack[$_stack_sp - 1] = $_p;
        L700: goto L696;
        L701: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L702: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L703: $_fail = false;
        L704: $_stack[$_stack_sp] .= $_value;
        L705: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L706: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L707: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L708: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L709: $_b = array();
        L710: $_b[0] = $_fail;
        L711: $_b[1] = $_value;
        L712: $_b[2] = $_p;
        L713: $_cache[$_a] = $_b;
        L714: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L715: if ($_a === 52) { goto L52; } else if ($_a === 72) { goto L72; } else if ($_a === 112) { goto L112; } else if ($_a === 254) { goto L254; } else if ($_a === 282) { goto L282; } else if ($_a === 372) { goto L372; } else if ($_a === 400) { goto L400; } else { return array(FALSE, NULL, 6); }
        L716: $_stack[++$_stack_sp] = "7@";
        L717: $_stack[$_stack_sp] .= $_p;
        L718: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L725; }
        L719: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L720: $_b = $_cache[$_a];
        L721: $_fail = $_b[0];
        L722: $_value = $_b[1];
        L723: $_p = $_b[2];
        L724: goto L801;
        L725: $_stack[++$_stack_sp] = $_env;
        L726: $_env = array();
        L727: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L728: $_stack[++$_stack_sp] = $_p;
        L729: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L730: $_stack[++$_stack_sp] = $_b;
        L731: $_stack[++$_stack_sp] = NULL;
        L732: $_stack[++$_stack_sp] = $_p;
        L733: $_stack[++$_stack_sp] = NULL;
        L734: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "->") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"->"', $_expected)) { $_expected[] = '"->"'; } } }
        L735: $_stack[$_stack_sp] = $_value;
        L736: if ($_fail) { goto L739; }
        L737: $_stack[++$_stack_sp] = 739;
        L738: goto L444;
        L739: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L740: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L741: if (!$_fail) { goto L745; }
        L742: $_fail = false;
        L743: $_value = NULL;
        L744: $_p = $_a;
        L745: $_stack[$_stack_sp] = $_value;
        L746: if ($_fail) { goto L754; }
        L747: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "{") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{"', $_expected)) { $_expected[] = '"{"'; } } }
        L748: if ($_fail) { goto L754; }
        L749: $_stack[++$_stack_sp] = 751;
        L750: goto L803;
        L751: $_env["code"] = $_value;
        L752: if ($_fail) { goto L754; }
        L753: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L754: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L755: if ($_fail) { goto L757; }
        L756: $_value = $this->_14($_env);
        L757: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L758: if (!$_fail) { goto L792; }
        L759: $_p = $_stack[$_stack_sp];
        L760: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L761: $_stack[++$_stack_sp] = $_b;
        L762: $_stack[++$_stack_sp] = NULL;
        L763: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "->") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"->"', $_expected)) { $_expected[] = '"->"'; } } }
        L764: $_stack[$_stack_sp] = $_value;
        L765: if ($_fail) { goto L788; }
        L766: $_stack[++$_stack_sp] = $_p;
        L767: $_stack[++$_stack_sp] = "";
        L768: $_stack[++$_stack_sp] = "";
        L769: $_stack[++$_stack_sp] = $_p;
        L770: $_stack[++$_stack_sp] = 772;
        L771: goto L638;
        L772: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L773: $_value = NULL;
        L774: $_fail = !$_fail;
        L775: $_stack[$_stack_sp] .= $_value;
        L776: if ($_fail) { goto L779; }
        L777: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L778: $_stack[$_stack_sp] .= $_value;
        L779: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L780: if ($_fail) { goto L784; }
        L781: $_stack[$_stack_sp] .= $_value;
        L782: $_stack[$_stack_sp - 1] = $_p;
        L783: goto L768;
        L784: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L785: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L786: $_fail = false;
        L787: $_env["code"] = $_value;
        L788: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L789: if ($_fail) { goto L791; }
        L790: $_value = $this->_15($_env);
        L791: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L792: unset($_stack[$_stack_sp--]);
        L793: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L794: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L795: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L796: $_b = array();
        L797: $_b[0] = $_fail;
        L798: $_b[1] = $_value;
        L799: $_b[2] = $_p;
        L800: $_cache[$_a] = $_b;
        L801: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L802: if ($_a === 133) { goto L133; } else if ($_a === 167) { goto L167; } else if ($_a === 323) { goto L323; } else { return array(FALSE, NULL, 7); }
        L803: $_stack[++$_stack_sp] = "8@";
        L804: $_stack[$_stack_sp] .= $_p;
        L805: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L812; }
        L806: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L807: $_b = $_cache[$_a];
        L808: $_fail = $_b[0];
        L809: $_value = $_b[1];
        L810: $_p = $_b[2];
        L811: goto L879;
        L812: $_stack[++$_stack_sp] = $_env;
        L813: $_env = array();
        L814: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L815: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L816: $_stack[++$_stack_sp] = $_b;
        L817: $_stack[++$_stack_sp] = $_p;
        L818: $_stack[++$_stack_sp] = array();
        L819: $_stack[++$_stack_sp] = $_p;
        L820: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L821: $_stack[++$_stack_sp] = $_b;
        L822: $_stack[++$_stack_sp] = NULL;
        L823: $_stack[++$_stack_sp] = $_p;
        L824: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "{") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{"', $_expected)) { $_expected[] = '"{"'; } } }
        L825: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L826: $_value = NULL;
        L827: $_fail = !$_fail;
        L828: if ($_fail) { goto L838; }
        L829: $_stack[++$_stack_sp] = $_p;
        L830: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L831: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L832: $_value = NULL;
        L833: $_fail = !$_fail;
        L834: if ($_fail) { goto L838; }
        L835: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L836: $_env["c"] = $_value;
        L837: $_stack[$_stack_sp] = $_value;
        L838: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L839: if ($_fail) { goto L841; }
        L840: $_value = $this->_17($_env);
        L841: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L842: if (!$_fail) { goto L859; }
        L843: $_p = $_stack[$_stack_sp];
        L844: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L845: $_stack[++$_stack_sp] = $_b;
        L846: $_stack[++$_stack_sp] = NULL;
        L847: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "{") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{"', $_expected)) { $_expected[] = '"{"'; } } }
        L848: $_stack[$_stack_sp] = $_value;
        L849: if ($_fail) { goto L855; }
        L850: $_stack[++$_stack_sp] = 852;
        L851: goto L803;
        L852: $_env["i"] = $_value;
        L853: if ($_fail) { goto L855; }
        L854: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L855: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L856: if ($_fail) { goto L858; }
        L857: $_value = $this->_18($_env);
        L858: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L859: unset($_stack[$_stack_sp--]);
        L860: if ($_fail) { goto L864; }
        L861: $_stack[$_stack_sp][] = $_value;
        L862: $_stack[$_stack_sp - 1] = $_p;
        L863: goto L819;
        L864: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L865: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L866: $_fail = false;
        L867: $_env["inside"] = $_value;
        L868: if ($_fail) { goto L870; }
        L869: $_value = $this->_16($_env);
        L870: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L871: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L872: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L873: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L874: $_b = array();
        L875: $_b[0] = $_fail;
        L876: $_b[1] = $_value;
        L877: $_b[2] = $_p;
        L878: $_cache[$_a] = $_b;
        L879: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L880: if ($_a === 751) { goto L751; } else if ($_a === 852) { goto L852; } else { return array(FALSE, NULL, 8); }
        Lend:
        list($ok, $result) = array(!$_fail, $_value);
        if (!$ok) {
            $before = str_replace(array("\r\n", "\r"), "\n", substr($_s, 0, $_maxp));
            $after = str_replace(array("\r\n", "\r"), "\n", substr($_s, $_maxp));
            $line = 1;
            if (($pos = strrpos($before, "\n")) !== FALSE) {
                $line = substr_count($before, "\n") + 1;
                $before = (string) substr($before, $pos + 1);
            }
            if (($pos = strpos($after, "\n")) !== FALSE) {
                $after = substr($after, 0, $pos);
            }
            return array(FALSE, NULL, (object) array('position' => $_maxp, 'line' => $line, 'column' => strlen($before) + 1, 'context' => $before . $after, 'expected' => $_expected));
        }
        return array(TRUE, $result, NULL);
    }
    private function _0() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("treewalker", array_merge($declarations, $definitions));
    
    }
    private function _1() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("namespace", $namespace);
    
    }
    private function _2() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $first . implode("", $rest);
    
    }
    private function _3() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $s . $next;
    
    }
    private function _4() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("name", $name);
    
    }
    private function _5() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("init", $code);
    
    }
    private function _6() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("invoke", $parameters, $code);
    
    }
    private function _7() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("matcher", $match, (array) $parameters, $code);
    
    }
    private function _8() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return TRUE;
    
    }
    private function _9() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array_merge(array($first), $rest);
    
    }
    private function _10() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $next;
    
    }
    private function _11() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return (array) $parameters;
    
    }
    private function _12() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array_merge(array($first), $rest);
    
    }
    private function _13() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $next;
    
    }
    private function _14() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return ltrim($code);
    
    }
    private function _15() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "return " . trim($code) . ";";
    
    }
    private function _16() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return implode("", $inside);
    
    }
    private function _17() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $c;
    
    }
    private function _18() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "{" . $i . "}";
    
    }
}
