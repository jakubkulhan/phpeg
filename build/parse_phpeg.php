<?php
// autogenerated file, do not edit!
class parse_phpeg {
    
    private $_environments = array(-1 => array());
    private $_environment_stack = array();
    private $_environment_stack_sp = -1;
    public function __construct() {
        
    }
    
    public function __invoke($s) {
        return $this->parse($s);
    }
    
    public function parse($_s) {
        $_addr = 0;
        $_maxp = $_p = 0;
        $_expected = array();
        L0: $_stack_sp = -1; $_stack = array();
        L1: $_fail = false;
        L2: $_value = NULL;
        L3: $_cache = array();
        L4: $_a = NULL;
        L5: $_b = NULL;
        L6: $_c = NULL;
        L7: $_d = NULL;
        L8: $_env = array();
        L9: $_stack[++$_stack_sp] = 11;
        L10: goto L12;
        L11: goto Lend;
        L12: $_stack[++$_stack_sp] = "0@";
        L13: $_stack[$_stack_sp] .= $_p;
        L14: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L21; }
        L15: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L16: $_b = $_cache[$_a];
        L17: $_fail = $_b[0];
        L18: $_value = $_b[1];
        L19: $_p = $_b[2];
        L20: goto L284;
        L21: $_stack[++$_stack_sp] = $_env;
        L22: $_env = array();
        L23: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L24: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L25: $_stack[++$_stack_sp] = $_b;
        L26: $_stack[++$_stack_sp] = NULL;
        L27: $_stack[++$_stack_sp] = 29;
        L28: goto L1483;
        L29: $_stack[$_stack_sp] = $_value;
        L30: if ($_fail) { goto L272; }
        L31: $_stack[++$_stack_sp] = $_p;
        L32: $_stack[++$_stack_sp] = array();
        L33: $_stack[++$_stack_sp] = $_p;
        L34: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L35: $_stack[++$_stack_sp] = $_b;
        L36: $_stack[++$_stack_sp] = NULL;
        L37: $_fail = TRUE; if (($_a = substr($_s, $_p, 10)) === "-namespace") { $_fail = FALSE; $_value = $_a; $_p += 10; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-namespace"', $_expected)) { $_expected[] = '"-namespace"'; } } }
        L38: $_stack[$_stack_sp] = $_value;
        L39: if ($_fail) { goto L95; }
        L40: $_stack[++$_stack_sp] = 42;
        L41: goto L1577;
        L42: if ($_fail) { goto L95; }
        L43: $_stack[++$_stack_sp] = $_env;
        L44: $_env = array();
        L45: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L46: $_stack[++$_stack_sp] = $_b;
        L47: $_stack[++$_stack_sp] = NULL;
        L48: $_stack[++$_stack_sp] = $_env;
        L49: $_env = array();
        L50: $_stack[++$_stack_sp] = 52;
        L51: goto L1280;
        L52: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L53: $_env["first"] = $_value;
        L54: $_stack[$_stack_sp] = $_value;
        L55: if ($_fail) { goto L86; }
        L56: $_stack[++$_stack_sp] = $_p;
        L57: $_stack[++$_stack_sp] = array();
        L58: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L59: $_stack[++$_stack_sp] = $_b;
        L60: $_stack[++$_stack_sp] = NULL;
        L61: $_stack[++$_stack_sp] = $_env;
        L62: $_env = array();
        L63: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\\") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\"', $_expected)) { $_expected[] = '"\\\\"'; } } }
        L64: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L65: $_env["s"] = $_value;
        L66: $_stack[$_stack_sp] = $_value;
        L67: if ($_fail) { goto L74; }
        L68: $_stack[++$_stack_sp] = $_env;
        L69: $_env = array();
        L70: $_stack[++$_stack_sp] = 72;
        L71: goto L1280;
        L72: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L73: $_env["next"] = $_value;
        L74: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L75: if ($_fail) { goto L77; }
        L76: $_value = $this->_3($_env);
        L77: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L78: if ($_fail) { goto L82; }
        L79: $_stack[$_stack_sp][] = $_value;
        L80: $_stack[$_stack_sp - 1] = $_p;
        L81: goto L58;
        L82: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L83: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L84: $_fail = false;
        L85: $_env["rest"] = $_value;
        L86: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L87: if ($_fail) { goto L89; }
        L88: $_value = $this->_2($_env);
        L89: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L90: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L91: $_env["namespace"] = $_value;
        L92: if ($_fail) { goto L95; }
        L93: $_stack[++$_stack_sp] = 95;
        L94: goto L1483;
        L95: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L96: if ($_fail) { goto L98; }
        L97: $_value = $this->_1($_env);
        L98: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L99: if (!$_fail) { goto L234; }
        L100: $_p = $_stack[$_stack_sp];
        L101: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L102: $_stack[++$_stack_sp] = $_b;
        L103: $_stack[++$_stack_sp] = NULL;
        L104: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "-name") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-name"', $_expected)) { $_expected[] = '"-name"'; } } }
        L105: $_stack[$_stack_sp] = $_value;
        L106: if ($_fail) { goto L116; }
        L107: $_stack[++$_stack_sp] = 109;
        L108: goto L1577;
        L109: if ($_fail) { goto L116; }
        L110: $_stack[++$_stack_sp] = 112;
        L111: goto L1280;
        L112: $_env["name"] = $_value;
        L113: if ($_fail) { goto L116; }
        L114: $_stack[++$_stack_sp] = 116;
        L115: goto L1483;
        L116: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L117: if ($_fail) { goto L119; }
        L118: $_value = $this->_4($_env);
        L119: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L120: if (!$_fail) { goto L234; }
        L121: $_p = $_stack[$_stack_sp];
        L122: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L123: $_stack[++$_stack_sp] = $_b;
        L124: $_stack[++$_stack_sp] = NULL;
        L125: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "-init") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-init"', $_expected)) { $_expected[] = '"-init"'; } } }
        L126: $_stack[$_stack_sp] = $_value;
        L127: if ($_fail) { goto L137; }
        L128: $_stack[++$_stack_sp] = 130;
        L129: goto L1483;
        L130: if ($_fail) { goto L137; }
        L131: $_stack[++$_stack_sp] = 133;
        L132: goto L1318;
        L133: $_env["code"] = $_value;
        L134: if ($_fail) { goto L137; }
        L135: $_stack[++$_stack_sp] = 137;
        L136: goto L1483;
        L137: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L138: if ($_fail) { goto L140; }
        L139: $_value = $this->_5($_env);
        L140: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L141: if (!$_fail) { goto L234; }
        L142: $_p = $_stack[$_stack_sp];
        L143: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L144: $_stack[++$_stack_sp] = $_b;
        L145: $_stack[++$_stack_sp] = NULL;
        L146: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "-invoke") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-invoke"', $_expected)) { $_expected[] = '"-invoke"'; } } }
        L147: $_stack[$_stack_sp] = $_value;
        L148: if ($_fail) { goto L171; }
        L149: $_stack[++$_stack_sp] = 151;
        L150: goto L1483;
        L151: if ($_fail) { goto L171; }
        L152: $_stack[++$_stack_sp] = $_p;
        L153: $_stack[++$_stack_sp] = 155;
        L154: goto L1717;
        L155: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L156: if (!$_fail) { goto L160; }
        L157: $_fail = false;
        L158: $_value = NULL;
        L159: $_p = $_a;
        L160: $_env["parameters"] = $_value;
        L161: if ($_fail) { goto L171; }
        L162: $_stack[++$_stack_sp] = 164;
        L163: goto L1483;
        L164: if ($_fail) { goto L171; }
        L165: $_stack[++$_stack_sp] = 167;
        L166: goto L1318;
        L167: $_env["code"] = $_value;
        L168: if ($_fail) { goto L171; }
        L169: $_stack[++$_stack_sp] = 171;
        L170: goto L1483;
        L171: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L172: if ($_fail) { goto L174; }
        L173: $_value = $this->_6($_env);
        L174: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L175: if (!$_fail) { goto L234; }
        L176: $_p = $_stack[$_stack_sp];
        L177: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L178: $_stack[++$_stack_sp] = $_b;
        L179: $_stack[++$_stack_sp] = NULL;
        L180: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "-import") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-import"', $_expected)) { $_expected[] = '"-import"'; } } }
        L181: $_stack[$_stack_sp] = $_value;
        L182: if ($_fail) { goto L230; }
        L183: $_stack[++$_stack_sp] = 185;
        L184: goto L1577;
        L185: if ($_fail) { goto L230; }
        L186: $_stack[++$_stack_sp] = $_p;
        L187: $_stack[++$_stack_sp] = $_p;
        L188: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L189: $_stack[++$_stack_sp] = $_b;
        L190: $_stack[++$_stack_sp] = NULL;
        L191: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L192: $_stack[$_stack_sp] = $_value;
        L193: if ($_fail) { goto L196; }
        L194: $_stack[++$_stack_sp] = 196;
        L195: goto L1577;
        L196: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L197: if ($_fail) { goto L199; }
        L198: $_value = $this->_8($_env);
        L199: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L200: if (!$_fail) { goto L216; }
        L201: $_p = $_stack[$_stack_sp];
        L202: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L203: $_stack[++$_stack_sp] = $_b;
        L204: $_stack[++$_stack_sp] = NULL;
        L205: $_stack[++$_stack_sp] = 207;
        L206: goto L1280;
        L207: $_env["name"] = $_value;
        L208: $_stack[$_stack_sp] = $_value;
        L209: if ($_fail) { goto L212; }
        L210: $_stack[++$_stack_sp] = 212;
        L211: goto L1577;
        L212: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L213: if ($_fail) { goto L215; }
        L214: $_value = $this->_9($_env);
        L215: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L216: unset($_stack[$_stack_sp--]);
        L217: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L218: if (!$_fail) { goto L222; }
        L219: $_fail = false;
        L220: $_value = NULL;
        L221: $_p = $_a;
        L222: $_env["spec"] = $_value;
        L223: if ($_fail) { goto L230; }
        L224: $_stack[++$_stack_sp] = 226;
        L225: goto L1074;
        L226: $_env["path"] = $_value;
        L227: if ($_fail) { goto L230; }
        L228: $_stack[++$_stack_sp] = 230;
        L229: goto L1483;
        L230: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L231: if ($_fail) { goto L233; }
        L232: $_value = $this->_7($_env);
        L233: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L234: unset($_stack[$_stack_sp--]);
        L235: if ($_fail) { goto L239; }
        L236: $_stack[$_stack_sp][] = $_value;
        L237: $_stack[$_stack_sp - 1] = $_p;
        L238: goto L33;
        L239: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L240: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L241: $_fail = false;
        L242: $_env["declarations"] = $_value;
        L243: if ($_fail) { goto L272; }
        L244: $_stack[++$_stack_sp] = $_p;
        L245: $_stack[++$_stack_sp] = array();
        L246: $_stack[++$_stack_sp] = true;
        L247: $_stack[++$_stack_sp] = $_p;
        L248: $_stack[++$_stack_sp] = 250;
        L249: goto L286;
        L250: if (!$_fail) { goto L254; }
        L251: $_p = $_stack[$_stack_sp];
        L252: $_stack[++$_stack_sp] = 254;
        L253: goto L338;
        L254: unset($_stack[$_stack_sp--]);
        L255: if ($_fail) { goto L260; }
        L256: $_stack[$_stack_sp] = false;
        L257: $_stack[$_stack_sp - 1][] = $_value;
        L258: $_stack[$_stack_sp - 2] = $_p;
        L259: goto L247;
        L260: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L261: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L262: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L263: if ($_a) { goto L265; }
        L264: $_fail = false;
        L265: $_env["definitions"] = $_value;
        L266: if ($_fail) { goto L272; }
        L267: $_stack[++$_stack_sp] = $_p;
        L268: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L269: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L270: $_value = NULL;
        L271: $_fail = !$_fail;
        L272: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L273: if ($_fail) { goto L275; }
        L274: $_value = $this->_0($_env);
        L275: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L276: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L277: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L278: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L279: $_b = array();
        L280: $_b[0] = $_fail;
        L281: $_b[1] = $_value;
        L282: $_b[2] = $_p;
        L283: $_cache[$_a] = $_b;
        L284: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L285: if ($_a !== 11) return array(FALSE, NULL, 0); goto L11;
        L286: $_stack[++$_stack_sp] = "1@";
        L287: $_stack[$_stack_sp] .= $_p;
        L288: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L295; }
        L289: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L290: $_b = $_cache[$_a];
        L291: $_fail = $_b[0];
        L292: $_value = $_b[1];
        L293: $_p = $_b[2];
        L294: goto L336;
        L295: $_stack[++$_stack_sp] = $_env;
        L296: $_env = array();
        L297: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L298: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L299: $_stack[++$_stack_sp] = $_b;
        L300: $_stack[++$_stack_sp] = NULL;
        L301: $_stack[++$_stack_sp] = 303;
        L302: goto L1280;
        L303: $_env["name"] = $_value;
        L304: $_stack[$_stack_sp] = $_value;
        L305: if ($_fail) { goto L324; }
        L306: $_stack[++$_stack_sp] = 308;
        L307: goto L1717;
        L308: $_env["parameters"] = $_value;
        L309: if ($_fail) { goto L324; }
        L310: $_stack[++$_stack_sp] = 312;
        L311: goto L1483;
        L312: if ($_fail) { goto L324; }
        L313: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L314: if ($_fail) { goto L324; }
        L315: $_stack[++$_stack_sp] = 317;
        L316: goto L1483;
        L317: if ($_fail) { goto L324; }
        L318: $_stack[++$_stack_sp] = 320;
        L319: goto L386;
        L320: $_env["expression"] = $_value;
        L321: if ($_fail) { goto L324; }
        L322: $_stack[++$_stack_sp] = 324;
        L323: goto L1483;
        L324: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L325: if ($_fail) { goto L327; }
        L326: $_value = $this->_10($_env);
        L327: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L328: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L329: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L330: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L331: $_b = array();
        L332: $_b[0] = $_fail;
        L333: $_b[1] = $_value;
        L334: $_b[2] = $_p;
        L335: $_cache[$_a] = $_b;
        L336: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L337: if ($_a !== 250) return array(FALSE, NULL, 1); goto L250;
        L338: $_stack[++$_stack_sp] = "2@";
        L339: $_stack[$_stack_sp] .= $_p;
        L340: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L347; }
        L341: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L342: $_b = $_cache[$_a];
        L343: $_fail = $_b[0];
        L344: $_value = $_b[1];
        L345: $_p = $_b[2];
        L346: goto L384;
        L347: $_stack[++$_stack_sp] = $_env;
        L348: $_env = array();
        L349: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L350: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L351: $_stack[++$_stack_sp] = $_b;
        L352: $_stack[++$_stack_sp] = NULL;
        L353: $_stack[++$_stack_sp] = 355;
        L354: goto L1280;
        L355: $_env["name"] = $_value;
        L356: $_stack[$_stack_sp] = $_value;
        L357: if ($_fail) { goto L372; }
        L358: $_stack[++$_stack_sp] = 360;
        L359: goto L1483;
        L360: if ($_fail) { goto L372; }
        L361: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L362: if ($_fail) { goto L372; }
        L363: $_stack[++$_stack_sp] = 365;
        L364: goto L1483;
        L365: if ($_fail) { goto L372; }
        L366: $_stack[++$_stack_sp] = 368;
        L367: goto L386;
        L368: $_env["expression"] = $_value;
        L369: if ($_fail) { goto L372; }
        L370: $_stack[++$_stack_sp] = 372;
        L371: goto L1483;
        L372: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L373: if ($_fail) { goto L375; }
        L374: $_value = $this->_11($_env);
        L375: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L376: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L377: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L378: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L379: $_b = array();
        L380: $_b[0] = $_fail;
        L381: $_b[1] = $_value;
        L382: $_b[2] = $_p;
        L383: $_cache[$_a] = $_b;
        L384: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L385: if ($_a !== 254) return array(FALSE, NULL, 2); goto L254;
        L386: $_stack[++$_stack_sp] = "3@";
        L387: $_stack[$_stack_sp] .= $_p;
        L388: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L395; }
        L389: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L390: $_b = $_cache[$_a];
        L391: $_fail = $_b[0];
        L392: $_value = $_b[1];
        L393: $_p = $_b[2];
        L394: goto L468;
        L395: $_stack[++$_stack_sp] = $_env;
        L396: $_env = array();
        L397: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L398: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L399: $_stack[++$_stack_sp] = $_b;
        L400: $_stack[++$_stack_sp] = $_env;
        L401: $_env = array();
        L402: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L403: $_stack[++$_stack_sp] = $_b;
        L404: $_stack[++$_stack_sp] = NULL;
        L405: $_stack[++$_stack_sp] = $_env;
        L406: $_env = array();
        L407: $_stack[++$_stack_sp] = 409;
        L408: goto L470;
        L409: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L410: $_env["first"] = $_value;
        L411: $_stack[$_stack_sp] = $_value;
        L412: if ($_fail) { goto L451; }
        L413: $_stack[++$_stack_sp] = $_p;
        L414: $_stack[++$_stack_sp] = array();
        L415: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L416: $_stack[++$_stack_sp] = $_b;
        L417: $_stack[++$_stack_sp] = NULL;
        L418: $_stack[++$_stack_sp] = $_env;
        L419: $_env = array();
        L420: $_stack[++$_stack_sp] = NULL;
        L421: $_stack[++$_stack_sp] = 423;
        L422: goto L1483;
        L423: $_stack[$_stack_sp] = $_value;
        L424: if ($_fail) { goto L429; }
        L425: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "/") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"/"', $_expected)) { $_expected[] = '"/"'; } } }
        L426: if ($_fail) { goto L429; }
        L427: $_stack[++$_stack_sp] = 429;
        L428: goto L1483;
        L429: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L430: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L431: $_stack[$_stack_sp] = $_value;
        L432: if ($_fail) { goto L439; }
        L433: $_stack[++$_stack_sp] = $_env;
        L434: $_env = array();
        L435: $_stack[++$_stack_sp] = 437;
        L436: goto L470;
        L437: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L438: $_env["next"] = $_value;
        L439: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L440: if ($_fail) { goto L442; }
        L441: $_value = $this->_14($_env);
        L442: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L443: if ($_fail) { goto L447; }
        L444: $_stack[$_stack_sp][] = $_value;
        L445: $_stack[$_stack_sp - 1] = $_p;
        L446: goto L415;
        L447: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L448: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L449: $_fail = false;
        L450: $_env["rest"] = $_value;
        L451: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L452: if ($_fail) { goto L454; }
        L453: $_value = $this->_13($_env);
        L454: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L455: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L456: $_env["expressions"] = $_value;
        L457: if ($_fail) { goto L459; }
        L458: $_value = $this->_12($_env);
        L459: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L460: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L461: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L462: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L463: $_b = array();
        L464: $_b[0] = $_fail;
        L465: $_b[1] = $_value;
        L466: $_b[2] = $_p;
        L467: $_cache[$_a] = $_b;
        L468: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L469: if ($_a === 320) { goto L320; } else if ($_a === 368) { goto L368; } else if ($_a === 789) { goto L789; } else if ($_a === 817) { goto L817; } else if ($_a === 927) { goto L927; } else { return array(FALSE, NULL, 3); }
        L470: $_stack[++$_stack_sp] = "4@";
        L471: $_stack[$_stack_sp] .= $_p;
        L472: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L479; }
        L473: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L474: $_b = $_cache[$_a];
        L475: $_fail = $_b[0];
        L476: $_value = $_b[1];
        L477: $_p = $_b[2];
        L478: goto L560;
        L479: $_stack[++$_stack_sp] = $_env;
        L480: $_env = array();
        L481: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L482: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L483: $_stack[++$_stack_sp] = $_b;
        L484: $_stack[++$_stack_sp] = NULL;
        L485: $_stack[++$_stack_sp] = $_env;
        L486: $_env = array();
        L487: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L488: $_stack[++$_stack_sp] = $_b;
        L489: $_stack[++$_stack_sp] = NULL;
        L490: $_stack[++$_stack_sp] = $_env;
        L491: $_env = array();
        L492: $_stack[++$_stack_sp] = 494;
        L493: goto L562;
        L494: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L495: $_env["first"] = $_value;
        L496: $_stack[$_stack_sp] = $_value;
        L497: if ($_fail) { goto L528; }
        L498: $_stack[++$_stack_sp] = $_p;
        L499: $_stack[++$_stack_sp] = array();
        L500: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L501: $_stack[++$_stack_sp] = $_b;
        L502: $_stack[++$_stack_sp] = NULL;
        L503: $_stack[++$_stack_sp] = $_env;
        L504: $_env = array();
        L505: $_stack[++$_stack_sp] = 507;
        L506: goto L1577;
        L507: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L508: $_stack[$_stack_sp] = $_value;
        L509: if ($_fail) { goto L516; }
        L510: $_stack[++$_stack_sp] = $_env;
        L511: $_env = array();
        L512: $_stack[++$_stack_sp] = 514;
        L513: goto L562;
        L514: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L515: $_env["next"] = $_value;
        L516: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L517: if ($_fail) { goto L519; }
        L518: $_value = $this->_17($_env);
        L519: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L520: if ($_fail) { goto L524; }
        L521: $_stack[$_stack_sp][] = $_value;
        L522: $_stack[$_stack_sp - 1] = $_p;
        L523: goto L500;
        L524: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L525: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L526: $_fail = false;
        L527: $_env["rest"] = $_value;
        L528: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L529: if ($_fail) { goto L531; }
        L530: $_value = $this->_16($_env);
        L531: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L532: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L533: $_env["expressions"] = $_value;
        L534: $_stack[$_stack_sp] = $_value;
        L535: if ($_fail) { goto L548; }
        L536: $_stack[++$_stack_sp] = 538;
        L537: goto L1483;
        L538: if ($_fail) { goto L548; }
        L539: $_stack[++$_stack_sp] = $_p;
        L540: $_stack[++$_stack_sp] = 542;
        L541: goto L1318;
        L542: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L543: if (!$_fail) { goto L547; }
        L544: $_fail = false;
        L545: $_value = NULL;
        L546: $_p = $_a;
        L547: $_env["action"] = $_value;
        L548: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L549: if ($_fail) { goto L551; }
        L550: $_value = $this->_15($_env);
        L551: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L552: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L553: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L554: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L555: $_b = array();
        L556: $_b[0] = $_fail;
        L557: $_b[1] = $_value;
        L558: $_b[2] = $_p;
        L559: $_cache[$_a] = $_b;
        L560: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L561: if ($_a === 409) { goto L409; } else if ($_a === 437) { goto L437; } else { return array(FALSE, NULL, 4); }
        L562: $_stack[++$_stack_sp] = "5@";
        L563: $_stack[$_stack_sp] .= $_p;
        L564: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L571; }
        L565: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L566: $_b = $_cache[$_a];
        L567: $_fail = $_b[0];
        L568: $_value = $_b[1];
        L569: $_p = $_b[2];
        L570: goto L665;
        L571: $_stack[++$_stack_sp] = $_env;
        L572: $_env = array();
        L573: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L574: $_stack[++$_stack_sp] = $_p;
        L575: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L576: $_stack[++$_stack_sp] = $_b;
        L577: $_stack[++$_stack_sp] = NULL;
        L578: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "&") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"&"', $_expected)) { $_expected[] = '"&"'; } } }
        L579: $_stack[$_stack_sp] = $_value;
        L580: if ($_fail) { goto L584; }
        L581: $_stack[++$_stack_sp] = 583;
        L582: goto L667;
        L583: $_env["expression"] = $_value;
        L584: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L585: if ($_fail) { goto L587; }
        L586: $_value = $this->_18($_env);
        L587: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L588: if (!$_fail) { goto L656; }
        L589: $_p = $_stack[$_stack_sp];
        L590: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L591: $_stack[++$_stack_sp] = $_b;
        L592: $_stack[++$_stack_sp] = NULL;
        L593: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "!") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"!"', $_expected)) { $_expected[] = '"!"'; } } }
        L594: $_stack[$_stack_sp] = $_value;
        L595: if ($_fail) { goto L599; }
        L596: $_stack[++$_stack_sp] = 598;
        L597: goto L667;
        L598: $_env["expression"] = $_value;
        L599: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L600: if ($_fail) { goto L602; }
        L601: $_value = $this->_19($_env);
        L602: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L603: if (!$_fail) { goto L656; }
        L604: $_p = $_stack[$_stack_sp];
        L605: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L606: $_stack[++$_stack_sp] = $_b;
        L607: $_stack[++$_stack_sp] = NULL;
        L608: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "?") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"?"', $_expected)) { $_expected[] = '"?"'; } } }
        L609: $_stack[$_stack_sp] = $_value;
        L610: if ($_fail) { goto L614; }
        L611: $_stack[++$_stack_sp] = 613;
        L612: goto L1318;
        L613: $_env["code"] = $_value;
        L614: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L615: if ($_fail) { goto L617; }
        L616: $_value = $this->_20($_env);
        L617: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L618: if (!$_fail) { goto L656; }
        L619: $_p = $_stack[$_stack_sp];
        L620: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L621: $_stack[++$_stack_sp] = $_b;
        L622: $_stack[++$_stack_sp] = NULL;
        L623: $_stack[++$_stack_sp] = 625;
        L624: goto L1280;
        L625: $_env["varname"] = $_value;
        L626: $_stack[$_stack_sp] = $_value;
        L627: if ($_fail) { goto L629; }
        L628: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === ":^") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('":^"', $_expected)) { $_expected[] = '":^"'; } } }
        L629: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L630: if ($_fail) { goto L632; }
        L631: $_value = $this->_21($_env);
        L632: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L633: if (!$_fail) { goto L656; }
        L634: $_p = $_stack[$_stack_sp];
        L635: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L636: $_stack[++$_stack_sp] = $_b;
        L637: $_stack[++$_stack_sp] = NULL;
        L638: $_stack[++$_stack_sp] = 640;
        L639: goto L1280;
        L640: $_env["varname"] = $_value;
        L641: $_stack[$_stack_sp] = $_value;
        L642: if ($_fail) { goto L648; }
        L643: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ":") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('":"', $_expected)) { $_expected[] = '":"'; } } }
        L644: if ($_fail) { goto L648; }
        L645: $_stack[++$_stack_sp] = 647;
        L646: goto L667;
        L647: $_env["expression"] = $_value;
        L648: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L649: if ($_fail) { goto L651; }
        L650: $_value = $this->_22($_env);
        L651: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L652: if (!$_fail) { goto L656; }
        L653: $_p = $_stack[$_stack_sp];
        L654: $_stack[++$_stack_sp] = 656;
        L655: goto L667;
        L656: unset($_stack[$_stack_sp--]);
        L657: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L658: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L659: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L660: $_b = array();
        L661: $_b[0] = $_fail;
        L662: $_b[1] = $_value;
        L663: $_b[2] = $_p;
        L664: $_cache[$_a] = $_b;
        L665: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L666: if ($_a === 494) { goto L494; } else if ($_a === 514) { goto L514; } else { return array(FALSE, NULL, 5); }
        L667: $_stack[++$_stack_sp] = "6@";
        L668: $_stack[$_stack_sp] .= $_p;
        L669: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L676; }
        L670: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L671: $_b = $_cache[$_a];
        L672: $_fail = $_b[0];
        L673: $_value = $_b[1];
        L674: $_p = $_b[2];
        L675: goto L730;
        L676: $_stack[++$_stack_sp] = $_env;
        L677: $_env = array();
        L678: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L679: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L680: $_stack[++$_stack_sp] = $_b;
        L681: $_stack[++$_stack_sp] = NULL;
        L682: $_stack[++$_stack_sp] = 684;
        L683: goto L732;
        L684: $_env["expression"] = $_value;
        L685: $_stack[$_stack_sp] = $_value;
        L686: if ($_fail) { goto L718; }
        L687: $_stack[++$_stack_sp] = $_p;
        L688: $_stack[++$_stack_sp] = $_p;
        L689: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L690: $_stack[++$_stack_sp] = $_b;
        L691: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "?") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"?"', $_expected)) { $_expected[] = '"?"'; } } }
        L692: if ($_fail) { goto L694; }
        L693: $_value = $this->_24($_env);
        L694: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L695: if (!$_fail) { goto L711; }
        L696: $_p = $_stack[$_stack_sp];
        L697: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L698: $_stack[++$_stack_sp] = $_b;
        L699: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "*") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*"', $_expected)) { $_expected[] = '"*"'; } } }
        L700: if ($_fail) { goto L702; }
        L701: $_value = $this->_25($_env);
        L702: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L703: if (!$_fail) { goto L711; }
        L704: $_p = $_stack[$_stack_sp];
        L705: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L706: $_stack[++$_stack_sp] = $_b;
        L707: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "+") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"+"', $_expected)) { $_expected[] = '"+"'; } } }
        L708: if ($_fail) { goto L710; }
        L709: $_value = $this->_26($_env);
        L710: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L711: unset($_stack[$_stack_sp--]);
        L712: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L713: if (!$_fail) { goto L717; }
        L714: $_fail = false;
        L715: $_value = NULL;
        L716: $_p = $_a;
        L717: $_env["suffix"] = $_value;
        L718: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L719: if ($_fail) { goto L721; }
        L720: $_value = $this->_23($_env);
        L721: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L722: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L723: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L724: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L725: $_b = array();
        L726: $_b[0] = $_fail;
        L727: $_b[1] = $_value;
        L728: $_b[2] = $_p;
        L729: $_cache[$_a] = $_b;
        L730: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L731: if ($_a === 583) { goto L583; } else if ($_a === 598) { goto L598; } else if ($_a === 647) { goto L647; } else if ($_a === 656) { goto L656; } else { return array(FALSE, NULL, 6); }
        L732: $_stack[++$_stack_sp] = "7@";
        L733: $_stack[$_stack_sp] .= $_p;
        L734: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L741; }
        L735: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L736: $_b = $_cache[$_a];
        L737: $_fail = $_b[0];
        L738: $_value = $_b[1];
        L739: $_p = $_b[2];
        L740: goto L974;
        L741: $_stack[++$_stack_sp] = $_env;
        L742: $_env = array();
        L743: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L744: $_stack[++$_stack_sp] = $_p;
        L745: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L746: $_stack[++$_stack_sp] = $_b;
        L747: $_stack[++$_stack_sp] = NULL;
        L748: $_stack[++$_stack_sp] = $_p;
        L749: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L750: $_stack[++$_stack_sp] = $_b;
        L751: $_stack[++$_stack_sp] = NULL;
        L752: $_stack[++$_stack_sp] = 754;
        L753: goto L1280;
        L754: $_env["name"] = $_value;
        L755: $_stack[$_stack_sp] = $_value;
        L756: if ($_fail) { goto L758; }
        L757: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L758: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L759: if ($_fail) { goto L761; }
        L760: $_value = $this->_28($_env);
        L761: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L762: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L763: if (!$_fail) { goto L767; }
        L764: $_fail = false;
        L765: $_value = NULL;
        L766: $_p = $_a;
        L767: $_env["importname"] = $_value;
        L768: $_stack[$_stack_sp] = $_value;
        L769: if ($_fail) { goto L859; }
        L770: $_stack[++$_stack_sp] = 772;
        L771: goto L1280;
        L772: $_env["macroname"] = $_value;
        L773: if ($_fail) { goto L859; }
        L774: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L775: if ($_fail) { goto L859; }
        L776: $_stack[++$_stack_sp] = 778;
        L777: goto L1483;
        L778: if ($_fail) { goto L859; }
        L779: $_stack[++$_stack_sp] = $_p;
        L780: $_stack[++$_stack_sp] = $_env;
        L781: $_env = array();
        L782: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L783: $_stack[++$_stack_sp] = $_b;
        L784: $_stack[++$_stack_sp] = NULL;
        L785: $_stack[++$_stack_sp] = $_env;
        L786: $_env = array();
        L787: $_stack[++$_stack_sp] = 789;
        L788: goto L386;
        L789: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L790: $_env["first"] = $_value;
        L791: $_stack[$_stack_sp] = $_value;
        L792: if ($_fail) { goto L831; }
        L793: $_stack[++$_stack_sp] = $_p;
        L794: $_stack[++$_stack_sp] = array();
        L795: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L796: $_stack[++$_stack_sp] = $_b;
        L797: $_stack[++$_stack_sp] = NULL;
        L798: $_stack[++$_stack_sp] = $_env;
        L799: $_env = array();
        L800: $_stack[++$_stack_sp] = NULL;
        L801: $_stack[++$_stack_sp] = 803;
        L802: goto L1483;
        L803: $_stack[$_stack_sp] = $_value;
        L804: if ($_fail) { goto L809; }
        L805: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ",") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('","', $_expected)) { $_expected[] = '","'; } } }
        L806: if ($_fail) { goto L809; }
        L807: $_stack[++$_stack_sp] = 809;
        L808: goto L1483;
        L809: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L810: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L811: $_stack[$_stack_sp] = $_value;
        L812: if ($_fail) { goto L819; }
        L813: $_stack[++$_stack_sp] = $_env;
        L814: $_env = array();
        L815: $_stack[++$_stack_sp] = 817;
        L816: goto L386;
        L817: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L818: $_env["next"] = $_value;
        L819: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L820: if ($_fail) { goto L822; }
        L821: $_value = $this->_30($_env);
        L822: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L823: if ($_fail) { goto L827; }
        L824: $_stack[$_stack_sp][] = $_value;
        L825: $_stack[$_stack_sp - 1] = $_p;
        L826: goto L795;
        L827: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L828: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L829: $_fail = false;
        L830: $_env["rest"] = $_value;
        L831: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L832: if ($_fail) { goto L834; }
        L833: $_value = $this->_29($_env);
        L834: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L835: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L836: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L837: if (!$_fail) { goto L841; }
        L838: $_fail = false;
        L839: $_value = NULL;
        L840: $_p = $_a;
        L841: $_env["arguments"] = $_value;
        L842: if ($_fail) { goto L859; }
        L843: $_stack[++$_stack_sp] = 845;
        L844: goto L1483;
        L845: if ($_fail) { goto L859; }
        L846: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ")") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('")"', $_expected)) { $_expected[] = '")"'; } } }
        L847: if ($_fail) { goto L859; }
        L848: $_stack[++$_stack_sp] = $_p;
        L849: $_stack[++$_stack_sp] = NULL;
        L850: $_stack[++$_stack_sp] = 852;
        L851: goto L1483;
        L852: $_stack[$_stack_sp] = $_value;
        L853: if ($_fail) { goto L855; }
        L854: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L855: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L856: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L857: $_value = NULL;
        L858: $_fail = !$_fail;
        L859: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L860: if ($_fail) { goto L862; }
        L861: $_value = $this->_27($_env);
        L862: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L863: if (!$_fail) { goto L965; }
        L864: $_p = $_stack[$_stack_sp];
        L865: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L866: $_stack[++$_stack_sp] = $_b;
        L867: $_stack[++$_stack_sp] = NULL;
        L868: $_stack[++$_stack_sp] = $_p;
        L869: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L870: $_stack[++$_stack_sp] = $_b;
        L871: $_stack[++$_stack_sp] = NULL;
        L872: $_stack[++$_stack_sp] = 874;
        L873: goto L1280;
        L874: $_env["name"] = $_value;
        L875: $_stack[$_stack_sp] = $_value;
        L876: if ($_fail) { goto L878; }
        L877: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L878: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L879: if ($_fail) { goto L881; }
        L880: $_value = $this->_32($_env);
        L881: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L882: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L883: if (!$_fail) { goto L887; }
        L884: $_fail = false;
        L885: $_value = NULL;
        L886: $_p = $_a;
        L887: $_env["importname"] = $_value;
        L888: $_stack[$_stack_sp] = $_value;
        L889: if ($_fail) { goto L910; }
        L890: $_stack[++$_stack_sp] = 892;
        L891: goto L1280;
        L892: $_env["rulename"] = $_value;
        L893: if ($_fail) { goto L910; }
        L894: $_stack[++$_stack_sp] = $_p;
        L895: $_stack[++$_stack_sp] = $_p;
        L896: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L897: if (!$_fail) { goto L906; }
        L898: $_p = $_stack[$_stack_sp];
        L899: $_stack[++$_stack_sp] = NULL;
        L900: $_stack[++$_stack_sp] = 902;
        L901: goto L1483;
        L902: $_stack[$_stack_sp] = $_value;
        L903: if ($_fail) { goto L905; }
        L904: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L905: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L906: unset($_stack[$_stack_sp--]);
        L907: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L908: $_value = NULL;
        L909: $_fail = !$_fail;
        L910: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L911: if ($_fail) { goto L913; }
        L912: $_value = $this->_31($_env);
        L913: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L914: if (!$_fail) { goto L965; }
        L915: $_p = $_stack[$_stack_sp];
        L916: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L917: $_stack[++$_stack_sp] = $_b;
        L918: $_stack[++$_stack_sp] = NULL;
        L919: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L920: $_stack[$_stack_sp] = $_value;
        L921: if ($_fail) { goto L933; }
        L922: $_stack[++$_stack_sp] = 924;
        L923: goto L1483;
        L924: if ($_fail) { goto L933; }
        L925: $_stack[++$_stack_sp] = 927;
        L926: goto L386;
        L927: $_env["expression"] = $_value;
        L928: if ($_fail) { goto L933; }
        L929: $_stack[++$_stack_sp] = 931;
        L930: goto L1483;
        L931: if ($_fail) { goto L933; }
        L932: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ")") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('")"', $_expected)) { $_expected[] = '")"'; } } }
        L933: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L934: if ($_fail) { goto L936; }
        L935: $_value = $this->_33($_env);
        L936: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L937: if (!$_fail) { goto L965; }
        L938: $_p = $_stack[$_stack_sp];
        L939: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L940: $_stack[++$_stack_sp] = $_b;
        L941: $_stack[++$_stack_sp] = 943;
        L942: goto L1074;
        L943: $_env["literal"] = $_value;
        L944: if ($_fail) { goto L946; }
        L945: $_value = $this->_34($_env);
        L946: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L947: if (!$_fail) { goto L965; }
        L948: $_p = $_stack[$_stack_sp];
        L949: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L950: $_stack[++$_stack_sp] = $_b;
        L951: $_stack[++$_stack_sp] = 953;
        L952: goto L976;
        L953: $_env["range"] = $_value;
        L954: if ($_fail) { goto L956; }
        L955: $_value = $this->_35($_env);
        L956: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L957: if (!$_fail) { goto L965; }
        L958: $_p = $_stack[$_stack_sp];
        L959: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L960: $_stack[++$_stack_sp] = $_b;
        L961: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L962: if ($_fail) { goto L964; }
        L963: $_value = $this->_36($_env);
        L964: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L965: unset($_stack[$_stack_sp--]);
        L966: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L967: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L968: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L969: $_b = array();
        L970: $_b[0] = $_fail;
        L971: $_b[1] = $_value;
        L972: $_b[2] = $_p;
        L973: $_cache[$_a] = $_b;
        L974: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L975: if ($_a !== 684) return array(FALSE, NULL, 7); goto L684;
        L976: $_stack[++$_stack_sp] = "8@";
        L977: $_stack[$_stack_sp] .= $_p;
        L978: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L985; }
        L979: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L980: $_b = $_cache[$_a];
        L981: $_fail = $_b[0];
        L982: $_value = $_b[1];
        L983: $_p = $_b[2];
        L984: goto L1072;
        L985: $_stack[++$_stack_sp] = $_env;
        L986: $_env = array();
        L987: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L988: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L989: $_stack[++$_stack_sp] = $_b;
        L990: $_stack[++$_stack_sp] = NULL;
        L991: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "[") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"["', $_expected)) { $_expected[] = '"["'; } } }
        L992: $_stack[$_stack_sp] = $_value;
        L993: if ($_fail) { goto L1060; }
        L994: $_stack[++$_stack_sp] = $_p;
        L995: $_stack[++$_stack_sp] = array();
        L996: $_stack[++$_stack_sp] = true;
        L997: $_stack[++$_stack_sp] = $_p;
        L998: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L999: $_stack[++$_stack_sp] = $_b;
        L1000: $_stack[++$_stack_sp] = NULL;
        L1001: $_stack[++$_stack_sp] = $_p;
        L1002: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L1003: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1004: $_value = NULL;
        L1005: $_fail = !$_fail;
        L1006: if ($_fail) { goto L1023; }
        L1007: $_stack[++$_stack_sp] = 1009;
        L1008: goto L1166;
        L1009: $_env["a"] = $_value;
        L1010: $_stack[$_stack_sp] = $_value;
        L1011: if ($_fail) { goto L1023; }
        L1012: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "-") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-"', $_expected)) { $_expected[] = '"-"'; } } }
        L1013: if ($_fail) { goto L1023; }
        L1014: $_stack[++$_stack_sp] = $_p;
        L1015: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L1016: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1017: $_value = NULL;
        L1018: $_fail = !$_fail;
        L1019: if ($_fail) { goto L1023; }
        L1020: $_stack[++$_stack_sp] = 1022;
        L1021: goto L1166;
        L1022: $_env["b"] = $_value;
        L1023: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1024: if ($_fail) { goto L1026; }
        L1025: $_value = $this->_38($_env);
        L1026: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1027: if (!$_fail) { goto L1046; }
        L1028: $_p = $_stack[$_stack_sp];
        L1029: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1030: $_stack[++$_stack_sp] = $_b;
        L1031: $_stack[++$_stack_sp] = NULL;
        L1032: $_stack[++$_stack_sp] = $_p;
        L1033: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L1034: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1035: $_value = NULL;
        L1036: $_fail = !$_fail;
        L1037: if ($_fail) { goto L1042; }
        L1038: $_stack[++$_stack_sp] = 1040;
        L1039: goto L1166;
        L1040: $_env["c"] = $_value;
        L1041: $_stack[$_stack_sp] = $_value;
        L1042: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1043: if ($_fail) { goto L1045; }
        L1044: $_value = $this->_39($_env);
        L1045: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1046: unset($_stack[$_stack_sp--]);
        L1047: if ($_fail) { goto L1052; }
        L1048: $_stack[$_stack_sp] = false;
        L1049: $_stack[$_stack_sp - 1][] = $_value;
        L1050: $_stack[$_stack_sp - 2] = $_p;
        L1051: goto L997;
        L1052: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1053: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1054: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1055: if ($_a) { goto L1057; }
        L1056: $_fail = false;
        L1057: $_env["matches"] = $_value;
        L1058: if ($_fail) { goto L1060; }
        L1059: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L1060: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1061: if ($_fail) { goto L1063; }
        L1062: $_value = $this->_37($_env);
        L1063: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1064: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1065: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1066: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1067: $_b = array();
        L1068: $_b[0] = $_fail;
        L1069: $_b[1] = $_value;
        L1070: $_b[2] = $_p;
        L1071: $_cache[$_a] = $_b;
        L1072: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1073: if ($_a !== 953) return array(FALSE, NULL, 8); goto L953;
        L1074: $_stack[++$_stack_sp] = "9@";
        L1075: $_stack[$_stack_sp] .= $_p;
        L1076: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1083; }
        L1077: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1078: $_b = $_cache[$_a];
        L1079: $_fail = $_b[0];
        L1080: $_value = $_b[1];
        L1081: $_p = $_b[2];
        L1082: goto L1164;
        L1083: $_stack[++$_stack_sp] = $_env;
        L1084: $_env = array();
        L1085: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1086: $_stack[++$_stack_sp] = $_p;
        L1087: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1088: $_stack[++$_stack_sp] = $_b;
        L1089: $_stack[++$_stack_sp] = NULL;
        L1090: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 34))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\"]', $_expected)) { $_expected[] = '[\\"]'; } } }
        L1091: $_stack[$_stack_sp] = $_value;
        L1092: if ($_fail) { goto L1116; }
        L1093: $_stack[++$_stack_sp] = $_p;
        L1094: $_stack[++$_stack_sp] = array();
        L1095: $_stack[++$_stack_sp] = NULL;
        L1096: $_stack[++$_stack_sp] = $_p;
        L1097: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 34))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\"]', $_expected)) { $_expected[] = '[\\"]'; } } }
        L1098: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1099: $_value = NULL;
        L1100: $_fail = !$_fail;
        L1101: if ($_fail) { goto L1105; }
        L1102: $_stack[++$_stack_sp] = 1104;
        L1103: goto L1166;
        L1104: $_stack[$_stack_sp] = $_value;
        L1105: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1106: if ($_fail) { goto L1110; }
        L1107: $_stack[$_stack_sp][] = $_value;
        L1108: $_stack[$_stack_sp - 1] = $_p;
        L1109: goto L1095;
        L1110: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1111: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1112: $_fail = false;
        L1113: $_env["value"] = $_value;
        L1114: if ($_fail) { goto L1116; }
        L1115: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 34))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\"]', $_expected)) { $_expected[] = '[\\"]'; } } }
        L1116: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1117: if ($_fail) { goto L1119; }
        L1118: $_value = $this->_40($_env);
        L1119: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1120: if (!$_fail) { goto L1155; }
        L1121: $_p = $_stack[$_stack_sp];
        L1122: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1123: $_stack[++$_stack_sp] = $_b;
        L1124: $_stack[++$_stack_sp] = NULL;
        L1125: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L1126: $_stack[$_stack_sp] = $_value;
        L1127: if ($_fail) { goto L1151; }
        L1128: $_stack[++$_stack_sp] = $_p;
        L1129: $_stack[++$_stack_sp] = array();
        L1130: $_stack[++$_stack_sp] = NULL;
        L1131: $_stack[++$_stack_sp] = $_p;
        L1132: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L1133: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1134: $_value = NULL;
        L1135: $_fail = !$_fail;
        L1136: if ($_fail) { goto L1140; }
        L1137: $_stack[++$_stack_sp] = 1139;
        L1138: goto L1166;
        L1139: $_stack[$_stack_sp] = $_value;
        L1140: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1141: if ($_fail) { goto L1145; }
        L1142: $_stack[$_stack_sp][] = $_value;
        L1143: $_stack[$_stack_sp - 1] = $_p;
        L1144: goto L1130;
        L1145: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1146: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1147: $_fail = false;
        L1148: $_env["value"] = $_value;
        L1149: if ($_fail) { goto L1151; }
        L1150: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L1151: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1152: if ($_fail) { goto L1154; }
        L1153: $_value = $this->_41($_env);
        L1154: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1155: unset($_stack[$_stack_sp--]);
        L1156: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1157: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1158: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1159: $_b = array();
        L1160: $_b[0] = $_fail;
        L1161: $_b[1] = $_value;
        L1162: $_b[2] = $_p;
        L1163: $_cache[$_a] = $_b;
        L1164: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1165: if ($_a === 226) { goto L226; } else if ($_a === 943) { goto L943; } else { return array(FALSE, NULL, 9); }
        L1166: $_stack[++$_stack_sp] = "10@";
        L1167: $_stack[$_stack_sp] .= $_p;
        L1168: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1175; }
        L1169: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1170: $_b = $_cache[$_a];
        L1171: $_fail = $_b[0];
        L1172: $_value = $_b[1];
        L1173: $_p = $_b[2];
        L1174: goto L1278;
        L1175: $_stack[++$_stack_sp] = $_env;
        L1176: $_env = array();
        L1177: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1178: $_stack[++$_stack_sp] = $_p;
        L1179: $_stack[++$_stack_sp] = "";
        L1180: $_stack[++$_stack_sp] = $_p;
        L1181: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\\") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\"', $_expected)) { $_expected[] = '"\\\\"'; } } }
        L1182: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1183: $_value = NULL;
        L1184: $_fail = !$_fail;
        L1185: $_stack[$_stack_sp] .= $_value;
        L1186: if ($_fail) { goto L1189; }
        L1187: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1188: $_stack[$_stack_sp] .= $_value;
        L1189: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1190: if (!$_fail) { goto L1269; }
        L1191: $_p = $_stack[$_stack_sp];
        L1192: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1193: $_stack[++$_stack_sp] = $_b;
        L1194: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\n") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\n"', $_expected)) { $_expected[] = '"\\\\n"'; } } }
        L1195: if ($_fail) { goto L1197; }
        L1196: $_value = $this->_42($_env);
        L1197: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1198: if (!$_fail) { goto L1269; }
        L1199: $_p = $_stack[$_stack_sp];
        L1200: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1201: $_stack[++$_stack_sp] = $_b;
        L1202: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\r") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\r"', $_expected)) { $_expected[] = '"\\\\r"'; } } }
        L1203: if ($_fail) { goto L1205; }
        L1204: $_value = $this->_43($_env);
        L1205: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1206: if (!$_fail) { goto L1269; }
        L1207: $_p = $_stack[$_stack_sp];
        L1208: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1209: $_stack[++$_stack_sp] = $_b;
        L1210: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\t") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\t"', $_expected)) { $_expected[] = '"\\\\t"'; } } }
        L1211: if ($_fail) { goto L1213; }
        L1212: $_value = $this->_44($_env);
        L1213: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1214: if (!$_fail) { goto L1269; }
        L1215: $_p = $_stack[$_stack_sp];
        L1216: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1217: $_stack[++$_stack_sp] = $_b;
        L1218: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\\\") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\\\\\"', $_expected)) { $_expected[] = '"\\\\\\\\"'; } } }
        L1219: if ($_fail) { goto L1221; }
        L1220: $_value = $this->_45($_env);
        L1221: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1222: if (!$_fail) { goto L1269; }
        L1223: $_p = $_stack[$_stack_sp];
        L1224: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1225: $_stack[++$_stack_sp] = $_b;
        L1226: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\\"") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\\\""', $_expected)) { $_expected[] = '"\\\\\\""'; } } }
        L1227: if ($_fail) { goto L1229; }
        L1228: $_value = $this->_46($_env);
        L1229: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1230: if (!$_fail) { goto L1269; }
        L1231: $_p = $_stack[$_stack_sp];
        L1232: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1233: $_stack[++$_stack_sp] = $_b;
        L1234: $_stack[++$_stack_sp] = "";
        L1235: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\\") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\"', $_expected)) { $_expected[] = '"\\\\"'; } } }
        L1236: $_stack[$_stack_sp] .= $_value;
        L1237: if ($_fail) { goto L1240; }
        L1238: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L1239: $_stack[$_stack_sp] .= $_value;
        L1240: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1241: if ($_fail) { goto L1243; }
        L1242: $_value = $this->_47($_env);
        L1243: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1244: if (!$_fail) { goto L1269; }
        L1245: $_p = $_stack[$_stack_sp];
        L1246: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1247: $_stack[++$_stack_sp] = $_b;
        L1248: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\]") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\]"', $_expected)) { $_expected[] = '"\\\\]"'; } } }
        L1249: if ($_fail) { goto L1251; }
        L1250: $_value = $this->_48($_env);
        L1251: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1252: if (!$_fail) { goto L1269; }
        L1253: $_p = $_stack[$_stack_sp];
        L1254: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1255: $_stack[++$_stack_sp] = $_b;
        L1256: $_stack[++$_stack_sp] = NULL;
        L1257: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\x") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\x"', $_expected)) { $_expected[] = '"\\\\x"'; } } }
        L1258: $_stack[$_stack_sp] = $_value;
        L1259: if ($_fail) { goto L1265; }
        L1260: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((48 <= $_a && $_a <= 57) || (97 <= $_a && $_a <= 102) || (65 <= $_a && $_a <= 70))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[0-9a-fA-F]', $_expected)) { $_expected[] = '[0-9a-fA-F]'; } } }
        L1261: $_env["a"] = $_value;
        L1262: if ($_fail) { goto L1265; }
        L1263: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((48 <= $_a && $_a <= 57) || (97 <= $_a && $_a <= 102) || (65 <= $_a && $_a <= 70))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[0-9a-fA-F]', $_expected)) { $_expected[] = '[0-9a-fA-F]'; } } }
        L1264: $_env["b"] = $_value;
        L1265: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1266: if ($_fail) { goto L1268; }
        L1267: $_value = $this->_49($_env);
        L1268: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1269: unset($_stack[$_stack_sp--]);
        L1270: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1271: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1272: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1273: $_b = array();
        L1274: $_b[0] = $_fail;
        L1275: $_b[1] = $_value;
        L1276: $_b[2] = $_p;
        L1277: $_cache[$_a] = $_b;
        L1278: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1279: if ($_a === 1009) { goto L1009; } else if ($_a === 1022) { goto L1022; } else if ($_a === 1040) { goto L1040; } else if ($_a === 1104) { goto L1104; } else if ($_a === 1139) { goto L1139; } else { return array(FALSE, NULL, 10); }
        L1280: $_stack[++$_stack_sp] = "11@";
        L1281: $_stack[$_stack_sp] .= $_p;
        L1282: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1289; }
        L1283: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1284: $_b = $_cache[$_a];
        L1285: $_fail = $_b[0];
        L1286: $_value = $_b[1];
        L1287: $_p = $_b[2];
        L1288: goto L1316;
        L1289: $_stack[++$_stack_sp] = $_env;
        L1290: $_env = array();
        L1291: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1292: $_stack[++$_stack_sp] = "";
        L1293: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((97 <= $_a && $_a <= 122) || (65 <= $_a && $_a <= 90) || ($_a === 95))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[a-zA-Z_]', $_expected)) { $_expected[] = '[a-zA-Z_]'; } } }
        L1294: $_stack[$_stack_sp] .= $_value;
        L1295: if ($_fail) { goto L1307; }
        L1296: $_stack[++$_stack_sp] = $_p;
        L1297: $_stack[++$_stack_sp] = "";
        L1298: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((97 <= $_a && $_a <= 122) || (65 <= $_a && $_a <= 90) || (48 <= $_a && $_a <= 57) || ($_a === 95))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[a-zA-Z0-9_]', $_expected)) { $_expected[] = '[a-zA-Z0-9_]'; } } }
        L1299: if ($_fail) { goto L1303; }
        L1300: $_stack[$_stack_sp] .= $_value;
        L1301: $_stack[$_stack_sp - 1] = $_p;
        L1302: goto L1298;
        L1303: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1304: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1305: $_fail = false;
        L1306: $_stack[$_stack_sp] .= $_value;
        L1307: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1308: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1309: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1310: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1311: $_b = array();
        L1312: $_b[0] = $_fail;
        L1313: $_b[1] = $_value;
        L1314: $_b[2] = $_p;
        L1315: $_cache[$_a] = $_b;
        L1316: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1317: if ($_a === 52) { goto L52; } else if ($_a === 72) { goto L72; } else if ($_a === 112) { goto L112; } else if ($_a === 207) { goto L207; } else if ($_a === 303) { goto L303; } else if ($_a === 355) { goto L355; } else if ($_a === 625) { goto L625; } else if ($_a === 640) { goto L640; } else if ($_a === 754) { goto L754; } else if ($_a === 772) { goto L772; } else if ($_a === 874) { goto L874; } else if ($_a === 892) { goto L892; } else if ($_a === 1748) { goto L1748; } else if ($_a === 1776) { goto L1776; } else { return array(FALSE, NULL, 11); }
        L1318: $_stack[++$_stack_sp] = "12@";
        L1319: $_stack[$_stack_sp] .= $_p;
        L1320: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1327; }
        L1321: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1322: $_b = $_cache[$_a];
        L1323: $_fail = $_b[0];
        L1324: $_value = $_b[1];
        L1325: $_p = $_b[2];
        L1326: goto L1403;
        L1327: $_stack[++$_stack_sp] = $_env;
        L1328: $_env = array();
        L1329: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1330: $_stack[++$_stack_sp] = $_p;
        L1331: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1332: $_stack[++$_stack_sp] = $_b;
        L1333: $_stack[++$_stack_sp] = NULL;
        L1334: $_stack[++$_stack_sp] = $_p;
        L1335: $_stack[++$_stack_sp] = NULL;
        L1336: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "->") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"->"', $_expected)) { $_expected[] = '"->"'; } } }
        L1337: $_stack[$_stack_sp] = $_value;
        L1338: if ($_fail) { goto L1341; }
        L1339: $_stack[++$_stack_sp] = 1341;
        L1340: goto L1483;
        L1341: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1342: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1343: if (!$_fail) { goto L1347; }
        L1344: $_fail = false;
        L1345: $_value = NULL;
        L1346: $_p = $_a;
        L1347: $_stack[$_stack_sp] = $_value;
        L1348: if ($_fail) { goto L1356; }
        L1349: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "{") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{"', $_expected)) { $_expected[] = '"{"'; } } }
        L1350: if ($_fail) { goto L1356; }
        L1351: $_stack[++$_stack_sp] = 1353;
        L1352: goto L1405;
        L1353: $_env["code"] = $_value;
        L1354: if ($_fail) { goto L1356; }
        L1355: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1356: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1357: if ($_fail) { goto L1359; }
        L1358: $_value = $this->_50($_env);
        L1359: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1360: if (!$_fail) { goto L1394; }
        L1361: $_p = $_stack[$_stack_sp];
        L1362: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1363: $_stack[++$_stack_sp] = $_b;
        L1364: $_stack[++$_stack_sp] = NULL;
        L1365: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "->") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"->"', $_expected)) { $_expected[] = '"->"'; } } }
        L1366: $_stack[$_stack_sp] = $_value;
        L1367: if ($_fail) { goto L1390; }
        L1368: $_stack[++$_stack_sp] = $_p;
        L1369: $_stack[++$_stack_sp] = "";
        L1370: $_stack[++$_stack_sp] = "";
        L1371: $_stack[++$_stack_sp] = $_p;
        L1372: $_stack[++$_stack_sp] = 1374;
        L1373: goto L1677;
        L1374: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1375: $_value = NULL;
        L1376: $_fail = !$_fail;
        L1377: $_stack[$_stack_sp] .= $_value;
        L1378: if ($_fail) { goto L1381; }
        L1379: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1380: $_stack[$_stack_sp] .= $_value;
        L1381: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1382: if ($_fail) { goto L1386; }
        L1383: $_stack[$_stack_sp] .= $_value;
        L1384: $_stack[$_stack_sp - 1] = $_p;
        L1385: goto L1370;
        L1386: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1387: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1388: $_fail = false;
        L1389: $_env["code"] = $_value;
        L1390: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1391: if ($_fail) { goto L1393; }
        L1392: $_value = $this->_51($_env);
        L1393: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1394: unset($_stack[$_stack_sp--]);
        L1395: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1396: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1397: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1398: $_b = array();
        L1399: $_b[0] = $_fail;
        L1400: $_b[1] = $_value;
        L1401: $_b[2] = $_p;
        L1402: $_cache[$_a] = $_b;
        L1403: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1404: if ($_a === 133) { goto L133; } else if ($_a === 167) { goto L167; } else if ($_a === 542) { goto L542; } else if ($_a === 613) { goto L613; } else { return array(FALSE, NULL, 12); }
        L1405: $_stack[++$_stack_sp] = "13@";
        L1406: $_stack[$_stack_sp] .= $_p;
        L1407: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1414; }
        L1408: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1409: $_b = $_cache[$_a];
        L1410: $_fail = $_b[0];
        L1411: $_value = $_b[1];
        L1412: $_p = $_b[2];
        L1413: goto L1481;
        L1414: $_stack[++$_stack_sp] = $_env;
        L1415: $_env = array();
        L1416: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1417: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1418: $_stack[++$_stack_sp] = $_b;
        L1419: $_stack[++$_stack_sp] = $_p;
        L1420: $_stack[++$_stack_sp] = array();
        L1421: $_stack[++$_stack_sp] = $_p;
        L1422: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1423: $_stack[++$_stack_sp] = $_b;
        L1424: $_stack[++$_stack_sp] = NULL;
        L1425: $_stack[++$_stack_sp] = $_p;
        L1426: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "{") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{"', $_expected)) { $_expected[] = '"{"'; } } }
        L1427: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1428: $_value = NULL;
        L1429: $_fail = !$_fail;
        L1430: if ($_fail) { goto L1440; }
        L1431: $_stack[++$_stack_sp] = $_p;
        L1432: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1433: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1434: $_value = NULL;
        L1435: $_fail = !$_fail;
        L1436: if ($_fail) { goto L1440; }
        L1437: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1438: $_env["c"] = $_value;
        L1439: $_stack[$_stack_sp] = $_value;
        L1440: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1441: if ($_fail) { goto L1443; }
        L1442: $_value = $this->_53($_env);
        L1443: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1444: if (!$_fail) { goto L1461; }
        L1445: $_p = $_stack[$_stack_sp];
        L1446: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1447: $_stack[++$_stack_sp] = $_b;
        L1448: $_stack[++$_stack_sp] = NULL;
        L1449: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "{") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{"', $_expected)) { $_expected[] = '"{"'; } } }
        L1450: $_stack[$_stack_sp] = $_value;
        L1451: if ($_fail) { goto L1457; }
        L1452: $_stack[++$_stack_sp] = 1454;
        L1453: goto L1405;
        L1454: $_env["i"] = $_value;
        L1455: if ($_fail) { goto L1457; }
        L1456: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1457: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1458: if ($_fail) { goto L1460; }
        L1459: $_value = $this->_54($_env);
        L1460: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1461: unset($_stack[$_stack_sp--]);
        L1462: if ($_fail) { goto L1466; }
        L1463: $_stack[$_stack_sp][] = $_value;
        L1464: $_stack[$_stack_sp - 1] = $_p;
        L1465: goto L1421;
        L1466: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1467: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1468: $_fail = false;
        L1469: $_env["inside"] = $_value;
        L1470: if ($_fail) { goto L1472; }
        L1471: $_value = $this->_52($_env);
        L1472: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1473: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1474: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1475: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1476: $_b = array();
        L1477: $_b[0] = $_fail;
        L1478: $_b[1] = $_value;
        L1479: $_b[2] = $_p;
        L1480: $_cache[$_a] = $_b;
        L1481: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1482: if ($_a === 1353) { goto L1353; } else if ($_a === 1454) { goto L1454; } else { return array(FALSE, NULL, 13); }
        L1483: $_stack[++$_stack_sp] = "14@";
        L1484: $_stack[$_stack_sp] .= $_p;
        L1485: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1492; }
        L1486: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1487: $_b = $_cache[$_a];
        L1488: $_fail = $_b[0];
        L1489: $_value = $_b[1];
        L1490: $_p = $_b[2];
        L1491: goto L1575;
        L1492: $_stack[++$_stack_sp] = $_env;
        L1493: $_env = array();
        L1494: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1495: $_stack[++$_stack_sp] = $_p;
        L1496: $_stack[++$_stack_sp] = "";
        L1497: $_stack[++$_stack_sp] = $_p;
        L1498: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 32) || ($_a === 9) || ($_a === 13) || ($_a === 10))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[ \\t\\r\\n]', $_expected)) { $_expected[] = '[ \\t\\r\\n]'; } } }
        L1499: if (!$_fail) { goto L1559; }
        L1500: $_p = $_stack[$_stack_sp];
        L1501: $_stack[++$_stack_sp] = "";
        L1502: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "//") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"//"', $_expected)) { $_expected[] = '"//"'; } } }
        L1503: $_stack[$_stack_sp] .= $_value;
        L1504: if ($_fail) { goto L1527; }
        L1505: $_stack[++$_stack_sp] = $_p;
        L1506: $_stack[++$_stack_sp] = "";
        L1507: $_stack[++$_stack_sp] = "";
        L1508: $_stack[++$_stack_sp] = $_p;
        L1509: $_stack[++$_stack_sp] = 1511;
        L1510: goto L1677;
        L1511: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1512: $_value = NULL;
        L1513: $_fail = !$_fail;
        L1514: $_stack[$_stack_sp] .= $_value;
        L1515: if ($_fail) { goto L1518; }
        L1516: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1517: $_stack[$_stack_sp] .= $_value;
        L1518: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1519: if ($_fail) { goto L1523; }
        L1520: $_stack[$_stack_sp] .= $_value;
        L1521: $_stack[$_stack_sp - 1] = $_p;
        L1522: goto L1507;
        L1523: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1524: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1525: $_fail = false;
        L1526: $_stack[$_stack_sp] .= $_value;
        L1527: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1528: if (!$_fail) { goto L1559; }
        L1529: $_p = $_stack[$_stack_sp];
        L1530: $_stack[++$_stack_sp] = "";
        L1531: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "/*") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"/*"', $_expected)) { $_expected[] = '"/*"'; } } }
        L1532: $_stack[$_stack_sp] .= $_value;
        L1533: if ($_fail) { goto L1558; }
        L1534: $_stack[++$_stack_sp] = $_p;
        L1535: $_stack[++$_stack_sp] = "";
        L1536: $_stack[++$_stack_sp] = "";
        L1537: $_stack[++$_stack_sp] = $_p;
        L1538: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L1539: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1540: $_value = NULL;
        L1541: $_fail = !$_fail;
        L1542: $_stack[$_stack_sp] .= $_value;
        L1543: if ($_fail) { goto L1546; }
        L1544: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1545: $_stack[$_stack_sp] .= $_value;
        L1546: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1547: if ($_fail) { goto L1551; }
        L1548: $_stack[$_stack_sp] .= $_value;
        L1549: $_stack[$_stack_sp - 1] = $_p;
        L1550: goto L1536;
        L1551: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1552: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1553: $_fail = false;
        L1554: $_stack[$_stack_sp] .= $_value;
        L1555: if ($_fail) { goto L1558; }
        L1556: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L1557: $_stack[$_stack_sp] .= $_value;
        L1558: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1559: unset($_stack[$_stack_sp--]);
        L1560: if ($_fail) { goto L1564; }
        L1561: $_stack[$_stack_sp] .= $_value;
        L1562: $_stack[$_stack_sp - 1] = $_p;
        L1563: goto L1497;
        L1564: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1565: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1566: $_fail = false;
        L1567: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1568: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1569: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1570: $_b = array();
        L1571: $_b[0] = $_fail;
        L1572: $_b[1] = $_value;
        L1573: $_b[2] = $_p;
        L1574: $_cache[$_a] = $_b;
        L1575: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1576: if ($_a === 29) { goto L29; } else if ($_a === 95) { goto L95; } else if ($_a === 116) { goto L116; } else if ($_a === 130) { goto L130; } else if ($_a === 137) { goto L137; } else if ($_a === 151) { goto L151; } else if ($_a === 164) { goto L164; } else if ($_a === 171) { goto L171; } else if ($_a === 230) { goto L230; } else if ($_a === 312) { goto L312; } else if ($_a === 317) { goto L317; } else if ($_a === 324) { goto L324; } else if ($_a === 360) { goto L360; } else if ($_a === 365) { goto L365; } else if ($_a === 372) { goto L372; } else if ($_a === 423) { goto L423; } else if ($_a === 429) { goto L429; } else if ($_a === 538) { goto L538; } else if ($_a === 778) { goto L778; } else if ($_a === 803) { goto L803; } else if ($_a === 809) { goto L809; } else if ($_a === 845) { goto L845; } else if ($_a === 852) { goto L852; } else if ($_a === 902) { goto L902; } else if ($_a === 924) { goto L924; } else if ($_a === 931) { goto L931; } else if ($_a === 1341) { goto L1341; } else if ($_a === 1737) { goto L1737; } else if ($_a === 1762) { goto L1762; } else if ($_a === 1768) { goto L1768; } else if ($_a === 1804) { goto L1804; } else { return array(FALSE, NULL, 14); }
        L1577: $_stack[++$_stack_sp] = "15@";
        L1578: $_stack[$_stack_sp] .= $_p;
        L1579: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1586; }
        L1580: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1581: $_b = $_cache[$_a];
        L1582: $_fail = $_b[0];
        L1583: $_value = $_b[1];
        L1584: $_p = $_b[2];
        L1585: goto L1675;
        L1586: $_stack[++$_stack_sp] = $_env;
        L1587: $_env = array();
        L1588: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1589: $_stack[++$_stack_sp] = $_p;
        L1590: $_stack[++$_stack_sp] = array();
        L1591: $_stack[++$_stack_sp] = true;
        L1592: $_stack[++$_stack_sp] = $_p;
        L1593: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 32) || ($_a === 9) || ($_a === 13) || ($_a === 10))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[ \\t\\r\\n]', $_expected)) { $_expected[] = '[ \\t\\r\\n]'; } } }
        L1594: if (!$_fail) { goto L1656; }
        L1595: $_p = $_stack[$_stack_sp];
        L1596: $_stack[++$_stack_sp] = NULL;
        L1597: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "//") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"//"', $_expected)) { $_expected[] = '"//"'; } } }
        L1598: $_stack[$_stack_sp] = $_value;
        L1599: if ($_fail) { goto L1624; }
        L1600: $_stack[++$_stack_sp] = $_p;
        L1601: $_stack[++$_stack_sp] = "";
        L1602: $_stack[++$_stack_sp] = "";
        L1603: $_stack[++$_stack_sp] = $_p;
        L1604: $_stack[++$_stack_sp] = 1606;
        L1605: goto L1677;
        L1606: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1607: $_value = NULL;
        L1608: $_fail = !$_fail;
        L1609: $_stack[$_stack_sp] .= $_value;
        L1610: if ($_fail) { goto L1613; }
        L1611: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1612: $_stack[$_stack_sp] .= $_value;
        L1613: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1614: if ($_fail) { goto L1618; }
        L1615: $_stack[$_stack_sp] .= $_value;
        L1616: $_stack[$_stack_sp - 1] = $_p;
        L1617: goto L1602;
        L1618: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1619: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1620: $_fail = false;
        L1621: if ($_fail) { goto L1624; }
        L1622: $_stack[++$_stack_sp] = 1624;
        L1623: goto L1677;
        L1624: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1625: if (!$_fail) { goto L1656; }
        L1626: $_p = $_stack[$_stack_sp];
        L1627: $_stack[++$_stack_sp] = "";
        L1628: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "/*") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"/*"', $_expected)) { $_expected[] = '"/*"'; } } }
        L1629: $_stack[$_stack_sp] .= $_value;
        L1630: if ($_fail) { goto L1655; }
        L1631: $_stack[++$_stack_sp] = $_p;
        L1632: $_stack[++$_stack_sp] = "";
        L1633: $_stack[++$_stack_sp] = "";
        L1634: $_stack[++$_stack_sp] = $_p;
        L1635: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L1636: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1637: $_value = NULL;
        L1638: $_fail = !$_fail;
        L1639: $_stack[$_stack_sp] .= $_value;
        L1640: if ($_fail) { goto L1643; }
        L1641: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1642: $_stack[$_stack_sp] .= $_value;
        L1643: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1644: if ($_fail) { goto L1648; }
        L1645: $_stack[$_stack_sp] .= $_value;
        L1646: $_stack[$_stack_sp - 1] = $_p;
        L1647: goto L1633;
        L1648: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1649: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1650: $_fail = false;
        L1651: $_stack[$_stack_sp] .= $_value;
        L1652: if ($_fail) { goto L1655; }
        L1653: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L1654: $_stack[$_stack_sp] .= $_value;
        L1655: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1656: unset($_stack[$_stack_sp--]);
        L1657: if ($_fail) { goto L1662; }
        L1658: $_stack[$_stack_sp] = false;
        L1659: $_stack[$_stack_sp - 1][] = $_value;
        L1660: $_stack[$_stack_sp - 2] = $_p;
        L1661: goto L1592;
        L1662: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1663: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1664: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1665: if ($_a) { goto L1667; }
        L1666: $_fail = false;
        L1667: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1668: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1669: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1670: $_b = array();
        L1671: $_b[0] = $_fail;
        L1672: $_b[1] = $_value;
        L1673: $_b[2] = $_p;
        L1674: $_cache[$_a] = $_b;
        L1675: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1676: if ($_a === 42) { goto L42; } else if ($_a === 109) { goto L109; } else if ($_a === 185) { goto L185; } else if ($_a === 196) { goto L196; } else if ($_a === 212) { goto L212; } else if ($_a === 507) { goto L507; } else { return array(FALSE, NULL, 15); }
        L1677: $_stack[++$_stack_sp] = "16@";
        L1678: $_stack[$_stack_sp] .= $_p;
        L1679: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1686; }
        L1680: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1681: $_b = $_cache[$_a];
        L1682: $_fail = $_b[0];
        L1683: $_value = $_b[1];
        L1684: $_p = $_b[2];
        L1685: goto L1715;
        L1686: $_stack[++$_stack_sp] = $_env;
        L1687: $_env = array();
        L1688: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1689: $_stack[++$_stack_sp] = $_p;
        L1690: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\n") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\n"', $_expected)) { $_expected[] = '"\\n"'; } } }
        L1691: if (!$_fail) { goto L1706; }
        L1692: $_p = $_stack[$_stack_sp];
        L1693: $_stack[++$_stack_sp] = "";
        L1694: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\r") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\r"', $_expected)) { $_expected[] = '"\\r"'; } } }
        L1695: $_stack[$_stack_sp] .= $_value;
        L1696: if ($_fail) { goto L1705; }
        L1697: $_stack[++$_stack_sp] = $_p;
        L1698: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\n") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\n"', $_expected)) { $_expected[] = '"\\n"'; } } }
        L1699: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1700: if (!$_fail) { goto L1704; }
        L1701: $_fail = false;
        L1702: $_value = NULL;
        L1703: $_p = $_a;
        L1704: $_stack[$_stack_sp] .= $_value;
        L1705: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1706: unset($_stack[$_stack_sp--]);
        L1707: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1708: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1709: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1710: $_b = array();
        L1711: $_b[0] = $_fail;
        L1712: $_b[1] = $_value;
        L1713: $_b[2] = $_p;
        L1714: $_cache[$_a] = $_b;
        L1715: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1716: if ($_a === 1374) { goto L1374; } else if ($_a === 1511) { goto L1511; } else if ($_a === 1606) { goto L1606; } else if ($_a === 1624) { goto L1624; } else { return array(FALSE, NULL, 16); }
        L1717: $_stack[++$_stack_sp] = "17@";
        L1718: $_stack[$_stack_sp] .= $_p;
        L1719: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1726; }
        L1720: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1721: $_b = $_cache[$_a];
        L1722: $_fail = $_b[0];
        L1723: $_value = $_b[1];
        L1724: $_p = $_b[2];
        L1725: goto L1818;
        L1726: $_stack[++$_stack_sp] = $_env;
        L1727: $_env = array();
        L1728: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1729: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1730: $_stack[++$_stack_sp] = $_b;
        L1731: $_stack[++$_stack_sp] = NULL;
        L1732: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L1733: $_stack[$_stack_sp] = $_value;
        L1734: if ($_fail) { goto L1806; }
        L1735: $_stack[++$_stack_sp] = 1737;
        L1736: goto L1483;
        L1737: if ($_fail) { goto L1806; }
        L1738: $_stack[++$_stack_sp] = $_p;
        L1739: $_stack[++$_stack_sp] = $_env;
        L1740: $_env = array();
        L1741: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1742: $_stack[++$_stack_sp] = $_b;
        L1743: $_stack[++$_stack_sp] = NULL;
        L1744: $_stack[++$_stack_sp] = $_env;
        L1745: $_env = array();
        L1746: $_stack[++$_stack_sp] = 1748;
        L1747: goto L1280;
        L1748: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1749: $_env["first"] = $_value;
        L1750: $_stack[$_stack_sp] = $_value;
        L1751: if ($_fail) { goto L1790; }
        L1752: $_stack[++$_stack_sp] = $_p;
        L1753: $_stack[++$_stack_sp] = array();
        L1754: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1755: $_stack[++$_stack_sp] = $_b;
        L1756: $_stack[++$_stack_sp] = NULL;
        L1757: $_stack[++$_stack_sp] = $_env;
        L1758: $_env = array();
        L1759: $_stack[++$_stack_sp] = NULL;
        L1760: $_stack[++$_stack_sp] = 1762;
        L1761: goto L1483;
        L1762: $_stack[$_stack_sp] = $_value;
        L1763: if ($_fail) { goto L1768; }
        L1764: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ",") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('","', $_expected)) { $_expected[] = '","'; } } }
        L1765: if ($_fail) { goto L1768; }
        L1766: $_stack[++$_stack_sp] = 1768;
        L1767: goto L1483;
        L1768: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1769: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1770: $_stack[$_stack_sp] = $_value;
        L1771: if ($_fail) { goto L1778; }
        L1772: $_stack[++$_stack_sp] = $_env;
        L1773: $_env = array();
        L1774: $_stack[++$_stack_sp] = 1776;
        L1775: goto L1280;
        L1776: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1777: $_env["next"] = $_value;
        L1778: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1779: if ($_fail) { goto L1781; }
        L1780: $_value = $this->_57($_env);
        L1781: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1782: if ($_fail) { goto L1786; }
        L1783: $_stack[$_stack_sp][] = $_value;
        L1784: $_stack[$_stack_sp - 1] = $_p;
        L1785: goto L1754;
        L1786: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1787: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1788: $_fail = false;
        L1789: $_env["rest"] = $_value;
        L1790: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1791: if ($_fail) { goto L1793; }
        L1792: $_value = $this->_56($_env);
        L1793: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1794: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1795: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1796: if (!$_fail) { goto L1800; }
        L1797: $_fail = false;
        L1798: $_value = NULL;
        L1799: $_p = $_a;
        L1800: $_env["parameters"] = $_value;
        L1801: if ($_fail) { goto L1806; }
        L1802: $_stack[++$_stack_sp] = 1804;
        L1803: goto L1483;
        L1804: if ($_fail) { goto L1806; }
        L1805: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ")") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('")"', $_expected)) { $_expected[] = '")"'; } } }
        L1806: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1807: if ($_fail) { goto L1809; }
        L1808: $_value = $this->_55($_env);
        L1809: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1810: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1811: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1812: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1813: $_b = array();
        L1814: $_b[0] = $_fail;
        L1815: $_b[1] = $_value;
        L1816: $_b[2] = $_p;
        L1817: $_cache[$_a] = $_b;
        L1818: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1819: if ($_a === 155) { goto L155; } else if ($_a === 308) { goto L308; } else { return array(FALSE, NULL, 17); }
        Lend:
        list($ok, $result) = array(!$_fail, $_value);
        if (!$ok) {
            $before = str_replace(array("\r\n", "\r"), "\n", substr($_s, 0, $_maxp));
            $after = str_replace(array("\r\n", "\r"), "\n", substr($_s, $_maxp));
            $line = 1;
            if (($pos = strrpos($before, "\n")) !== FALSE) {
                $line = substr_count($before, "\n") + 1;
                $before = (string) substr($before, $pos + 1);
            }
            if (($pos = strpos($after, "\n")) !== FALSE) {
                $after = substr($after, 0, $pos);
            }
            return array(FALSE, NULL, (object) array('position' => $_maxp, 'line' => $line, 'column' => strlen($before) + 1, 'context' => $before . $after, 'expected' => $_expected));
        }
        return array(TRUE, $result, NULL);
    }
    private function _0() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("phpeg", array_merge($declarations, $definitions));
    
    }
    private function _1() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("namespace", $namespace);
    
    }
    private function _2() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $first . implode("", $rest);
    
    }
    private function _3() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $s . $next;
    
    }
    private function _4() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("name", $name);
    
    }
    private function _5() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("init", $code);
    
    }
    private function _6() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("invoke", (array) $parameters, $code);
    
    }
    private function _7() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("import", $spec, $path);
    
    }
    private function _8() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return TRUE;
    
    }
    private function _9() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $name;
    
    }
    private function _10() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("macro", $name, $parameters, $expression);
    
    }
    private function _11() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("rule", $name, $expression);
    
    }
    private function _12() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        if (count($expressions) < 2) {
                    return $expressions[0];
                } else {
                    return array("first", $expressions);
                }
            
    
    }
    private function _13() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array_merge(array($first), $rest);
    
    }
    private function _14() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $next;
    
    }
    private function _15() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $ret = count($expressions) < 2
                       ? $expressions[0]
                       : array("all", $expressions);
        
                if ($action) {
                    $ret = array("action", $ret, $action);
                }
        
                return $ret;
            
    
    }
    private function _16() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array_merge(array($first), $rest);
    
    }
    private function _17() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $next;
    
    }
    private function _18() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("and", $expression);
    
    }
    private function _19() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("not", $expression);
    
    }
    private function _20() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("semantic_predicate", $code);
    
    }
    private function _21() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("bind", $varname, array("position"));
    
    }
    private function _22() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("bind", $varname, $expression);
    
    }
    private function _23() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $suffix ? array($suffix, $expression) : $expression;
    
    }
    private function _24() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "optional";
    
    }
    private function _25() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "zero_or_more";
    
    }
    private function _26() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "one_or_more";
    
    }
    private function _27() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("expand", $importname ? array($importname, $macroname) : $macroname, (array) $arguments);
    
    }
    private function _28() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $name;
    
    }
    private function _29() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array_merge(array($first), $rest);
    
    }
    private function _30() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $next;
    
    }
    private function _31() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("apply", $importname ? array($importname, $rulename) : $rulename);
    
    }
    private function _32() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $name;
    
    }
    private function _33() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $expression;
    
    }
    private function _34() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("literal", $literal);
    
    }
    private function _35() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("range", $range);
    
    }
    private function _36() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("any");
    
    }
    private function _37() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $matches;
    
    }
    private function _38() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array(ord($a), ord($b));
    
    }
    private function _39() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return ord($c);
    
    }
    private function _40() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return implode("", $value);
    
    }
    private function _41() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return implode("", $value);
    
    }
    private function _42() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\n";
    
    }
    private function _43() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\r";
    
    }
    private function _44() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\t";
    
    }
    private function _45() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\\";
    
    }
    private function _46() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return '"';
    
    }
    private function _47() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "'";
    
    }
    private function _48() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return ']';
    
    }
    private function _49() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return chr(hexdec($a . $b));
    
    }
    private function _50() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return ltrim($code);
    
    }
    private function _51() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "return " . trim($code) . ";";
    
    }
    private function _52() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return implode("", $inside);
    
    }
    private function _53() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $c;
    
    }
    private function _54() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "{" . $i . "}";
    
    }
    private function _55() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return (array) $parameters;
    
    }
    private function _56() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array_merge(array($first), $rest);
    
    }
    private function _57() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $next;
    
    }
}
