<?php
// autogenerated file, do not edit!
class parse_phpeg {
    
    
    private $_environments = array(-1 => array());
    private $_environment_stack = array();
    private $_environment_stack_sp = -1;
    public function __construct() {
        
        
    }
    
    public function __invoke($s) {
    foreach ($this->_environments as $_env) { extract($_env, EXTR_OVERWRITE | EXTR_REFS); }
        return $this->parse($s);
    }
    
    public function parse($_s) {
        $_addr = 0;
        $_maxp = $_p = 0;
        $_expected = array();
        L0: $_stack_sp = -1; $_stack = array();
        L1: $_fail = false;
        L2: $_value = NULL;
        L3: $_cache = array();
        L4: $_a = NULL;
        L5: $_b = NULL;
        L6: $_c = NULL;
        L7: $_d = NULL;
        L8: $_env = array();
        L9: $_stack[++$_stack_sp] = 11;
        L10: goto L12;
        L11: goto Lend;
        L12: $_stack[++$_stack_sp] = "0@";
        L13: $_stack[$_stack_sp] .= $_p;
        L14: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L21; }
        L15: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L16: $_b = $_cache[$_a];
        L17: $_fail = $_b[0];
        L18: $_value = $_b[1];
        L19: $_p = $_b[2];
        L20: goto L351;
        L21: $_stack[++$_stack_sp] = $_env;
        L22: $_env = array();
        L23: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L24: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L25: $_stack[++$_stack_sp] = $_b;
        L26: $_stack[++$_stack_sp] = NULL;
        L27: $_stack[++$_stack_sp] = 29;
        L28: goto L1591;
        L29: if ($_fail) { goto L339; }
        L30: $_stack[$_stack_sp] = $_value;
        L31: $_stack[++$_stack_sp] = $_p;
        L32: $_stack[++$_stack_sp] = array();
        L33: $_stack[++$_stack_sp] = $_p;
        L34: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L35: $_stack[++$_stack_sp] = $_b;
        L36: $_stack[++$_stack_sp] = NULL;
        L37: $_fail = TRUE; if (($_a = substr($_s, $_p, 10)) === "-namespace") { $_fail = FALSE; $_value = $_a; $_p += 10; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-namespace"', $_expected)) { $_expected[] = '"-namespace"'; } } }
        L38: if ($_fail) { goto L98; }
        L39: $_stack[$_stack_sp] = $_value;
        L40: $_stack[++$_stack_sp] = 42;
        L41: goto L1689;
        L42: if ($_fail) { goto L98; }
        L43: $_stack[++$_stack_sp] = $_env;
        L44: $_env = array();
        L45: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L46: $_stack[++$_stack_sp] = $_b;
        L47: $_stack[++$_stack_sp] = NULL;
        L48: $_stack[++$_stack_sp] = $_env;
        L49: $_env = array();
        L50: $_stack[++$_stack_sp] = 52;
        L51: goto L1381;
        L52: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L53: $_env["first"] = $_value;
        L54: if ($_fail) { goto L88; }
        L55: $_stack[$_stack_sp] = $_value;
        L56: $_stack[++$_stack_sp] = $_p;
        L57: $_stack[++$_stack_sp] = array();
        L58: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L59: $_stack[++$_stack_sp] = $_b;
        L60: $_stack[++$_stack_sp] = NULL;
        L61: $_stack[++$_stack_sp] = $_env;
        L62: $_env = array();
        L63: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\\") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\"', $_expected)) { $_expected[] = '"\\\\"'; } } }
        L64: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L65: $_env["s"] = $_value;
        L66: if ($_fail) { goto L75; }
        L67: $_stack[$_stack_sp] = $_value;
        L68: $_stack[++$_stack_sp] = $_env;
        L69: $_env = array();
        L70: $_stack[++$_stack_sp] = 72;
        L71: goto L1381;
        L72: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L73: $_env["next"] = $_value;
        L74: if ($_fail) { goto L75; }
        L75: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L76: if ($_fail) { goto L78; }
        L77: $_value = $this->_3($_env);
        L78: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L79: if ($_fail) { goto L83; }
        L80: $_stack[$_stack_sp][] = $_value;
        L81: $_stack[$_stack_sp - 1] = $_p;
        L82: goto L58;
        L83: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L84: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L85: $_fail = false;
        L86: $_env["rest"] = $_value;
        L87: if ($_fail) { goto L88; }
        L88: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L89: if ($_fail) { goto L91; }
        L90: $_value = $this->_2($_env);
        L91: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L92: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L93: $_env["namespace"] = $_value;
        L94: if ($_fail) { goto L98; }
        L95: $_stack[++$_stack_sp] = 97;
        L96: goto L1591;
        L97: if ($_fail) { goto L98; }
        L98: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L99: if ($_fail) { goto L101; }
        L100: $_value = $this->_1($_env);
        L101: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L102: if (!$_fail) { goto L300; }
        L103: $_p = $_stack[$_stack_sp];
        L104: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L105: $_stack[++$_stack_sp] = $_b;
        L106: $_stack[++$_stack_sp] = NULL;
        L107: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "-name") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-name"', $_expected)) { $_expected[] = '"-name"'; } } }
        L108: if ($_fail) { goto L120; }
        L109: $_stack[$_stack_sp] = $_value;
        L110: $_stack[++$_stack_sp] = 112;
        L111: goto L1689;
        L112: if ($_fail) { goto L120; }
        L113: $_stack[++$_stack_sp] = 115;
        L114: goto L1381;
        L115: $_env["name"] = $_value;
        L116: if ($_fail) { goto L120; }
        L117: $_stack[++$_stack_sp] = 119;
        L118: goto L1591;
        L119: if ($_fail) { goto L120; }
        L120: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L121: if ($_fail) { goto L123; }
        L122: $_value = $this->_4($_env);
        L123: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L124: if (!$_fail) { goto L300; }
        L125: $_p = $_stack[$_stack_sp];
        L126: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L127: $_stack[++$_stack_sp] = $_b;
        L128: $_stack[++$_stack_sp] = NULL;
        L129: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "-init") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-init"', $_expected)) { $_expected[] = '"-init"'; } } }
        L130: if ($_fail) { goto L142; }
        L131: $_stack[$_stack_sp] = $_value;
        L132: $_stack[++$_stack_sp] = 134;
        L133: goto L1591;
        L134: if ($_fail) { goto L142; }
        L135: $_stack[++$_stack_sp] = 137;
        L136: goto L1420;
        L137: $_env["code"] = $_value;
        L138: if ($_fail) { goto L142; }
        L139: $_stack[++$_stack_sp] = 141;
        L140: goto L1591;
        L141: if ($_fail) { goto L142; }
        L142: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L143: if ($_fail) { goto L145; }
        L144: $_value = $this->_5($_env);
        L145: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L146: if (!$_fail) { goto L300; }
        L147: $_p = $_stack[$_stack_sp];
        L148: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L149: $_stack[++$_stack_sp] = $_b;
        L150: $_stack[++$_stack_sp] = NULL;
        L151: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "-invoke") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-invoke"', $_expected)) { $_expected[] = '"-invoke"'; } } }
        L152: if ($_fail) { goto L177; }
        L153: $_stack[$_stack_sp] = $_value;
        L154: $_stack[++$_stack_sp] = 156;
        L155: goto L1591;
        L156: if ($_fail) { goto L177; }
        L157: $_stack[++$_stack_sp] = $_p;
        L158: $_stack[++$_stack_sp] = 160;
        L159: goto L1834;
        L160: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L161: if (!$_fail) { goto L165; }
        L162: $_fail = false;
        L163: $_value = NULL;
        L164: $_p = $_a;
        L165: $_env["parameters"] = $_value;
        L166: if ($_fail) { goto L177; }
        L167: $_stack[++$_stack_sp] = 169;
        L168: goto L1591;
        L169: if ($_fail) { goto L177; }
        L170: $_stack[++$_stack_sp] = 172;
        L171: goto L1420;
        L172: $_env["code"] = $_value;
        L173: if ($_fail) { goto L177; }
        L174: $_stack[++$_stack_sp] = 176;
        L175: goto L1591;
        L176: if ($_fail) { goto L177; }
        L177: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L178: if ($_fail) { goto L180; }
        L179: $_value = $this->_6($_env);
        L180: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L181: if (!$_fail) { goto L300; }
        L182: $_p = $_stack[$_stack_sp];
        L183: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L184: $_stack[++$_stack_sp] = $_b;
        L185: $_stack[++$_stack_sp] = NULL;
        L186: $_fail = TRUE; if (($_a = substr($_s, $_p, 12)) === "-constructor") { $_fail = FALSE; $_value = $_a; $_p += 12; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-constructor"', $_expected)) { $_expected[] = '"-constructor"'; } } }
        L187: if ($_fail) { goto L212; }
        L188: $_stack[$_stack_sp] = $_value;
        L189: $_stack[++$_stack_sp] = 191;
        L190: goto L1591;
        L191: if ($_fail) { goto L212; }
        L192: $_stack[++$_stack_sp] = $_p;
        L193: $_stack[++$_stack_sp] = 195;
        L194: goto L1834;
        L195: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L196: if (!$_fail) { goto L200; }
        L197: $_fail = false;
        L198: $_value = NULL;
        L199: $_p = $_a;
        L200: $_env["parameters"] = $_value;
        L201: if ($_fail) { goto L212; }
        L202: $_stack[++$_stack_sp] = 204;
        L203: goto L1591;
        L204: if ($_fail) { goto L212; }
        L205: $_stack[++$_stack_sp] = 207;
        L206: goto L1420;
        L207: $_env["code"] = $_value;
        L208: if ($_fail) { goto L212; }
        L209: $_stack[++$_stack_sp] = 211;
        L210: goto L1591;
        L211: if ($_fail) { goto L212; }
        L212: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L213: if ($_fail) { goto L215; }
        L214: $_value = $this->_7($_env);
        L215: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L216: if (!$_fail) { goto L300; }
        L217: $_p = $_stack[$_stack_sp];
        L218: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L219: $_stack[++$_stack_sp] = $_b;
        L220: $_stack[++$_stack_sp] = NULL;
        L221: $_fail = TRUE; if (($_a = substr($_s, $_p, 8)) === "-private") { $_fail = FALSE; $_value = $_a; $_p += 8; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-private"', $_expected)) { $_expected[] = '"-private"'; } } }
        L222: if ($_fail) { goto L234; }
        L223: $_stack[$_stack_sp] = $_value;
        L224: $_stack[++$_stack_sp] = 226;
        L225: goto L1591;
        L226: if ($_fail) { goto L234; }
        L227: $_stack[++$_stack_sp] = 229;
        L228: goto L1381;
        L229: $_env["name"] = $_value;
        L230: if ($_fail) { goto L234; }
        L231: $_stack[++$_stack_sp] = 233;
        L232: goto L1591;
        L233: if ($_fail) { goto L234; }
        L234: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L235: if ($_fail) { goto L237; }
        L236: $_value = $this->_8($_env);
        L237: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L238: if (!$_fail) { goto L300; }
        L239: $_p = $_stack[$_stack_sp];
        L240: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L241: $_stack[++$_stack_sp] = $_b;
        L242: $_stack[++$_stack_sp] = NULL;
        L243: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "-import") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-import"', $_expected)) { $_expected[] = '"-import"'; } } }
        L244: if ($_fail) { goto L296; }
        L245: $_stack[$_stack_sp] = $_value;
        L246: $_stack[++$_stack_sp] = 248;
        L247: goto L1689;
        L248: if ($_fail) { goto L296; }
        L249: $_stack[++$_stack_sp] = $_p;
        L250: $_stack[++$_stack_sp] = $_p;
        L251: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L252: $_stack[++$_stack_sp] = $_b;
        L253: $_stack[++$_stack_sp] = NULL;
        L254: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L255: if ($_fail) { goto L260; }
        L256: $_stack[$_stack_sp] = $_value;
        L257: $_stack[++$_stack_sp] = 259;
        L258: goto L1689;
        L259: if ($_fail) { goto L260; }
        L260: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L261: if ($_fail) { goto L263; }
        L262: $_value = $this->_10($_env);
        L263: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L264: if (!$_fail) { goto L281; }
        L265: $_p = $_stack[$_stack_sp];
        L266: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L267: $_stack[++$_stack_sp] = $_b;
        L268: $_stack[++$_stack_sp] = NULL;
        L269: $_stack[++$_stack_sp] = 271;
        L270: goto L1381;
        L271: $_env["name"] = $_value;
        L272: if ($_fail) { goto L277; }
        L273: $_stack[$_stack_sp] = $_value;
        L274: $_stack[++$_stack_sp] = 276;
        L275: goto L1689;
        L276: if ($_fail) { goto L277; }
        L277: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L278: if ($_fail) { goto L280; }
        L279: $_value = $this->_11($_env);
        L280: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L281: unset($_stack[$_stack_sp--]);
        L282: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L283: if (!$_fail) { goto L287; }
        L284: $_fail = false;
        L285: $_value = NULL;
        L286: $_p = $_a;
        L287: $_env["spec"] = $_value;
        L288: if ($_fail) { goto L296; }
        L289: $_stack[++$_stack_sp] = 291;
        L290: goto L1168;
        L291: $_env["path"] = $_value;
        L292: if ($_fail) { goto L296; }
        L293: $_stack[++$_stack_sp] = 295;
        L294: goto L1591;
        L295: if ($_fail) { goto L296; }
        L296: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L297: if ($_fail) { goto L299; }
        L298: $_value = $this->_9($_env);
        L299: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L300: unset($_stack[$_stack_sp--]);
        L301: if ($_fail) { goto L305; }
        L302: $_stack[$_stack_sp][] = $_value;
        L303: $_stack[$_stack_sp - 1] = $_p;
        L304: goto L33;
        L305: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L306: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L307: $_fail = false;
        L308: $_env["declarations"] = $_value;
        L309: if ($_fail) { goto L339; }
        L310: $_stack[++$_stack_sp] = $_p;
        L311: $_stack[++$_stack_sp] = array();
        L312: $_stack[++$_stack_sp] = true;
        L313: $_stack[++$_stack_sp] = $_p;
        L314: $_stack[++$_stack_sp] = 316;
        L315: goto L353;
        L316: if (!$_fail) { goto L320; }
        L317: $_p = $_stack[$_stack_sp];
        L318: $_stack[++$_stack_sp] = 320;
        L319: goto L406;
        L320: unset($_stack[$_stack_sp--]);
        L321: if ($_fail) { goto L326; }
        L322: $_stack[$_stack_sp] = false;
        L323: $_stack[$_stack_sp - 1][] = $_value;
        L324: $_stack[$_stack_sp - 2] = $_p;
        L325: goto L313;
        L326: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L327: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L328: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L329: if ($_a) { goto L331; }
        L330: $_fail = false;
        L331: $_env["definitions"] = $_value;
        L332: if ($_fail) { goto L339; }
        L333: $_stack[++$_stack_sp] = $_p;
        L334: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L335: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L336: $_value = NULL;
        L337: $_fail = !$_fail;
        L338: if ($_fail) { goto L339; }
        L339: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L340: if ($_fail) { goto L342; }
        L341: $_value = $this->_0($_env);
        L342: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L343: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L344: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L345: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L346: $_b = array();
        L347: $_b[0] = $_fail;
        L348: $_b[1] = $_value;
        L349: $_b[2] = $_p;
        L350: $_cache[$_a] = $_b;
        L351: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L352: if ($_a !== 11) return array(FALSE, NULL, 0); goto L11;
        L353: $_stack[++$_stack_sp] = "1@";
        L354: $_stack[$_stack_sp] .= $_p;
        L355: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L362; }
        L356: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L357: $_b = $_cache[$_a];
        L358: $_fail = $_b[0];
        L359: $_value = $_b[1];
        L360: $_p = $_b[2];
        L361: goto L404;
        L362: $_stack[++$_stack_sp] = $_env;
        L363: $_env = array();
        L364: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L365: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L366: $_stack[++$_stack_sp] = $_b;
        L367: $_stack[++$_stack_sp] = NULL;
        L368: $_stack[++$_stack_sp] = 370;
        L369: goto L1381;
        L370: $_env["name"] = $_value;
        L371: if ($_fail) { goto L392; }
        L372: $_stack[$_stack_sp] = $_value;
        L373: $_stack[++$_stack_sp] = 375;
        L374: goto L1834;
        L375: $_env["parameters"] = $_value;
        L376: if ($_fail) { goto L392; }
        L377: $_stack[++$_stack_sp] = 379;
        L378: goto L1591;
        L379: if ($_fail) { goto L392; }
        L380: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L381: if ($_fail) { goto L392; }
        L382: $_stack[++$_stack_sp] = 384;
        L383: goto L1591;
        L384: if ($_fail) { goto L392; }
        L385: $_stack[++$_stack_sp] = 387;
        L386: goto L455;
        L387: $_env["expression"] = $_value;
        L388: if ($_fail) { goto L392; }
        L389: $_stack[++$_stack_sp] = 391;
        L390: goto L1591;
        L391: if ($_fail) { goto L392; }
        L392: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L393: if ($_fail) { goto L395; }
        L394: $_value = $this->_12($_env);
        L395: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L396: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L397: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L398: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L399: $_b = array();
        L400: $_b[0] = $_fail;
        L401: $_b[1] = $_value;
        L402: $_b[2] = $_p;
        L403: $_cache[$_a] = $_b;
        L404: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L405: if ($_a !== 316) return array(FALSE, NULL, 1); goto L316;
        L406: $_stack[++$_stack_sp] = "2@";
        L407: $_stack[$_stack_sp] .= $_p;
        L408: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L415; }
        L409: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L410: $_b = $_cache[$_a];
        L411: $_fail = $_b[0];
        L412: $_value = $_b[1];
        L413: $_p = $_b[2];
        L414: goto L453;
        L415: $_stack[++$_stack_sp] = $_env;
        L416: $_env = array();
        L417: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L418: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L419: $_stack[++$_stack_sp] = $_b;
        L420: $_stack[++$_stack_sp] = NULL;
        L421: $_stack[++$_stack_sp] = 423;
        L422: goto L1381;
        L423: $_env["name"] = $_value;
        L424: if ($_fail) { goto L441; }
        L425: $_stack[$_stack_sp] = $_value;
        L426: $_stack[++$_stack_sp] = 428;
        L427: goto L1591;
        L428: if ($_fail) { goto L441; }
        L429: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L430: if ($_fail) { goto L441; }
        L431: $_stack[++$_stack_sp] = 433;
        L432: goto L1591;
        L433: if ($_fail) { goto L441; }
        L434: $_stack[++$_stack_sp] = 436;
        L435: goto L455;
        L436: $_env["expression"] = $_value;
        L437: if ($_fail) { goto L441; }
        L438: $_stack[++$_stack_sp] = 440;
        L439: goto L1591;
        L440: if ($_fail) { goto L441; }
        L441: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L442: if ($_fail) { goto L444; }
        L443: $_value = $this->_13($_env);
        L444: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L445: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L446: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L447: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L448: $_b = array();
        L449: $_b[0] = $_fail;
        L450: $_b[1] = $_value;
        L451: $_b[2] = $_p;
        L452: $_cache[$_a] = $_b;
        L453: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L454: if ($_a !== 320) return array(FALSE, NULL, 2); goto L320;
        L455: $_stack[++$_stack_sp] = "3@";
        L456: $_stack[$_stack_sp] .= $_p;
        L457: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L464; }
        L458: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L459: $_b = $_cache[$_a];
        L460: $_fail = $_b[0];
        L461: $_value = $_b[1];
        L462: $_p = $_b[2];
        L463: goto L540;
        L464: $_stack[++$_stack_sp] = $_env;
        L465: $_env = array();
        L466: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L467: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L468: $_stack[++$_stack_sp] = $_b;
        L469: $_stack[++$_stack_sp] = $_env;
        L470: $_env = array();
        L471: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L472: $_stack[++$_stack_sp] = $_b;
        L473: $_stack[++$_stack_sp] = NULL;
        L474: $_stack[++$_stack_sp] = $_env;
        L475: $_env = array();
        L476: $_stack[++$_stack_sp] = 478;
        L477: goto L542;
        L478: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L479: $_env["first"] = $_value;
        L480: if ($_fail) { goto L523; }
        L481: $_stack[$_stack_sp] = $_value;
        L482: $_stack[++$_stack_sp] = $_p;
        L483: $_stack[++$_stack_sp] = array();
        L484: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L485: $_stack[++$_stack_sp] = $_b;
        L486: $_stack[++$_stack_sp] = NULL;
        L487: $_stack[++$_stack_sp] = $_env;
        L488: $_env = array();
        L489: $_stack[++$_stack_sp] = NULL;
        L490: $_stack[++$_stack_sp] = 492;
        L491: goto L1591;
        L492: if ($_fail) { goto L499; }
        L493: $_stack[$_stack_sp] = $_value;
        L494: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "/") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"/"', $_expected)) { $_expected[] = '"/"'; } } }
        L495: if ($_fail) { goto L499; }
        L496: $_stack[++$_stack_sp] = 498;
        L497: goto L1591;
        L498: if ($_fail) { goto L499; }
        L499: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L500: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L501: if ($_fail) { goto L510; }
        L502: $_stack[$_stack_sp] = $_value;
        L503: $_stack[++$_stack_sp] = $_env;
        L504: $_env = array();
        L505: $_stack[++$_stack_sp] = 507;
        L506: goto L542;
        L507: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L508: $_env["next"] = $_value;
        L509: if ($_fail) { goto L510; }
        L510: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L511: if ($_fail) { goto L513; }
        L512: $_value = $this->_16($_env);
        L513: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L514: if ($_fail) { goto L518; }
        L515: $_stack[$_stack_sp][] = $_value;
        L516: $_stack[$_stack_sp - 1] = $_p;
        L517: goto L484;
        L518: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L519: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L520: $_fail = false;
        L521: $_env["rest"] = $_value;
        L522: if ($_fail) { goto L523; }
        L523: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L524: if ($_fail) { goto L526; }
        L525: $_value = $this->_15($_env);
        L526: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L527: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L528: $_env["expressions"] = $_value;
        L529: if ($_fail) { goto L531; }
        L530: $_value = $this->_14($_env);
        L531: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L532: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L533: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L534: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L535: $_b = array();
        L536: $_b[0] = $_fail;
        L537: $_b[1] = $_value;
        L538: $_b[2] = $_p;
        L539: $_cache[$_a] = $_b;
        L540: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L541: if ($_a === 387) { goto L387; } else if ($_a === 436) { goto L436; } else if ($_a === 871) { goto L871; } else if ($_a === 900) { goto L900; } else if ($_a === 1017) { goto L1017; } else { return array(FALSE, NULL, 3); }
        L542: $_stack[++$_stack_sp] = "4@";
        L543: $_stack[$_stack_sp] .= $_p;
        L544: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L551; }
        L545: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L546: $_b = $_cache[$_a];
        L547: $_fail = $_b[0];
        L548: $_value = $_b[1];
        L549: $_p = $_b[2];
        L550: goto L635;
        L551: $_stack[++$_stack_sp] = $_env;
        L552: $_env = array();
        L553: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L554: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L555: $_stack[++$_stack_sp] = $_b;
        L556: $_stack[++$_stack_sp] = NULL;
        L557: $_stack[++$_stack_sp] = $_env;
        L558: $_env = array();
        L559: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L560: $_stack[++$_stack_sp] = $_b;
        L561: $_stack[++$_stack_sp] = NULL;
        L562: $_stack[++$_stack_sp] = $_env;
        L563: $_env = array();
        L564: $_stack[++$_stack_sp] = 566;
        L565: goto L637;
        L566: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L567: $_env["first"] = $_value;
        L568: if ($_fail) { goto L602; }
        L569: $_stack[$_stack_sp] = $_value;
        L570: $_stack[++$_stack_sp] = $_p;
        L571: $_stack[++$_stack_sp] = array();
        L572: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L573: $_stack[++$_stack_sp] = $_b;
        L574: $_stack[++$_stack_sp] = NULL;
        L575: $_stack[++$_stack_sp] = $_env;
        L576: $_env = array();
        L577: $_stack[++$_stack_sp] = 579;
        L578: goto L1689;
        L579: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L580: if ($_fail) { goto L589; }
        L581: $_stack[$_stack_sp] = $_value;
        L582: $_stack[++$_stack_sp] = $_env;
        L583: $_env = array();
        L584: $_stack[++$_stack_sp] = 586;
        L585: goto L637;
        L586: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L587: $_env["next"] = $_value;
        L588: if ($_fail) { goto L589; }
        L589: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L590: if ($_fail) { goto L592; }
        L591: $_value = $this->_19($_env);
        L592: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L593: if ($_fail) { goto L597; }
        L594: $_stack[$_stack_sp][] = $_value;
        L595: $_stack[$_stack_sp - 1] = $_p;
        L596: goto L572;
        L597: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L598: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L599: $_fail = false;
        L600: $_env["rest"] = $_value;
        L601: if ($_fail) { goto L602; }
        L602: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L603: if ($_fail) { goto L605; }
        L604: $_value = $this->_18($_env);
        L605: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L606: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L607: $_env["expressions"] = $_value;
        L608: if ($_fail) { goto L623; }
        L609: $_stack[$_stack_sp] = $_value;
        L610: $_stack[++$_stack_sp] = 612;
        L611: goto L1591;
        L612: if ($_fail) { goto L623; }
        L613: $_stack[++$_stack_sp] = $_p;
        L614: $_stack[++$_stack_sp] = 616;
        L615: goto L1420;
        L616: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L617: if (!$_fail) { goto L621; }
        L618: $_fail = false;
        L619: $_value = NULL;
        L620: $_p = $_a;
        L621: $_env["action"] = $_value;
        L622: if ($_fail) { goto L623; }
        L623: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L624: if ($_fail) { goto L626; }
        L625: $_value = $this->_17($_env);
        L626: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L627: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L628: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L629: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L630: $_b = array();
        L631: $_b[0] = $_fail;
        L632: $_b[1] = $_value;
        L633: $_b[2] = $_p;
        L634: $_cache[$_a] = $_b;
        L635: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L636: if ($_a === 478) { goto L478; } else if ($_a === 507) { goto L507; } else { return array(FALSE, NULL, 4); }
        L637: $_stack[++$_stack_sp] = "5@";
        L638: $_stack[$_stack_sp] .= $_p;
        L639: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L646; }
        L640: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L641: $_b = $_cache[$_a];
        L642: $_fail = $_b[0];
        L643: $_value = $_b[1];
        L644: $_p = $_b[2];
        L645: goto L745;
        L646: $_stack[++$_stack_sp] = $_env;
        L647: $_env = array();
        L648: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L649: $_stack[++$_stack_sp] = $_p;
        L650: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L651: $_stack[++$_stack_sp] = $_b;
        L652: $_stack[++$_stack_sp] = NULL;
        L653: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "&") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"&"', $_expected)) { $_expected[] = '"&"'; } } }
        L654: if ($_fail) { goto L660; }
        L655: $_stack[$_stack_sp] = $_value;
        L656: $_stack[++$_stack_sp] = 658;
        L657: goto L747;
        L658: $_env["expression"] = $_value;
        L659: if ($_fail) { goto L660; }
        L660: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L661: if ($_fail) { goto L663; }
        L662: $_value = $this->_20($_env);
        L663: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L664: if (!$_fail) { goto L736; }
        L665: $_p = $_stack[$_stack_sp];
        L666: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L667: $_stack[++$_stack_sp] = $_b;
        L668: $_stack[++$_stack_sp] = NULL;
        L669: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "!") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"!"', $_expected)) { $_expected[] = '"!"'; } } }
        L670: if ($_fail) { goto L676; }
        L671: $_stack[$_stack_sp] = $_value;
        L672: $_stack[++$_stack_sp] = 674;
        L673: goto L747;
        L674: $_env["expression"] = $_value;
        L675: if ($_fail) { goto L676; }
        L676: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L677: if ($_fail) { goto L679; }
        L678: $_value = $this->_21($_env);
        L679: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L680: if (!$_fail) { goto L736; }
        L681: $_p = $_stack[$_stack_sp];
        L682: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L683: $_stack[++$_stack_sp] = $_b;
        L684: $_stack[++$_stack_sp] = NULL;
        L685: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "?") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"?"', $_expected)) { $_expected[] = '"?"'; } } }
        L686: if ($_fail) { goto L692; }
        L687: $_stack[$_stack_sp] = $_value;
        L688: $_stack[++$_stack_sp] = 690;
        L689: goto L1420;
        L690: $_env["code"] = $_value;
        L691: if ($_fail) { goto L692; }
        L692: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L693: if ($_fail) { goto L695; }
        L694: $_value = $this->_22($_env);
        L695: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L696: if (!$_fail) { goto L736; }
        L697: $_p = $_stack[$_stack_sp];
        L698: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L699: $_stack[++$_stack_sp] = $_b;
        L700: $_stack[++$_stack_sp] = NULL;
        L701: $_stack[++$_stack_sp] = 703;
        L702: goto L1381;
        L703: $_env["varname"] = $_value;
        L704: if ($_fail) { goto L708; }
        L705: $_stack[$_stack_sp] = $_value;
        L706: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === ":^") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('":^"', $_expected)) { $_expected[] = '":^"'; } } }
        L707: if ($_fail) { goto L708; }
        L708: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L709: if ($_fail) { goto L711; }
        L710: $_value = $this->_23($_env);
        L711: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L712: if (!$_fail) { goto L736; }
        L713: $_p = $_stack[$_stack_sp];
        L714: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L715: $_stack[++$_stack_sp] = $_b;
        L716: $_stack[++$_stack_sp] = NULL;
        L717: $_stack[++$_stack_sp] = 719;
        L718: goto L1381;
        L719: $_env["varname"] = $_value;
        L720: if ($_fail) { goto L728; }
        L721: $_stack[$_stack_sp] = $_value;
        L722: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ":") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('":"', $_expected)) { $_expected[] = '":"'; } } }
        L723: if ($_fail) { goto L728; }
        L724: $_stack[++$_stack_sp] = 726;
        L725: goto L747;
        L726: $_env["expression"] = $_value;
        L727: if ($_fail) { goto L728; }
        L728: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L729: if ($_fail) { goto L731; }
        L730: $_value = $this->_24($_env);
        L731: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L732: if (!$_fail) { goto L736; }
        L733: $_p = $_stack[$_stack_sp];
        L734: $_stack[++$_stack_sp] = 736;
        L735: goto L747;
        L736: unset($_stack[$_stack_sp--]);
        L737: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L738: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L739: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L740: $_b = array();
        L741: $_b[0] = $_fail;
        L742: $_b[1] = $_value;
        L743: $_b[2] = $_p;
        L744: $_cache[$_a] = $_b;
        L745: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L746: if ($_a === 566) { goto L566; } else if ($_a === 586) { goto L586; } else { return array(FALSE, NULL, 5); }
        L747: $_stack[++$_stack_sp] = "6@";
        L748: $_stack[$_stack_sp] .= $_p;
        L749: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L756; }
        L750: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L751: $_b = $_cache[$_a];
        L752: $_fail = $_b[0];
        L753: $_value = $_b[1];
        L754: $_p = $_b[2];
        L755: goto L811;
        L756: $_stack[++$_stack_sp] = $_env;
        L757: $_env = array();
        L758: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L759: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L760: $_stack[++$_stack_sp] = $_b;
        L761: $_stack[++$_stack_sp] = NULL;
        L762: $_stack[++$_stack_sp] = 764;
        L763: goto L813;
        L764: $_env["expression"] = $_value;
        L765: if ($_fail) { goto L799; }
        L766: $_stack[$_stack_sp] = $_value;
        L767: $_stack[++$_stack_sp] = $_p;
        L768: $_stack[++$_stack_sp] = $_p;
        L769: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L770: $_stack[++$_stack_sp] = $_b;
        L771: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "?") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"?"', $_expected)) { $_expected[] = '"?"'; } } }
        L772: if ($_fail) { goto L774; }
        L773: $_value = $this->_26($_env);
        L774: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L775: if (!$_fail) { goto L791; }
        L776: $_p = $_stack[$_stack_sp];
        L777: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L778: $_stack[++$_stack_sp] = $_b;
        L779: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "*") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*"', $_expected)) { $_expected[] = '"*"'; } } }
        L780: if ($_fail) { goto L782; }
        L781: $_value = $this->_27($_env);
        L782: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L783: if (!$_fail) { goto L791; }
        L784: $_p = $_stack[$_stack_sp];
        L785: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L786: $_stack[++$_stack_sp] = $_b;
        L787: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "+") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"+"', $_expected)) { $_expected[] = '"+"'; } } }
        L788: if ($_fail) { goto L790; }
        L789: $_value = $this->_28($_env);
        L790: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L791: unset($_stack[$_stack_sp--]);
        L792: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L793: if (!$_fail) { goto L797; }
        L794: $_fail = false;
        L795: $_value = NULL;
        L796: $_p = $_a;
        L797: $_env["suffix"] = $_value;
        L798: if ($_fail) { goto L799; }
        L799: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L800: if ($_fail) { goto L802; }
        L801: $_value = $this->_25($_env);
        L802: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L803: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L804: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L805: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L806: $_b = array();
        L807: $_b[0] = $_fail;
        L808: $_b[1] = $_value;
        L809: $_b[2] = $_p;
        L810: $_cache[$_a] = $_b;
        L811: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L812: if ($_a === 658) { goto L658; } else if ($_a === 674) { goto L674; } else if ($_a === 726) { goto L726; } else if ($_a === 736) { goto L736; } else { return array(FALSE, NULL, 6); }
        L813: $_stack[++$_stack_sp] = "7@";
        L814: $_stack[$_stack_sp] .= $_p;
        L815: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L822; }
        L816: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L817: $_b = $_cache[$_a];
        L818: $_fail = $_b[0];
        L819: $_value = $_b[1];
        L820: $_p = $_b[2];
        L821: goto L1065;
        L822: $_stack[++$_stack_sp] = $_env;
        L823: $_env = array();
        L824: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L825: $_stack[++$_stack_sp] = $_p;
        L826: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L827: $_stack[++$_stack_sp] = $_b;
        L828: $_stack[++$_stack_sp] = NULL;
        L829: $_stack[++$_stack_sp] = $_p;
        L830: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L831: $_stack[++$_stack_sp] = $_b;
        L832: $_stack[++$_stack_sp] = NULL;
        L833: $_stack[++$_stack_sp] = 835;
        L834: goto L1381;
        L835: $_env["name"] = $_value;
        L836: if ($_fail) { goto L840; }
        L837: $_stack[$_stack_sp] = $_value;
        L838: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L839: if ($_fail) { goto L840; }
        L840: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L841: if ($_fail) { goto L843; }
        L842: $_value = $this->_30($_env);
        L843: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L844: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L845: if (!$_fail) { goto L849; }
        L846: $_fail = false;
        L847: $_value = NULL;
        L848: $_p = $_a;
        L849: $_env["importname"] = $_value;
        L850: if ($_fail) { goto L946; }
        L851: $_stack[$_stack_sp] = $_value;
        L852: $_stack[++$_stack_sp] = 854;
        L853: goto L1381;
        L854: $_env["macroname"] = $_value;
        L855: if ($_fail) { goto L946; }
        L856: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L857: if ($_fail) { goto L946; }
        L858: $_stack[++$_stack_sp] = 860;
        L859: goto L1591;
        L860: if ($_fail) { goto L946; }
        L861: $_stack[++$_stack_sp] = $_p;
        L862: $_stack[++$_stack_sp] = $_env;
        L863: $_env = array();
        L864: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L865: $_stack[++$_stack_sp] = $_b;
        L866: $_stack[++$_stack_sp] = NULL;
        L867: $_stack[++$_stack_sp] = $_env;
        L868: $_env = array();
        L869: $_stack[++$_stack_sp] = 871;
        L870: goto L455;
        L871: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L872: $_env["first"] = $_value;
        L873: if ($_fail) { goto L916; }
        L874: $_stack[$_stack_sp] = $_value;
        L875: $_stack[++$_stack_sp] = $_p;
        L876: $_stack[++$_stack_sp] = array();
        L877: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L878: $_stack[++$_stack_sp] = $_b;
        L879: $_stack[++$_stack_sp] = NULL;
        L880: $_stack[++$_stack_sp] = $_env;
        L881: $_env = array();
        L882: $_stack[++$_stack_sp] = NULL;
        L883: $_stack[++$_stack_sp] = 885;
        L884: goto L1591;
        L885: if ($_fail) { goto L892; }
        L886: $_stack[$_stack_sp] = $_value;
        L887: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ",") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('","', $_expected)) { $_expected[] = '","'; } } }
        L888: if ($_fail) { goto L892; }
        L889: $_stack[++$_stack_sp] = 891;
        L890: goto L1591;
        L891: if ($_fail) { goto L892; }
        L892: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L893: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L894: if ($_fail) { goto L903; }
        L895: $_stack[$_stack_sp] = $_value;
        L896: $_stack[++$_stack_sp] = $_env;
        L897: $_env = array();
        L898: $_stack[++$_stack_sp] = 900;
        L899: goto L455;
        L900: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L901: $_env["next"] = $_value;
        L902: if ($_fail) { goto L903; }
        L903: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L904: if ($_fail) { goto L906; }
        L905: $_value = $this->_32($_env);
        L906: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L907: if ($_fail) { goto L911; }
        L908: $_stack[$_stack_sp][] = $_value;
        L909: $_stack[$_stack_sp - 1] = $_p;
        L910: goto L877;
        L911: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L912: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L913: $_fail = false;
        L914: $_env["rest"] = $_value;
        L915: if ($_fail) { goto L916; }
        L916: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L917: if ($_fail) { goto L919; }
        L918: $_value = $this->_31($_env);
        L919: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L920: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L921: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L922: if (!$_fail) { goto L926; }
        L923: $_fail = false;
        L924: $_value = NULL;
        L925: $_p = $_a;
        L926: $_env["arguments"] = $_value;
        L927: if ($_fail) { goto L946; }
        L928: $_stack[++$_stack_sp] = 930;
        L929: goto L1591;
        L930: if ($_fail) { goto L946; }
        L931: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ")") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('")"', $_expected)) { $_expected[] = '")"'; } } }
        L932: if ($_fail) { goto L946; }
        L933: $_stack[++$_stack_sp] = $_p;
        L934: $_stack[++$_stack_sp] = NULL;
        L935: $_stack[++$_stack_sp] = 937;
        L936: goto L1591;
        L937: if ($_fail) { goto L941; }
        L938: $_stack[$_stack_sp] = $_value;
        L939: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L940: if ($_fail) { goto L941; }
        L941: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L942: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L943: $_value = NULL;
        L944: $_fail = !$_fail;
        L945: if ($_fail) { goto L946; }
        L946: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L947: if ($_fail) { goto L949; }
        L948: $_value = $this->_29($_env);
        L949: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L950: if (!$_fail) { goto L1056; }
        L951: $_p = $_stack[$_stack_sp];
        L952: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L953: $_stack[++$_stack_sp] = $_b;
        L954: $_stack[++$_stack_sp] = NULL;
        L955: $_stack[++$_stack_sp] = $_p;
        L956: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L957: $_stack[++$_stack_sp] = $_b;
        L958: $_stack[++$_stack_sp] = NULL;
        L959: $_stack[++$_stack_sp] = 961;
        L960: goto L1381;
        L961: $_env["name"] = $_value;
        L962: if ($_fail) { goto L966; }
        L963: $_stack[$_stack_sp] = $_value;
        L964: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L965: if ($_fail) { goto L966; }
        L966: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L967: if ($_fail) { goto L969; }
        L968: $_value = $this->_34($_env);
        L969: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L970: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L971: if (!$_fail) { goto L975; }
        L972: $_fail = false;
        L973: $_value = NULL;
        L974: $_p = $_a;
        L975: $_env["importname"] = $_value;
        L976: if ($_fail) { goto L1000; }
        L977: $_stack[$_stack_sp] = $_value;
        L978: $_stack[++$_stack_sp] = 980;
        L979: goto L1381;
        L980: $_env["rulename"] = $_value;
        L981: if ($_fail) { goto L1000; }
        L982: $_stack[++$_stack_sp] = $_p;
        L983: $_stack[++$_stack_sp] = $_p;
        L984: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L985: if (!$_fail) { goto L995; }
        L986: $_p = $_stack[$_stack_sp];
        L987: $_stack[++$_stack_sp] = NULL;
        L988: $_stack[++$_stack_sp] = 990;
        L989: goto L1591;
        L990: if ($_fail) { goto L994; }
        L991: $_stack[$_stack_sp] = $_value;
        L992: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L993: if ($_fail) { goto L994; }
        L994: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L995: unset($_stack[$_stack_sp--]);
        L996: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L997: $_value = NULL;
        L998: $_fail = !$_fail;
        L999: if ($_fail) { goto L1000; }
        L1000: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1001: if ($_fail) { goto L1003; }
        L1002: $_value = $this->_33($_env);
        L1003: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1004: if (!$_fail) { goto L1056; }
        L1005: $_p = $_stack[$_stack_sp];
        L1006: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1007: $_stack[++$_stack_sp] = $_b;
        L1008: $_stack[++$_stack_sp] = NULL;
        L1009: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L1010: if ($_fail) { goto L1024; }
        L1011: $_stack[$_stack_sp] = $_value;
        L1012: $_stack[++$_stack_sp] = 1014;
        L1013: goto L1591;
        L1014: if ($_fail) { goto L1024; }
        L1015: $_stack[++$_stack_sp] = 1017;
        L1016: goto L455;
        L1017: $_env["expression"] = $_value;
        L1018: if ($_fail) { goto L1024; }
        L1019: $_stack[++$_stack_sp] = 1021;
        L1020: goto L1591;
        L1021: if ($_fail) { goto L1024; }
        L1022: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ")") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('")"', $_expected)) { $_expected[] = '")"'; } } }
        L1023: if ($_fail) { goto L1024; }
        L1024: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1025: if ($_fail) { goto L1027; }
        L1026: $_value = $this->_35($_env);
        L1027: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1028: if (!$_fail) { goto L1056; }
        L1029: $_p = $_stack[$_stack_sp];
        L1030: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1031: $_stack[++$_stack_sp] = $_b;
        L1032: $_stack[++$_stack_sp] = 1034;
        L1033: goto L1168;
        L1034: $_env["literal"] = $_value;
        L1035: if ($_fail) { goto L1037; }
        L1036: $_value = $this->_36($_env);
        L1037: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1038: if (!$_fail) { goto L1056; }
        L1039: $_p = $_stack[$_stack_sp];
        L1040: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1041: $_stack[++$_stack_sp] = $_b;
        L1042: $_stack[++$_stack_sp] = 1044;
        L1043: goto L1067;
        L1044: $_env["range"] = $_value;
        L1045: if ($_fail) { goto L1047; }
        L1046: $_value = $this->_37($_env);
        L1047: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1048: if (!$_fail) { goto L1056; }
        L1049: $_p = $_stack[$_stack_sp];
        L1050: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1051: $_stack[++$_stack_sp] = $_b;
        L1052: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L1053: if ($_fail) { goto L1055; }
        L1054: $_value = $this->_38($_env);
        L1055: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1056: unset($_stack[$_stack_sp--]);
        L1057: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1058: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1059: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1060: $_b = array();
        L1061: $_b[0] = $_fail;
        L1062: $_b[1] = $_value;
        L1063: $_b[2] = $_p;
        L1064: $_cache[$_a] = $_b;
        L1065: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1066: if ($_a !== 764) return array(FALSE, NULL, 7); goto L764;
        L1067: $_stack[++$_stack_sp] = "8@";
        L1068: $_stack[$_stack_sp] .= $_p;
        L1069: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1076; }
        L1070: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1071: $_b = $_cache[$_a];
        L1072: $_fail = $_b[0];
        L1073: $_value = $_b[1];
        L1074: $_p = $_b[2];
        L1075: goto L1166;
        L1076: $_stack[++$_stack_sp] = $_env;
        L1077: $_env = array();
        L1078: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1079: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1080: $_stack[++$_stack_sp] = $_b;
        L1081: $_stack[++$_stack_sp] = NULL;
        L1082: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "[") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"["', $_expected)) { $_expected[] = '"["'; } } }
        L1083: if ($_fail) { goto L1154; }
        L1084: $_stack[$_stack_sp] = $_value;
        L1085: $_stack[++$_stack_sp] = $_p;
        L1086: $_stack[++$_stack_sp] = array();
        L1087: $_stack[++$_stack_sp] = true;
        L1088: $_stack[++$_stack_sp] = $_p;
        L1089: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1090: $_stack[++$_stack_sp] = $_b;
        L1091: $_stack[++$_stack_sp] = NULL;
        L1092: $_stack[++$_stack_sp] = $_p;
        L1093: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L1094: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1095: $_value = NULL;
        L1096: $_fail = !$_fail;
        L1097: if ($_fail) { goto L1115; }
        L1098: $_stack[++$_stack_sp] = 1100;
        L1099: goto L1264;
        L1100: $_env["a"] = $_value;
        L1101: if ($_fail) { goto L1115; }
        L1102: $_stack[$_stack_sp] = $_value;
        L1103: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "-") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-"', $_expected)) { $_expected[] = '"-"'; } } }
        L1104: if ($_fail) { goto L1115; }
        L1105: $_stack[++$_stack_sp] = $_p;
        L1106: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L1107: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1108: $_value = NULL;
        L1109: $_fail = !$_fail;
        L1110: if ($_fail) { goto L1115; }
        L1111: $_stack[++$_stack_sp] = 1113;
        L1112: goto L1264;
        L1113: $_env["b"] = $_value;
        L1114: if ($_fail) { goto L1115; }
        L1115: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1116: if ($_fail) { goto L1118; }
        L1117: $_value = $this->_40($_env);
        L1118: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1119: if (!$_fail) { goto L1139; }
        L1120: $_p = $_stack[$_stack_sp];
        L1121: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1122: $_stack[++$_stack_sp] = $_b;
        L1123: $_stack[++$_stack_sp] = NULL;
        L1124: $_stack[++$_stack_sp] = $_p;
        L1125: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L1126: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1127: $_value = NULL;
        L1128: $_fail = !$_fail;
        L1129: if ($_fail) { goto L1135; }
        L1130: $_stack[++$_stack_sp] = 1132;
        L1131: goto L1264;
        L1132: $_env["c"] = $_value;
        L1133: if ($_fail) { goto L1135; }
        L1134: $_stack[$_stack_sp] = $_value;
        L1135: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1136: if ($_fail) { goto L1138; }
        L1137: $_value = $this->_41($_env);
        L1138: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1139: unset($_stack[$_stack_sp--]);
        L1140: if ($_fail) { goto L1145; }
        L1141: $_stack[$_stack_sp] = false;
        L1142: $_stack[$_stack_sp - 1][] = $_value;
        L1143: $_stack[$_stack_sp - 2] = $_p;
        L1144: goto L1088;
        L1145: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1146: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1147: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1148: if ($_a) { goto L1150; }
        L1149: $_fail = false;
        L1150: $_env["matches"] = $_value;
        L1151: if ($_fail) { goto L1154; }
        L1152: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L1153: if ($_fail) { goto L1154; }
        L1154: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1155: if ($_fail) { goto L1157; }
        L1156: $_value = $this->_39($_env);
        L1157: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1158: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1159: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1160: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1161: $_b = array();
        L1162: $_b[0] = $_fail;
        L1163: $_b[1] = $_value;
        L1164: $_b[2] = $_p;
        L1165: $_cache[$_a] = $_b;
        L1166: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1167: if ($_a !== 1044) return array(FALSE, NULL, 8); goto L1044;
        L1168: $_stack[++$_stack_sp] = "9@";
        L1169: $_stack[$_stack_sp] .= $_p;
        L1170: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1177; }
        L1171: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1172: $_b = $_cache[$_a];
        L1173: $_fail = $_b[0];
        L1174: $_value = $_b[1];
        L1175: $_p = $_b[2];
        L1176: goto L1262;
        L1177: $_stack[++$_stack_sp] = $_env;
        L1178: $_env = array();
        L1179: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1180: $_stack[++$_stack_sp] = $_p;
        L1181: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1182: $_stack[++$_stack_sp] = $_b;
        L1183: $_stack[++$_stack_sp] = NULL;
        L1184: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 34))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\"]', $_expected)) { $_expected[] = '[\\"]'; } } }
        L1185: if ($_fail) { goto L1212; }
        L1186: $_stack[$_stack_sp] = $_value;
        L1187: $_stack[++$_stack_sp] = $_p;
        L1188: $_stack[++$_stack_sp] = array();
        L1189: $_stack[++$_stack_sp] = NULL;
        L1190: $_stack[++$_stack_sp] = $_p;
        L1191: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 34))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\"]', $_expected)) { $_expected[] = '[\\"]'; } } }
        L1192: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1193: $_value = NULL;
        L1194: $_fail = !$_fail;
        L1195: if ($_fail) { goto L1200; }
        L1196: $_stack[++$_stack_sp] = 1198;
        L1197: goto L1264;
        L1198: if ($_fail) { goto L1200; }
        L1199: $_stack[$_stack_sp] = $_value;
        L1200: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1201: if ($_fail) { goto L1205; }
        L1202: $_stack[$_stack_sp][] = $_value;
        L1203: $_stack[$_stack_sp - 1] = $_p;
        L1204: goto L1189;
        L1205: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1206: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1207: $_fail = false;
        L1208: $_env["value"] = $_value;
        L1209: if ($_fail) { goto L1212; }
        L1210: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 34))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\"]', $_expected)) { $_expected[] = '[\\"]'; } } }
        L1211: if ($_fail) { goto L1212; }
        L1212: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1213: if ($_fail) { goto L1215; }
        L1214: $_value = $this->_42($_env);
        L1215: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1216: if (!$_fail) { goto L1253; }
        L1217: $_p = $_stack[$_stack_sp];
        L1218: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1219: $_stack[++$_stack_sp] = $_b;
        L1220: $_stack[++$_stack_sp] = NULL;
        L1221: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L1222: if ($_fail) { goto L1249; }
        L1223: $_stack[$_stack_sp] = $_value;
        L1224: $_stack[++$_stack_sp] = $_p;
        L1225: $_stack[++$_stack_sp] = array();
        L1226: $_stack[++$_stack_sp] = NULL;
        L1227: $_stack[++$_stack_sp] = $_p;
        L1228: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L1229: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1230: $_value = NULL;
        L1231: $_fail = !$_fail;
        L1232: if ($_fail) { goto L1237; }
        L1233: $_stack[++$_stack_sp] = 1235;
        L1234: goto L1264;
        L1235: if ($_fail) { goto L1237; }
        L1236: $_stack[$_stack_sp] = $_value;
        L1237: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1238: if ($_fail) { goto L1242; }
        L1239: $_stack[$_stack_sp][] = $_value;
        L1240: $_stack[$_stack_sp - 1] = $_p;
        L1241: goto L1226;
        L1242: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1243: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1244: $_fail = false;
        L1245: $_env["value"] = $_value;
        L1246: if ($_fail) { goto L1249; }
        L1247: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L1248: if ($_fail) { goto L1249; }
        L1249: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1250: if ($_fail) { goto L1252; }
        L1251: $_value = $this->_43($_env);
        L1252: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1253: unset($_stack[$_stack_sp--]);
        L1254: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1255: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1256: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1257: $_b = array();
        L1258: $_b[0] = $_fail;
        L1259: $_b[1] = $_value;
        L1260: $_b[2] = $_p;
        L1261: $_cache[$_a] = $_b;
        L1262: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1263: if ($_a === 291) { goto L291; } else if ($_a === 1034) { goto L1034; } else { return array(FALSE, NULL, 9); }
        L1264: $_stack[++$_stack_sp] = "10@";
        L1265: $_stack[$_stack_sp] .= $_p;
        L1266: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1273; }
        L1267: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1268: $_b = $_cache[$_a];
        L1269: $_fail = $_b[0];
        L1270: $_value = $_b[1];
        L1271: $_p = $_b[2];
        L1272: goto L1379;
        L1273: $_stack[++$_stack_sp] = $_env;
        L1274: $_env = array();
        L1275: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1276: $_stack[++$_stack_sp] = $_p;
        L1277: $_stack[++$_stack_sp] = "";
        L1278: $_stack[++$_stack_sp] = $_p;
        L1279: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\\") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\"', $_expected)) { $_expected[] = '"\\\\"'; } } }
        L1280: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1281: $_value = NULL;
        L1282: $_fail = !$_fail;
        L1283: if ($_fail) { goto L1288; }
        L1284: $_stack[$_stack_sp] .= $_value;
        L1285: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1286: if ($_fail) { goto L1288; }
        L1287: $_stack[$_stack_sp] .= $_value;
        L1288: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1289: if (!$_fail) { goto L1370; }
        L1290: $_p = $_stack[$_stack_sp];
        L1291: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1292: $_stack[++$_stack_sp] = $_b;
        L1293: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\n") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\n"', $_expected)) { $_expected[] = '"\\\\n"'; } } }
        L1294: if ($_fail) { goto L1296; }
        L1295: $_value = $this->_44($_env);
        L1296: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1297: if (!$_fail) { goto L1370; }
        L1298: $_p = $_stack[$_stack_sp];
        L1299: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1300: $_stack[++$_stack_sp] = $_b;
        L1301: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\r") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\r"', $_expected)) { $_expected[] = '"\\\\r"'; } } }
        L1302: if ($_fail) { goto L1304; }
        L1303: $_value = $this->_45($_env);
        L1304: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1305: if (!$_fail) { goto L1370; }
        L1306: $_p = $_stack[$_stack_sp];
        L1307: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1308: $_stack[++$_stack_sp] = $_b;
        L1309: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\t") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\t"', $_expected)) { $_expected[] = '"\\\\t"'; } } }
        L1310: if ($_fail) { goto L1312; }
        L1311: $_value = $this->_46($_env);
        L1312: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1313: if (!$_fail) { goto L1370; }
        L1314: $_p = $_stack[$_stack_sp];
        L1315: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1316: $_stack[++$_stack_sp] = $_b;
        L1317: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\\\") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\\\\\"', $_expected)) { $_expected[] = '"\\\\\\\\"'; } } }
        L1318: if ($_fail) { goto L1320; }
        L1319: $_value = $this->_47($_env);
        L1320: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1321: if (!$_fail) { goto L1370; }
        L1322: $_p = $_stack[$_stack_sp];
        L1323: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1324: $_stack[++$_stack_sp] = $_b;
        L1325: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\\"") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\\\""', $_expected)) { $_expected[] = '"\\\\\\""'; } } }
        L1326: if ($_fail) { goto L1328; }
        L1327: $_value = $this->_48($_env);
        L1328: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1329: if (!$_fail) { goto L1370; }
        L1330: $_p = $_stack[$_stack_sp];
        L1331: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1332: $_stack[++$_stack_sp] = $_b;
        L1333: $_stack[++$_stack_sp] = "";
        L1334: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\\") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\"', $_expected)) { $_expected[] = '"\\\\"'; } } }
        L1335: if ($_fail) { goto L1340; }
        L1336: $_stack[$_stack_sp] .= $_value;
        L1337: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L1338: if ($_fail) { goto L1340; }
        L1339: $_stack[$_stack_sp] .= $_value;
        L1340: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1341: if ($_fail) { goto L1343; }
        L1342: $_value = $this->_49($_env);
        L1343: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1344: if (!$_fail) { goto L1370; }
        L1345: $_p = $_stack[$_stack_sp];
        L1346: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1347: $_stack[++$_stack_sp] = $_b;
        L1348: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\]") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\]"', $_expected)) { $_expected[] = '"\\\\]"'; } } }
        L1349: if ($_fail) { goto L1351; }
        L1350: $_value = $this->_50($_env);
        L1351: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1352: if (!$_fail) { goto L1370; }
        L1353: $_p = $_stack[$_stack_sp];
        L1354: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1355: $_stack[++$_stack_sp] = $_b;
        L1356: $_stack[++$_stack_sp] = NULL;
        L1357: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\x") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\x"', $_expected)) { $_expected[] = '"\\\\x"'; } } }
        L1358: if ($_fail) { goto L1366; }
        L1359: $_stack[$_stack_sp] = $_value;
        L1360: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((48 <= $_a && $_a <= 57) || (97 <= $_a && $_a <= 102) || (65 <= $_a && $_a <= 70))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[0-9a-fA-F]', $_expected)) { $_expected[] = '[0-9a-fA-F]'; } } }
        L1361: $_env["a"] = $_value;
        L1362: if ($_fail) { goto L1366; }
        L1363: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((48 <= $_a && $_a <= 57) || (97 <= $_a && $_a <= 102) || (65 <= $_a && $_a <= 70))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[0-9a-fA-F]', $_expected)) { $_expected[] = '[0-9a-fA-F]'; } } }
        L1364: $_env["b"] = $_value;
        L1365: if ($_fail) { goto L1366; }
        L1366: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1367: if ($_fail) { goto L1369; }
        L1368: $_value = $this->_51($_env);
        L1369: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1370: unset($_stack[$_stack_sp--]);
        L1371: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1372: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1373: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1374: $_b = array();
        L1375: $_b[0] = $_fail;
        L1376: $_b[1] = $_value;
        L1377: $_b[2] = $_p;
        L1378: $_cache[$_a] = $_b;
        L1379: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1380: if ($_a === 1100) { goto L1100; } else if ($_a === 1113) { goto L1113; } else if ($_a === 1132) { goto L1132; } else if ($_a === 1198) { goto L1198; } else if ($_a === 1235) { goto L1235; } else { return array(FALSE, NULL, 10); }
        L1381: $_stack[++$_stack_sp] = "11@";
        L1382: $_stack[$_stack_sp] .= $_p;
        L1383: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1390; }
        L1384: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1385: $_b = $_cache[$_a];
        L1386: $_fail = $_b[0];
        L1387: $_value = $_b[1];
        L1388: $_p = $_b[2];
        L1389: goto L1418;
        L1390: $_stack[++$_stack_sp] = $_env;
        L1391: $_env = array();
        L1392: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1393: $_stack[++$_stack_sp] = "";
        L1394: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((97 <= $_a && $_a <= 122) || (65 <= $_a && $_a <= 90) || ($_a === 95))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[a-zA-Z_]', $_expected)) { $_expected[] = '[a-zA-Z_]'; } } }
        L1395: if ($_fail) { goto L1409; }
        L1396: $_stack[$_stack_sp] .= $_value;
        L1397: $_stack[++$_stack_sp] = $_p;
        L1398: $_stack[++$_stack_sp] = "";
        L1399: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((97 <= $_a && $_a <= 122) || (65 <= $_a && $_a <= 90) || (48 <= $_a && $_a <= 57) || ($_a === 95))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[a-zA-Z0-9_]', $_expected)) { $_expected[] = '[a-zA-Z0-9_]'; } } }
        L1400: if ($_fail) { goto L1404; }
        L1401: $_stack[$_stack_sp] .= $_value;
        L1402: $_stack[$_stack_sp - 1] = $_p;
        L1403: goto L1399;
        L1404: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1405: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1406: $_fail = false;
        L1407: if ($_fail) { goto L1409; }
        L1408: $_stack[$_stack_sp] .= $_value;
        L1409: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1410: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1411: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1412: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1413: $_b = array();
        L1414: $_b[0] = $_fail;
        L1415: $_b[1] = $_value;
        L1416: $_b[2] = $_p;
        L1417: $_cache[$_a] = $_b;
        L1418: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1419: if ($_a === 52) { goto L52; } else if ($_a === 72) { goto L72; } else if ($_a === 115) { goto L115; } else if ($_a === 229) { goto L229; } else if ($_a === 271) { goto L271; } else if ($_a === 370) { goto L370; } else if ($_a === 423) { goto L423; } else if ($_a === 703) { goto L703; } else if ($_a === 719) { goto L719; } else if ($_a === 835) { goto L835; } else if ($_a === 854) { goto L854; } else if ($_a === 961) { goto L961; } else if ($_a === 980) { goto L980; } else if ($_a === 1865) { goto L1865; } else if ($_a === 1894) { goto L1894; } else { return array(FALSE, NULL, 11); }
        L1420: $_stack[++$_stack_sp] = "12@";
        L1421: $_stack[$_stack_sp] .= $_p;
        L1422: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1429; }
        L1423: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1424: $_b = $_cache[$_a];
        L1425: $_fail = $_b[0];
        L1426: $_value = $_b[1];
        L1427: $_p = $_b[2];
        L1428: goto L1509;
        L1429: $_stack[++$_stack_sp] = $_env;
        L1430: $_env = array();
        L1431: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1432: $_stack[++$_stack_sp] = $_p;
        L1433: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1434: $_stack[++$_stack_sp] = $_b;
        L1435: $_stack[++$_stack_sp] = NULL;
        L1436: $_stack[++$_stack_sp] = $_p;
        L1437: $_stack[++$_stack_sp] = NULL;
        L1438: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "->") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"->"', $_expected)) { $_expected[] = '"->"'; } } }
        L1439: if ($_fail) { goto L1444; }
        L1440: $_stack[$_stack_sp] = $_value;
        L1441: $_stack[++$_stack_sp] = 1443;
        L1442: goto L1591;
        L1443: if ($_fail) { goto L1444; }
        L1444: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1445: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1446: if (!$_fail) { goto L1450; }
        L1447: $_fail = false;
        L1448: $_value = NULL;
        L1449: $_p = $_a;
        L1450: if ($_fail) { goto L1460; }
        L1451: $_stack[$_stack_sp] = $_value;
        L1452: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "{") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{"', $_expected)) { $_expected[] = '"{"'; } } }
        L1453: if ($_fail) { goto L1460; }
        L1454: $_stack[++$_stack_sp] = 1456;
        L1455: goto L1511;
        L1456: $_env["code"] = $_value;
        L1457: if ($_fail) { goto L1460; }
        L1458: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1459: if ($_fail) { goto L1460; }
        L1460: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1461: if ($_fail) { goto L1463; }
        L1462: $_value = $this->_52($_env);
        L1463: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1464: if (!$_fail) { goto L1500; }
        L1465: $_p = $_stack[$_stack_sp];
        L1466: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1467: $_stack[++$_stack_sp] = $_b;
        L1468: $_stack[++$_stack_sp] = NULL;
        L1469: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "->") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"->"', $_expected)) { $_expected[] = '"->"'; } } }
        L1470: if ($_fail) { goto L1496; }
        L1471: $_stack[$_stack_sp] = $_value;
        L1472: $_stack[++$_stack_sp] = $_p;
        L1473: $_stack[++$_stack_sp] = "";
        L1474: $_stack[++$_stack_sp] = "";
        L1475: $_stack[++$_stack_sp] = $_p;
        L1476: $_stack[++$_stack_sp] = 1478;
        L1477: goto L1793;
        L1478: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1479: $_value = NULL;
        L1480: $_fail = !$_fail;
        L1481: if ($_fail) { goto L1486; }
        L1482: $_stack[$_stack_sp] .= $_value;
        L1483: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1484: if ($_fail) { goto L1486; }
        L1485: $_stack[$_stack_sp] .= $_value;
        L1486: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1487: if ($_fail) { goto L1491; }
        L1488: $_stack[$_stack_sp] .= $_value;
        L1489: $_stack[$_stack_sp - 1] = $_p;
        L1490: goto L1474;
        L1491: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1492: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1493: $_fail = false;
        L1494: $_env["code"] = $_value;
        L1495: if ($_fail) { goto L1496; }
        L1496: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1497: if ($_fail) { goto L1499; }
        L1498: $_value = $this->_53($_env);
        L1499: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1500: unset($_stack[$_stack_sp--]);
        L1501: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1502: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1503: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1504: $_b = array();
        L1505: $_b[0] = $_fail;
        L1506: $_b[1] = $_value;
        L1507: $_b[2] = $_p;
        L1508: $_cache[$_a] = $_b;
        L1509: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1510: if ($_a === 137) { goto L137; } else if ($_a === 172) { goto L172; } else if ($_a === 207) { goto L207; } else if ($_a === 616) { goto L616; } else if ($_a === 690) { goto L690; } else { return array(FALSE, NULL, 12); }
        L1511: $_stack[++$_stack_sp] = "13@";
        L1512: $_stack[$_stack_sp] .= $_p;
        L1513: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1520; }
        L1514: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1515: $_b = $_cache[$_a];
        L1516: $_fail = $_b[0];
        L1517: $_value = $_b[1];
        L1518: $_p = $_b[2];
        L1519: goto L1589;
        L1520: $_stack[++$_stack_sp] = $_env;
        L1521: $_env = array();
        L1522: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1523: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1524: $_stack[++$_stack_sp] = $_b;
        L1525: $_stack[++$_stack_sp] = $_p;
        L1526: $_stack[++$_stack_sp] = array();
        L1527: $_stack[++$_stack_sp] = $_p;
        L1528: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1529: $_stack[++$_stack_sp] = $_b;
        L1530: $_stack[++$_stack_sp] = NULL;
        L1531: $_stack[++$_stack_sp] = $_p;
        L1532: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "{") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{"', $_expected)) { $_expected[] = '"{"'; } } }
        L1533: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1534: $_value = NULL;
        L1535: $_fail = !$_fail;
        L1536: if ($_fail) { goto L1547; }
        L1537: $_stack[++$_stack_sp] = $_p;
        L1538: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1539: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1540: $_value = NULL;
        L1541: $_fail = !$_fail;
        L1542: if ($_fail) { goto L1547; }
        L1543: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1544: $_env["c"] = $_value;
        L1545: if ($_fail) { goto L1547; }
        L1546: $_stack[$_stack_sp] = $_value;
        L1547: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1548: if ($_fail) { goto L1550; }
        L1549: $_value = $this->_55($_env);
        L1550: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1551: if (!$_fail) { goto L1569; }
        L1552: $_p = $_stack[$_stack_sp];
        L1553: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1554: $_stack[++$_stack_sp] = $_b;
        L1555: $_stack[++$_stack_sp] = NULL;
        L1556: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "{") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{"', $_expected)) { $_expected[] = '"{"'; } } }
        L1557: if ($_fail) { goto L1565; }
        L1558: $_stack[$_stack_sp] = $_value;
        L1559: $_stack[++$_stack_sp] = 1561;
        L1560: goto L1511;
        L1561: $_env["i"] = $_value;
        L1562: if ($_fail) { goto L1565; }
        L1563: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1564: if ($_fail) { goto L1565; }
        L1565: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1566: if ($_fail) { goto L1568; }
        L1567: $_value = $this->_56($_env);
        L1568: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1569: unset($_stack[$_stack_sp--]);
        L1570: if ($_fail) { goto L1574; }
        L1571: $_stack[$_stack_sp][] = $_value;
        L1572: $_stack[$_stack_sp - 1] = $_p;
        L1573: goto L1527;
        L1574: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1575: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1576: $_fail = false;
        L1577: $_env["inside"] = $_value;
        L1578: if ($_fail) { goto L1580; }
        L1579: $_value = $this->_54($_env);
        L1580: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1581: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1582: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1583: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1584: $_b = array();
        L1585: $_b[0] = $_fail;
        L1586: $_b[1] = $_value;
        L1587: $_b[2] = $_p;
        L1588: $_cache[$_a] = $_b;
        L1589: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1590: if ($_a === 1456) { goto L1456; } else if ($_a === 1561) { goto L1561; } else { return array(FALSE, NULL, 13); }
        L1591: $_stack[++$_stack_sp] = "14@";
        L1592: $_stack[$_stack_sp] .= $_p;
        L1593: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1600; }
        L1594: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1595: $_b = $_cache[$_a];
        L1596: $_fail = $_b[0];
        L1597: $_value = $_b[1];
        L1598: $_p = $_b[2];
        L1599: goto L1687;
        L1600: $_stack[++$_stack_sp] = $_env;
        L1601: $_env = array();
        L1602: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1603: $_stack[++$_stack_sp] = $_p;
        L1604: $_stack[++$_stack_sp] = "";
        L1605: $_stack[++$_stack_sp] = $_p;
        L1606: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 32) || ($_a === 9) || ($_a === 13) || ($_a === 10))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[ \\t\\r\\n]', $_expected)) { $_expected[] = '[ \\t\\r\\n]'; } } }
        L1607: if (!$_fail) { goto L1671; }
        L1608: $_p = $_stack[$_stack_sp];
        L1609: $_stack[++$_stack_sp] = "";
        L1610: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "//") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"//"', $_expected)) { $_expected[] = '"//"'; } } }
        L1611: if ($_fail) { goto L1637; }
        L1612: $_stack[$_stack_sp] .= $_value;
        L1613: $_stack[++$_stack_sp] = $_p;
        L1614: $_stack[++$_stack_sp] = "";
        L1615: $_stack[++$_stack_sp] = "";
        L1616: $_stack[++$_stack_sp] = $_p;
        L1617: $_stack[++$_stack_sp] = 1619;
        L1618: goto L1793;
        L1619: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1620: $_value = NULL;
        L1621: $_fail = !$_fail;
        L1622: if ($_fail) { goto L1627; }
        L1623: $_stack[$_stack_sp] .= $_value;
        L1624: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1625: if ($_fail) { goto L1627; }
        L1626: $_stack[$_stack_sp] .= $_value;
        L1627: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1628: if ($_fail) { goto L1632; }
        L1629: $_stack[$_stack_sp] .= $_value;
        L1630: $_stack[$_stack_sp - 1] = $_p;
        L1631: goto L1615;
        L1632: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1633: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1634: $_fail = false;
        L1635: if ($_fail) { goto L1637; }
        L1636: $_stack[$_stack_sp] .= $_value;
        L1637: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1638: if (!$_fail) { goto L1671; }
        L1639: $_p = $_stack[$_stack_sp];
        L1640: $_stack[++$_stack_sp] = "";
        L1641: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "/*") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"/*"', $_expected)) { $_expected[] = '"/*"'; } } }
        L1642: if ($_fail) { goto L1670; }
        L1643: $_stack[$_stack_sp] .= $_value;
        L1644: $_stack[++$_stack_sp] = $_p;
        L1645: $_stack[++$_stack_sp] = "";
        L1646: $_stack[++$_stack_sp] = "";
        L1647: $_stack[++$_stack_sp] = $_p;
        L1648: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L1649: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1650: $_value = NULL;
        L1651: $_fail = !$_fail;
        L1652: if ($_fail) { goto L1657; }
        L1653: $_stack[$_stack_sp] .= $_value;
        L1654: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1655: if ($_fail) { goto L1657; }
        L1656: $_stack[$_stack_sp] .= $_value;
        L1657: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1658: if ($_fail) { goto L1662; }
        L1659: $_stack[$_stack_sp] .= $_value;
        L1660: $_stack[$_stack_sp - 1] = $_p;
        L1661: goto L1646;
        L1662: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1663: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1664: $_fail = false;
        L1665: if ($_fail) { goto L1670; }
        L1666: $_stack[$_stack_sp] .= $_value;
        L1667: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L1668: if ($_fail) { goto L1670; }
        L1669: $_stack[$_stack_sp] .= $_value;
        L1670: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1671: unset($_stack[$_stack_sp--]);
        L1672: if ($_fail) { goto L1676; }
        L1673: $_stack[$_stack_sp] .= $_value;
        L1674: $_stack[$_stack_sp - 1] = $_p;
        L1675: goto L1605;
        L1676: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1677: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1678: $_fail = false;
        L1679: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1680: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1681: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1682: $_b = array();
        L1683: $_b[0] = $_fail;
        L1684: $_b[1] = $_value;
        L1685: $_b[2] = $_p;
        L1686: $_cache[$_a] = $_b;
        L1687: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1688: if ($_a === 29) { goto L29; } else if ($_a === 97) { goto L97; } else if ($_a === 119) { goto L119; } else if ($_a === 134) { goto L134; } else if ($_a === 141) { goto L141; } else if ($_a === 156) { goto L156; } else if ($_a === 169) { goto L169; } else if ($_a === 176) { goto L176; } else if ($_a === 191) { goto L191; } else if ($_a === 204) { goto L204; } else if ($_a === 211) { goto L211; } else if ($_a === 226) { goto L226; } else if ($_a === 233) { goto L233; } else if ($_a === 295) { goto L295; } else if ($_a === 379) { goto L379; } else if ($_a === 384) { goto L384; } else if ($_a === 391) { goto L391; } else if ($_a === 428) { goto L428; } else if ($_a === 433) { goto L433; } else if ($_a === 440) { goto L440; } else if ($_a === 492) { goto L492; } else if ($_a === 498) { goto L498; } else if ($_a === 612) { goto L612; } else if ($_a === 860) { goto L860; } else if ($_a === 885) { goto L885; } else if ($_a === 891) { goto L891; } else if ($_a === 930) { goto L930; } else if ($_a === 937) { goto L937; } else if ($_a === 990) { goto L990; } else if ($_a === 1014) { goto L1014; } else if ($_a === 1021) { goto L1021; } else if ($_a === 1443) { goto L1443; } else if ($_a === 1854) { goto L1854; } else if ($_a === 1879) { goto L1879; } else if ($_a === 1885) { goto L1885; } else if ($_a === 1924) { goto L1924; } else { return array(FALSE, NULL, 14); }
        L1689: $_stack[++$_stack_sp] = "15@";
        L1690: $_stack[$_stack_sp] .= $_p;
        L1691: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1698; }
        L1692: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1693: $_b = $_cache[$_a];
        L1694: $_fail = $_b[0];
        L1695: $_value = $_b[1];
        L1696: $_p = $_b[2];
        L1697: goto L1791;
        L1698: $_stack[++$_stack_sp] = $_env;
        L1699: $_env = array();
        L1700: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1701: $_stack[++$_stack_sp] = $_p;
        L1702: $_stack[++$_stack_sp] = array();
        L1703: $_stack[++$_stack_sp] = true;
        L1704: $_stack[++$_stack_sp] = $_p;
        L1705: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 32) || ($_a === 9) || ($_a === 13) || ($_a === 10))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[ \\t\\r\\n]', $_expected)) { $_expected[] = '[ \\t\\r\\n]'; } } }
        L1706: if (!$_fail) { goto L1772; }
        L1707: $_p = $_stack[$_stack_sp];
        L1708: $_stack[++$_stack_sp] = NULL;
        L1709: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "//") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"//"', $_expected)) { $_expected[] = '"//"'; } } }
        L1710: if ($_fail) { goto L1738; }
        L1711: $_stack[$_stack_sp] = $_value;
        L1712: $_stack[++$_stack_sp] = $_p;
        L1713: $_stack[++$_stack_sp] = "";
        L1714: $_stack[++$_stack_sp] = "";
        L1715: $_stack[++$_stack_sp] = $_p;
        L1716: $_stack[++$_stack_sp] = 1718;
        L1717: goto L1793;
        L1718: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1719: $_value = NULL;
        L1720: $_fail = !$_fail;
        L1721: if ($_fail) { goto L1726; }
        L1722: $_stack[$_stack_sp] .= $_value;
        L1723: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1724: if ($_fail) { goto L1726; }
        L1725: $_stack[$_stack_sp] .= $_value;
        L1726: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1727: if ($_fail) { goto L1731; }
        L1728: $_stack[$_stack_sp] .= $_value;
        L1729: $_stack[$_stack_sp - 1] = $_p;
        L1730: goto L1714;
        L1731: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1732: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1733: $_fail = false;
        L1734: if ($_fail) { goto L1738; }
        L1735: $_stack[++$_stack_sp] = 1737;
        L1736: goto L1793;
        L1737: if ($_fail) { goto L1738; }
        L1738: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1739: if (!$_fail) { goto L1772; }
        L1740: $_p = $_stack[$_stack_sp];
        L1741: $_stack[++$_stack_sp] = "";
        L1742: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "/*") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"/*"', $_expected)) { $_expected[] = '"/*"'; } } }
        L1743: if ($_fail) { goto L1771; }
        L1744: $_stack[$_stack_sp] .= $_value;
        L1745: $_stack[++$_stack_sp] = $_p;
        L1746: $_stack[++$_stack_sp] = "";
        L1747: $_stack[++$_stack_sp] = "";
        L1748: $_stack[++$_stack_sp] = $_p;
        L1749: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L1750: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1751: $_value = NULL;
        L1752: $_fail = !$_fail;
        L1753: if ($_fail) { goto L1758; }
        L1754: $_stack[$_stack_sp] .= $_value;
        L1755: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1756: if ($_fail) { goto L1758; }
        L1757: $_stack[$_stack_sp] .= $_value;
        L1758: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1759: if ($_fail) { goto L1763; }
        L1760: $_stack[$_stack_sp] .= $_value;
        L1761: $_stack[$_stack_sp - 1] = $_p;
        L1762: goto L1747;
        L1763: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1764: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1765: $_fail = false;
        L1766: if ($_fail) { goto L1771; }
        L1767: $_stack[$_stack_sp] .= $_value;
        L1768: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L1769: if ($_fail) { goto L1771; }
        L1770: $_stack[$_stack_sp] .= $_value;
        L1771: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1772: unset($_stack[$_stack_sp--]);
        L1773: if ($_fail) { goto L1778; }
        L1774: $_stack[$_stack_sp] = false;
        L1775: $_stack[$_stack_sp - 1][] = $_value;
        L1776: $_stack[$_stack_sp - 2] = $_p;
        L1777: goto L1704;
        L1778: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1779: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1780: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1781: if ($_a) { goto L1783; }
        L1782: $_fail = false;
        L1783: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1784: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1785: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1786: $_b = array();
        L1787: $_b[0] = $_fail;
        L1788: $_b[1] = $_value;
        L1789: $_b[2] = $_p;
        L1790: $_cache[$_a] = $_b;
        L1791: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1792: if ($_a === 42) { goto L42; } else if ($_a === 112) { goto L112; } else if ($_a === 248) { goto L248; } else if ($_a === 259) { goto L259; } else if ($_a === 276) { goto L276; } else if ($_a === 579) { goto L579; } else { return array(FALSE, NULL, 15); }
        L1793: $_stack[++$_stack_sp] = "16@";
        L1794: $_stack[$_stack_sp] .= $_p;
        L1795: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1802; }
        L1796: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1797: $_b = $_cache[$_a];
        L1798: $_fail = $_b[0];
        L1799: $_value = $_b[1];
        L1800: $_p = $_b[2];
        L1801: goto L1832;
        L1802: $_stack[++$_stack_sp] = $_env;
        L1803: $_env = array();
        L1804: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1805: $_stack[++$_stack_sp] = $_p;
        L1806: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\n") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\n"', $_expected)) { $_expected[] = '"\\n"'; } } }
        L1807: if (!$_fail) { goto L1823; }
        L1808: $_p = $_stack[$_stack_sp];
        L1809: $_stack[++$_stack_sp] = "";
        L1810: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\r") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\r"', $_expected)) { $_expected[] = '"\\r"'; } } }
        L1811: if ($_fail) { goto L1822; }
        L1812: $_stack[$_stack_sp] .= $_value;
        L1813: $_stack[++$_stack_sp] = $_p;
        L1814: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\n") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\n"', $_expected)) { $_expected[] = '"\\n"'; } } }
        L1815: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1816: if (!$_fail) { goto L1820; }
        L1817: $_fail = false;
        L1818: $_value = NULL;
        L1819: $_p = $_a;
        L1820: if ($_fail) { goto L1822; }
        L1821: $_stack[$_stack_sp] .= $_value;
        L1822: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1823: unset($_stack[$_stack_sp--]);
        L1824: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1825: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1826: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1827: $_b = array();
        L1828: $_b[0] = $_fail;
        L1829: $_b[1] = $_value;
        L1830: $_b[2] = $_p;
        L1831: $_cache[$_a] = $_b;
        L1832: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1833: if ($_a === 1478) { goto L1478; } else if ($_a === 1619) { goto L1619; } else if ($_a === 1718) { goto L1718; } else if ($_a === 1737) { goto L1737; } else { return array(FALSE, NULL, 16); }
        L1834: $_stack[++$_stack_sp] = "17@";
        L1835: $_stack[$_stack_sp] .= $_p;
        L1836: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1843; }
        L1837: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1838: $_b = $_cache[$_a];
        L1839: $_fail = $_b[0];
        L1840: $_value = $_b[1];
        L1841: $_p = $_b[2];
        L1842: goto L1939;
        L1843: $_stack[++$_stack_sp] = $_env;
        L1844: $_env = array();
        L1845: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1846: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1847: $_stack[++$_stack_sp] = $_b;
        L1848: $_stack[++$_stack_sp] = NULL;
        L1849: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L1850: if ($_fail) { goto L1927; }
        L1851: $_stack[$_stack_sp] = $_value;
        L1852: $_stack[++$_stack_sp] = 1854;
        L1853: goto L1591;
        L1854: if ($_fail) { goto L1927; }
        L1855: $_stack[++$_stack_sp] = $_p;
        L1856: $_stack[++$_stack_sp] = $_env;
        L1857: $_env = array();
        L1858: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1859: $_stack[++$_stack_sp] = $_b;
        L1860: $_stack[++$_stack_sp] = NULL;
        L1861: $_stack[++$_stack_sp] = $_env;
        L1862: $_env = array();
        L1863: $_stack[++$_stack_sp] = 1865;
        L1864: goto L1381;
        L1865: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1866: $_env["first"] = $_value;
        L1867: if ($_fail) { goto L1910; }
        L1868: $_stack[$_stack_sp] = $_value;
        L1869: $_stack[++$_stack_sp] = $_p;
        L1870: $_stack[++$_stack_sp] = array();
        L1871: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1872: $_stack[++$_stack_sp] = $_b;
        L1873: $_stack[++$_stack_sp] = NULL;
        L1874: $_stack[++$_stack_sp] = $_env;
        L1875: $_env = array();
        L1876: $_stack[++$_stack_sp] = NULL;
        L1877: $_stack[++$_stack_sp] = 1879;
        L1878: goto L1591;
        L1879: if ($_fail) { goto L1886; }
        L1880: $_stack[$_stack_sp] = $_value;
        L1881: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ",") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('","', $_expected)) { $_expected[] = '","'; } } }
        L1882: if ($_fail) { goto L1886; }
        L1883: $_stack[++$_stack_sp] = 1885;
        L1884: goto L1591;
        L1885: if ($_fail) { goto L1886; }
        L1886: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1887: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1888: if ($_fail) { goto L1897; }
        L1889: $_stack[$_stack_sp] = $_value;
        L1890: $_stack[++$_stack_sp] = $_env;
        L1891: $_env = array();
        L1892: $_stack[++$_stack_sp] = 1894;
        L1893: goto L1381;
        L1894: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1895: $_env["next"] = $_value;
        L1896: if ($_fail) { goto L1897; }
        L1897: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1898: if ($_fail) { goto L1900; }
        L1899: $_value = $this->_59($_env);
        L1900: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1901: if ($_fail) { goto L1905; }
        L1902: $_stack[$_stack_sp][] = $_value;
        L1903: $_stack[$_stack_sp - 1] = $_p;
        L1904: goto L1871;
        L1905: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1906: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1907: $_fail = false;
        L1908: $_env["rest"] = $_value;
        L1909: if ($_fail) { goto L1910; }
        L1910: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1911: if ($_fail) { goto L1913; }
        L1912: $_value = $this->_58($_env);
        L1913: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1914: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1915: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1916: if (!$_fail) { goto L1920; }
        L1917: $_fail = false;
        L1918: $_value = NULL;
        L1919: $_p = $_a;
        L1920: $_env["parameters"] = $_value;
        L1921: if ($_fail) { goto L1927; }
        L1922: $_stack[++$_stack_sp] = 1924;
        L1923: goto L1591;
        L1924: if ($_fail) { goto L1927; }
        L1925: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ")") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('")"', $_expected)) { $_expected[] = '")"'; } } }
        L1926: if ($_fail) { goto L1927; }
        L1927: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1928: if ($_fail) { goto L1930; }
        L1929: $_value = $this->_57($_env);
        L1930: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1931: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1932: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1933: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1934: $_b = array();
        L1935: $_b[0] = $_fail;
        L1936: $_b[1] = $_value;
        L1937: $_b[2] = $_p;
        L1938: $_cache[$_a] = $_b;
        L1939: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1940: if ($_a === 160) { goto L160; } else if ($_a === 195) { goto L195; } else if ($_a === 375) { goto L375; } else { return array(FALSE, NULL, 17); }
        Lend:
        list($ok, $result) = array(!$_fail, $_value);
        if (!$ok) {
            $before = str_replace(array("\r\n", "\r"), "\n", substr($_s, 0, $_maxp));
            $after = str_replace(array("\r\n", "\r"), "\n", substr($_s, $_maxp));
            $line = 1;
            if (($pos = strrpos($before, "\n")) !== FALSE) {
                $line = substr_count($before, "\n") + 1;
                $before = (string) substr($before, $pos + 1);
            }
            if (($pos = strpos($after, "\n")) !== FALSE) {
                $after = substr($after, 0, $pos);
            }
            return array(FALSE, NULL, (object) array('position' => $_maxp, 'line' => $line, 'column' => strlen($before) + 1, 'context' => $before . $after, 'expected' => $_expected));
        }
        return array(TRUE, $result, NULL);
    }
    private function _0() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("phpeg", array_merge($declarations, $definitions));
    
    }
    private function _1() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("namespace", $namespace);
    
    }
    private function _2() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $first . implode("", $rest);
    
    }
    private function _3() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $s . $next;
    
    }
    private function _4() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("name", $name);
    
    }
    private function _5() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("init", $code);
    
    }
    private function _6() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("invoke", (array) $parameters, $code);
    
    }
    private function _7() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("constructor", (array) $parameters, $code);
    
    }
    private function _8() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("private", $name);
    
    }
    private function _9() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("import", $spec, $path);
    
    }
    private function _10() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return TRUE;
    
    }
    private function _11() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $name;
    
    }
    private function _12() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("macro", $name, $parameters, $expression);
    
    }
    private function _13() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("rule", $name, $expression);
    
    }
    private function _14() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        if (count($expressions) < 2) {
                    return $expressions[0];
                } else {
                    return array("first", $expressions);
                }
            
    
    }
    private function _15() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array_merge(array($first), $rest);
    
    }
    private function _16() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $next;
    
    }
    private function _17() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $ret = count($expressions) < 2
                       ? $expressions[0]
                       : array("all", $expressions);
        
                if ($action) {
                    $ret = array("action", $ret, $action);
                }
        
                return $ret;
            
    
    }
    private function _18() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array_merge(array($first), $rest);
    
    }
    private function _19() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $next;
    
    }
    private function _20() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("and", $expression);
    
    }
    private function _21() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("not", $expression);
    
    }
    private function _22() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("semantic_predicate", $code);
    
    }
    private function _23() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("bind", $varname, array("position"));
    
    }
    private function _24() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("bind", $varname, $expression);
    
    }
    private function _25() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $suffix ? array($suffix, $expression) : $expression;
    
    }
    private function _26() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "optional";
    
    }
    private function _27() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "zero_or_more";
    
    }
    private function _28() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "one_or_more";
    
    }
    private function _29() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("expand", $importname ? array($importname, $macroname) : $macroname, (array) $arguments);
    
    }
    private function _30() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $name;
    
    }
    private function _31() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array_merge(array($first), $rest);
    
    }
    private function _32() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $next;
    
    }
    private function _33() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("apply", $importname ? array($importname, $rulename) : $rulename);
    
    }
    private function _34() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $name;
    
    }
    private function _35() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $expression;
    
    }
    private function _36() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("literal", $literal);
    
    }
    private function _37() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("range", $range);
    
    }
    private function _38() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("any");
    
    }
    private function _39() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $matches;
    
    }
    private function _40() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array(ord($a), ord($b));
    
    }
    private function _41() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return ord($c);
    
    }
    private function _42() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return implode("", $value);
    
    }
    private function _43() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return implode("", $value);
    
    }
    private function _44() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\n";
    
    }
    private function _45() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\r";
    
    }
    private function _46() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\t";
    
    }
    private function _47() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\\";
    
    }
    private function _48() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return '"';
    
    }
    private function _49() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "'";
    
    }
    private function _50() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return ']';
    
    }
    private function _51() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return chr(hexdec($a . $b));
    
    }
    private function _52() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return ltrim($code);
    
    }
    private function _53() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "return " . trim($code) . ";";
    
    }
    private function _54() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return implode("", $inside);
    
    }
    private function _55() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $c;
    
    }
    private function _56() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "{" . $i . "}";
    
    }
    private function _57() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return (array) $parameters;
    
    }
    private function _58() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array_merge(array($first), $rest);
    
    }
    private function _59() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $next;
    
    }
}
