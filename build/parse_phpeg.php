<?php
// autogenerated file, do not edit!
class parse_phpeg {
    
    private $_environments = array(-1 => array());
    private $_environment_stack = array();
    private $_environment_stack_sp = -1;
    public function __construct() {
        
    }
    
    public function __invoke($s) {
    foreach ($this->_environments as $_env) { extract($_env, EXTR_OVERWRITE | EXTR_REFS); }
        return $this->parse($s);
    }
    
    public function parse($_s) {
        $_addr = 0;
        $_maxp = $_p = 0;
        $_expected = array();
        L0: $_stack_sp = -1; $_stack = array();
        L1: $_fail = false;
        L2: $_value = NULL;
        L3: $_cache = array();
        L4: $_a = NULL;
        L5: $_b = NULL;
        L6: $_c = NULL;
        L7: $_d = NULL;
        L8: $_env = array();
        L9: $_stack[++$_stack_sp] = 11;
        L10: goto L12;
        L11: goto Lend;
        L12: $_stack[++$_stack_sp] = "0@";
        L13: $_stack[$_stack_sp] .= $_p;
        L14: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L21; }
        L15: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L16: $_b = $_cache[$_a];
        L17: $_fail = $_b[0];
        L18: $_value = $_b[1];
        L19: $_p = $_b[2];
        L20: goto L294;
        L21: $_stack[++$_stack_sp] = $_env;
        L22: $_env = array();
        L23: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L24: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L25: $_stack[++$_stack_sp] = $_b;
        L26: $_stack[++$_stack_sp] = NULL;
        L27: $_stack[++$_stack_sp] = 29;
        L28: goto L1534;
        L29: if ($_fail) { goto L282; }
        L30: $_stack[$_stack_sp] = $_value;
        L31: $_stack[++$_stack_sp] = $_p;
        L32: $_stack[++$_stack_sp] = array();
        L33: $_stack[++$_stack_sp] = $_p;
        L34: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L35: $_stack[++$_stack_sp] = $_b;
        L36: $_stack[++$_stack_sp] = NULL;
        L37: $_fail = TRUE; if (($_a = substr($_s, $_p, 10)) === "-namespace") { $_fail = FALSE; $_value = $_a; $_p += 10; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-namespace"', $_expected)) { $_expected[] = '"-namespace"'; } } }
        L38: if ($_fail) { goto L98; }
        L39: $_stack[$_stack_sp] = $_value;
        L40: $_stack[++$_stack_sp] = 42;
        L41: goto L1632;
        L42: if ($_fail) { goto L98; }
        L43: $_stack[++$_stack_sp] = $_env;
        L44: $_env = array();
        L45: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L46: $_stack[++$_stack_sp] = $_b;
        L47: $_stack[++$_stack_sp] = NULL;
        L48: $_stack[++$_stack_sp] = $_env;
        L49: $_env = array();
        L50: $_stack[++$_stack_sp] = 52;
        L51: goto L1324;
        L52: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L53: $_env["first"] = $_value;
        L54: if ($_fail) { goto L88; }
        L55: $_stack[$_stack_sp] = $_value;
        L56: $_stack[++$_stack_sp] = $_p;
        L57: $_stack[++$_stack_sp] = array();
        L58: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L59: $_stack[++$_stack_sp] = $_b;
        L60: $_stack[++$_stack_sp] = NULL;
        L61: $_stack[++$_stack_sp] = $_env;
        L62: $_env = array();
        L63: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\\") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\"', $_expected)) { $_expected[] = '"\\\\"'; } } }
        L64: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L65: $_env["s"] = $_value;
        L66: if ($_fail) { goto L75; }
        L67: $_stack[$_stack_sp] = $_value;
        L68: $_stack[++$_stack_sp] = $_env;
        L69: $_env = array();
        L70: $_stack[++$_stack_sp] = 72;
        L71: goto L1324;
        L72: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L73: $_env["next"] = $_value;
        L74: if ($_fail) { goto L75; }
        L75: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L76: if ($_fail) { goto L78; }
        L77: $_value = $this->_3($_env);
        L78: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L79: if ($_fail) { goto L83; }
        L80: $_stack[$_stack_sp][] = $_value;
        L81: $_stack[$_stack_sp - 1] = $_p;
        L82: goto L58;
        L83: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L84: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L85: $_fail = false;
        L86: $_env["rest"] = $_value;
        L87: if ($_fail) { goto L88; }
        L88: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L89: if ($_fail) { goto L91; }
        L90: $_value = $this->_2($_env);
        L91: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L92: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L93: $_env["namespace"] = $_value;
        L94: if ($_fail) { goto L98; }
        L95: $_stack[++$_stack_sp] = 97;
        L96: goto L1534;
        L97: if ($_fail) { goto L98; }
        L98: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L99: if ($_fail) { goto L101; }
        L100: $_value = $this->_1($_env);
        L101: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L102: if (!$_fail) { goto L243; }
        L103: $_p = $_stack[$_stack_sp];
        L104: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L105: $_stack[++$_stack_sp] = $_b;
        L106: $_stack[++$_stack_sp] = NULL;
        L107: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "-name") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-name"', $_expected)) { $_expected[] = '"-name"'; } } }
        L108: if ($_fail) { goto L120; }
        L109: $_stack[$_stack_sp] = $_value;
        L110: $_stack[++$_stack_sp] = 112;
        L111: goto L1632;
        L112: if ($_fail) { goto L120; }
        L113: $_stack[++$_stack_sp] = 115;
        L114: goto L1324;
        L115: $_env["name"] = $_value;
        L116: if ($_fail) { goto L120; }
        L117: $_stack[++$_stack_sp] = 119;
        L118: goto L1534;
        L119: if ($_fail) { goto L120; }
        L120: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L121: if ($_fail) { goto L123; }
        L122: $_value = $this->_4($_env);
        L123: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L124: if (!$_fail) { goto L243; }
        L125: $_p = $_stack[$_stack_sp];
        L126: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L127: $_stack[++$_stack_sp] = $_b;
        L128: $_stack[++$_stack_sp] = NULL;
        L129: $_fail = TRUE; if (($_a = substr($_s, $_p, 5)) === "-init") { $_fail = FALSE; $_value = $_a; $_p += 5; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-init"', $_expected)) { $_expected[] = '"-init"'; } } }
        L130: if ($_fail) { goto L142; }
        L131: $_stack[$_stack_sp] = $_value;
        L132: $_stack[++$_stack_sp] = 134;
        L133: goto L1534;
        L134: if ($_fail) { goto L142; }
        L135: $_stack[++$_stack_sp] = 137;
        L136: goto L1363;
        L137: $_env["code"] = $_value;
        L138: if ($_fail) { goto L142; }
        L139: $_stack[++$_stack_sp] = 141;
        L140: goto L1534;
        L141: if ($_fail) { goto L142; }
        L142: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L143: if ($_fail) { goto L145; }
        L144: $_value = $this->_5($_env);
        L145: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L146: if (!$_fail) { goto L243; }
        L147: $_p = $_stack[$_stack_sp];
        L148: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L149: $_stack[++$_stack_sp] = $_b;
        L150: $_stack[++$_stack_sp] = NULL;
        L151: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "-invoke") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-invoke"', $_expected)) { $_expected[] = '"-invoke"'; } } }
        L152: if ($_fail) { goto L177; }
        L153: $_stack[$_stack_sp] = $_value;
        L154: $_stack[++$_stack_sp] = 156;
        L155: goto L1534;
        L156: if ($_fail) { goto L177; }
        L157: $_stack[++$_stack_sp] = $_p;
        L158: $_stack[++$_stack_sp] = 160;
        L159: goto L1777;
        L160: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L161: if (!$_fail) { goto L165; }
        L162: $_fail = false;
        L163: $_value = NULL;
        L164: $_p = $_a;
        L165: $_env["parameters"] = $_value;
        L166: if ($_fail) { goto L177; }
        L167: $_stack[++$_stack_sp] = 169;
        L168: goto L1534;
        L169: if ($_fail) { goto L177; }
        L170: $_stack[++$_stack_sp] = 172;
        L171: goto L1363;
        L172: $_env["code"] = $_value;
        L173: if ($_fail) { goto L177; }
        L174: $_stack[++$_stack_sp] = 176;
        L175: goto L1534;
        L176: if ($_fail) { goto L177; }
        L177: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L178: if ($_fail) { goto L180; }
        L179: $_value = $this->_6($_env);
        L180: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L181: if (!$_fail) { goto L243; }
        L182: $_p = $_stack[$_stack_sp];
        L183: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L184: $_stack[++$_stack_sp] = $_b;
        L185: $_stack[++$_stack_sp] = NULL;
        L186: $_fail = TRUE; if (($_a = substr($_s, $_p, 7)) === "-import") { $_fail = FALSE; $_value = $_a; $_p += 7; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-import"', $_expected)) { $_expected[] = '"-import"'; } } }
        L187: if ($_fail) { goto L239; }
        L188: $_stack[$_stack_sp] = $_value;
        L189: $_stack[++$_stack_sp] = 191;
        L190: goto L1632;
        L191: if ($_fail) { goto L239; }
        L192: $_stack[++$_stack_sp] = $_p;
        L193: $_stack[++$_stack_sp] = $_p;
        L194: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L195: $_stack[++$_stack_sp] = $_b;
        L196: $_stack[++$_stack_sp] = NULL;
        L197: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L198: if ($_fail) { goto L203; }
        L199: $_stack[$_stack_sp] = $_value;
        L200: $_stack[++$_stack_sp] = 202;
        L201: goto L1632;
        L202: if ($_fail) { goto L203; }
        L203: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L204: if ($_fail) { goto L206; }
        L205: $_value = $this->_8($_env);
        L206: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L207: if (!$_fail) { goto L224; }
        L208: $_p = $_stack[$_stack_sp];
        L209: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L210: $_stack[++$_stack_sp] = $_b;
        L211: $_stack[++$_stack_sp] = NULL;
        L212: $_stack[++$_stack_sp] = 214;
        L213: goto L1324;
        L214: $_env["name"] = $_value;
        L215: if ($_fail) { goto L220; }
        L216: $_stack[$_stack_sp] = $_value;
        L217: $_stack[++$_stack_sp] = 219;
        L218: goto L1632;
        L219: if ($_fail) { goto L220; }
        L220: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L221: if ($_fail) { goto L223; }
        L222: $_value = $this->_9($_env);
        L223: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L224: unset($_stack[$_stack_sp--]);
        L225: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L226: if (!$_fail) { goto L230; }
        L227: $_fail = false;
        L228: $_value = NULL;
        L229: $_p = $_a;
        L230: $_env["spec"] = $_value;
        L231: if ($_fail) { goto L239; }
        L232: $_stack[++$_stack_sp] = 234;
        L233: goto L1111;
        L234: $_env["path"] = $_value;
        L235: if ($_fail) { goto L239; }
        L236: $_stack[++$_stack_sp] = 238;
        L237: goto L1534;
        L238: if ($_fail) { goto L239; }
        L239: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L240: if ($_fail) { goto L242; }
        L241: $_value = $this->_7($_env);
        L242: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L243: unset($_stack[$_stack_sp--]);
        L244: if ($_fail) { goto L248; }
        L245: $_stack[$_stack_sp][] = $_value;
        L246: $_stack[$_stack_sp - 1] = $_p;
        L247: goto L33;
        L248: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L249: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L250: $_fail = false;
        L251: $_env["declarations"] = $_value;
        L252: if ($_fail) { goto L282; }
        L253: $_stack[++$_stack_sp] = $_p;
        L254: $_stack[++$_stack_sp] = array();
        L255: $_stack[++$_stack_sp] = true;
        L256: $_stack[++$_stack_sp] = $_p;
        L257: $_stack[++$_stack_sp] = 259;
        L258: goto L296;
        L259: if (!$_fail) { goto L263; }
        L260: $_p = $_stack[$_stack_sp];
        L261: $_stack[++$_stack_sp] = 263;
        L262: goto L349;
        L263: unset($_stack[$_stack_sp--]);
        L264: if ($_fail) { goto L269; }
        L265: $_stack[$_stack_sp] = false;
        L266: $_stack[$_stack_sp - 1][] = $_value;
        L267: $_stack[$_stack_sp - 2] = $_p;
        L268: goto L256;
        L269: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L270: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L271: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L272: if ($_a) { goto L274; }
        L273: $_fail = false;
        L274: $_env["definitions"] = $_value;
        L275: if ($_fail) { goto L282; }
        L276: $_stack[++$_stack_sp] = $_p;
        L277: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L278: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L279: $_value = NULL;
        L280: $_fail = !$_fail;
        L281: if ($_fail) { goto L282; }
        L282: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L283: if ($_fail) { goto L285; }
        L284: $_value = $this->_0($_env);
        L285: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L286: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L287: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L288: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L289: $_b = array();
        L290: $_b[0] = $_fail;
        L291: $_b[1] = $_value;
        L292: $_b[2] = $_p;
        L293: $_cache[$_a] = $_b;
        L294: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L295: if ($_a !== 11) return array(FALSE, NULL, 0); goto L11;
        L296: $_stack[++$_stack_sp] = "1@";
        L297: $_stack[$_stack_sp] .= $_p;
        L298: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L305; }
        L299: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L300: $_b = $_cache[$_a];
        L301: $_fail = $_b[0];
        L302: $_value = $_b[1];
        L303: $_p = $_b[2];
        L304: goto L347;
        L305: $_stack[++$_stack_sp] = $_env;
        L306: $_env = array();
        L307: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L308: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L309: $_stack[++$_stack_sp] = $_b;
        L310: $_stack[++$_stack_sp] = NULL;
        L311: $_stack[++$_stack_sp] = 313;
        L312: goto L1324;
        L313: $_env["name"] = $_value;
        L314: if ($_fail) { goto L335; }
        L315: $_stack[$_stack_sp] = $_value;
        L316: $_stack[++$_stack_sp] = 318;
        L317: goto L1777;
        L318: $_env["parameters"] = $_value;
        L319: if ($_fail) { goto L335; }
        L320: $_stack[++$_stack_sp] = 322;
        L321: goto L1534;
        L322: if ($_fail) { goto L335; }
        L323: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L324: if ($_fail) { goto L335; }
        L325: $_stack[++$_stack_sp] = 327;
        L326: goto L1534;
        L327: if ($_fail) { goto L335; }
        L328: $_stack[++$_stack_sp] = 330;
        L329: goto L398;
        L330: $_env["expression"] = $_value;
        L331: if ($_fail) { goto L335; }
        L332: $_stack[++$_stack_sp] = 334;
        L333: goto L1534;
        L334: if ($_fail) { goto L335; }
        L335: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L336: if ($_fail) { goto L338; }
        L337: $_value = $this->_10($_env);
        L338: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L339: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L340: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L341: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L342: $_b = array();
        L343: $_b[0] = $_fail;
        L344: $_b[1] = $_value;
        L345: $_b[2] = $_p;
        L346: $_cache[$_a] = $_b;
        L347: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L348: if ($_a !== 259) return array(FALSE, NULL, 1); goto L259;
        L349: $_stack[++$_stack_sp] = "2@";
        L350: $_stack[$_stack_sp] .= $_p;
        L351: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L358; }
        L352: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L353: $_b = $_cache[$_a];
        L354: $_fail = $_b[0];
        L355: $_value = $_b[1];
        L356: $_p = $_b[2];
        L357: goto L396;
        L358: $_stack[++$_stack_sp] = $_env;
        L359: $_env = array();
        L360: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L361: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L362: $_stack[++$_stack_sp] = $_b;
        L363: $_stack[++$_stack_sp] = NULL;
        L364: $_stack[++$_stack_sp] = 366;
        L365: goto L1324;
        L366: $_env["name"] = $_value;
        L367: if ($_fail) { goto L384; }
        L368: $_stack[$_stack_sp] = $_value;
        L369: $_stack[++$_stack_sp] = 371;
        L370: goto L1534;
        L371: if ($_fail) { goto L384; }
        L372: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L373: if ($_fail) { goto L384; }
        L374: $_stack[++$_stack_sp] = 376;
        L375: goto L1534;
        L376: if ($_fail) { goto L384; }
        L377: $_stack[++$_stack_sp] = 379;
        L378: goto L398;
        L379: $_env["expression"] = $_value;
        L380: if ($_fail) { goto L384; }
        L381: $_stack[++$_stack_sp] = 383;
        L382: goto L1534;
        L383: if ($_fail) { goto L384; }
        L384: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L385: if ($_fail) { goto L387; }
        L386: $_value = $this->_11($_env);
        L387: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L388: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L389: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L390: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L391: $_b = array();
        L392: $_b[0] = $_fail;
        L393: $_b[1] = $_value;
        L394: $_b[2] = $_p;
        L395: $_cache[$_a] = $_b;
        L396: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L397: if ($_a !== 263) return array(FALSE, NULL, 2); goto L263;
        L398: $_stack[++$_stack_sp] = "3@";
        L399: $_stack[$_stack_sp] .= $_p;
        L400: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L407; }
        L401: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L402: $_b = $_cache[$_a];
        L403: $_fail = $_b[0];
        L404: $_value = $_b[1];
        L405: $_p = $_b[2];
        L406: goto L483;
        L407: $_stack[++$_stack_sp] = $_env;
        L408: $_env = array();
        L409: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L410: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L411: $_stack[++$_stack_sp] = $_b;
        L412: $_stack[++$_stack_sp] = $_env;
        L413: $_env = array();
        L414: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L415: $_stack[++$_stack_sp] = $_b;
        L416: $_stack[++$_stack_sp] = NULL;
        L417: $_stack[++$_stack_sp] = $_env;
        L418: $_env = array();
        L419: $_stack[++$_stack_sp] = 421;
        L420: goto L485;
        L421: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L422: $_env["first"] = $_value;
        L423: if ($_fail) { goto L466; }
        L424: $_stack[$_stack_sp] = $_value;
        L425: $_stack[++$_stack_sp] = $_p;
        L426: $_stack[++$_stack_sp] = array();
        L427: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L428: $_stack[++$_stack_sp] = $_b;
        L429: $_stack[++$_stack_sp] = NULL;
        L430: $_stack[++$_stack_sp] = $_env;
        L431: $_env = array();
        L432: $_stack[++$_stack_sp] = NULL;
        L433: $_stack[++$_stack_sp] = 435;
        L434: goto L1534;
        L435: if ($_fail) { goto L442; }
        L436: $_stack[$_stack_sp] = $_value;
        L437: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "/") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"/"', $_expected)) { $_expected[] = '"/"'; } } }
        L438: if ($_fail) { goto L442; }
        L439: $_stack[++$_stack_sp] = 441;
        L440: goto L1534;
        L441: if ($_fail) { goto L442; }
        L442: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L443: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L444: if ($_fail) { goto L453; }
        L445: $_stack[$_stack_sp] = $_value;
        L446: $_stack[++$_stack_sp] = $_env;
        L447: $_env = array();
        L448: $_stack[++$_stack_sp] = 450;
        L449: goto L485;
        L450: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L451: $_env["next"] = $_value;
        L452: if ($_fail) { goto L453; }
        L453: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L454: if ($_fail) { goto L456; }
        L455: $_value = $this->_14($_env);
        L456: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L457: if ($_fail) { goto L461; }
        L458: $_stack[$_stack_sp][] = $_value;
        L459: $_stack[$_stack_sp - 1] = $_p;
        L460: goto L427;
        L461: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L462: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L463: $_fail = false;
        L464: $_env["rest"] = $_value;
        L465: if ($_fail) { goto L466; }
        L466: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L467: if ($_fail) { goto L469; }
        L468: $_value = $this->_13($_env);
        L469: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L470: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L471: $_env["expressions"] = $_value;
        L472: if ($_fail) { goto L474; }
        L473: $_value = $this->_12($_env);
        L474: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L475: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L476: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L477: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L478: $_b = array();
        L479: $_b[0] = $_fail;
        L480: $_b[1] = $_value;
        L481: $_b[2] = $_p;
        L482: $_cache[$_a] = $_b;
        L483: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L484: if ($_a === 330) { goto L330; } else if ($_a === 379) { goto L379; } else if ($_a === 814) { goto L814; } else if ($_a === 843) { goto L843; } else if ($_a === 960) { goto L960; } else { return array(FALSE, NULL, 3); }
        L485: $_stack[++$_stack_sp] = "4@";
        L486: $_stack[$_stack_sp] .= $_p;
        L487: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L494; }
        L488: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L489: $_b = $_cache[$_a];
        L490: $_fail = $_b[0];
        L491: $_value = $_b[1];
        L492: $_p = $_b[2];
        L493: goto L578;
        L494: $_stack[++$_stack_sp] = $_env;
        L495: $_env = array();
        L496: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L497: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L498: $_stack[++$_stack_sp] = $_b;
        L499: $_stack[++$_stack_sp] = NULL;
        L500: $_stack[++$_stack_sp] = $_env;
        L501: $_env = array();
        L502: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L503: $_stack[++$_stack_sp] = $_b;
        L504: $_stack[++$_stack_sp] = NULL;
        L505: $_stack[++$_stack_sp] = $_env;
        L506: $_env = array();
        L507: $_stack[++$_stack_sp] = 509;
        L508: goto L580;
        L509: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L510: $_env["first"] = $_value;
        L511: if ($_fail) { goto L545; }
        L512: $_stack[$_stack_sp] = $_value;
        L513: $_stack[++$_stack_sp] = $_p;
        L514: $_stack[++$_stack_sp] = array();
        L515: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L516: $_stack[++$_stack_sp] = $_b;
        L517: $_stack[++$_stack_sp] = NULL;
        L518: $_stack[++$_stack_sp] = $_env;
        L519: $_env = array();
        L520: $_stack[++$_stack_sp] = 522;
        L521: goto L1632;
        L522: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L523: if ($_fail) { goto L532; }
        L524: $_stack[$_stack_sp] = $_value;
        L525: $_stack[++$_stack_sp] = $_env;
        L526: $_env = array();
        L527: $_stack[++$_stack_sp] = 529;
        L528: goto L580;
        L529: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L530: $_env["next"] = $_value;
        L531: if ($_fail) { goto L532; }
        L532: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L533: if ($_fail) { goto L535; }
        L534: $_value = $this->_17($_env);
        L535: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L536: if ($_fail) { goto L540; }
        L537: $_stack[$_stack_sp][] = $_value;
        L538: $_stack[$_stack_sp - 1] = $_p;
        L539: goto L515;
        L540: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L541: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L542: $_fail = false;
        L543: $_env["rest"] = $_value;
        L544: if ($_fail) { goto L545; }
        L545: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L546: if ($_fail) { goto L548; }
        L547: $_value = $this->_16($_env);
        L548: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L549: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L550: $_env["expressions"] = $_value;
        L551: if ($_fail) { goto L566; }
        L552: $_stack[$_stack_sp] = $_value;
        L553: $_stack[++$_stack_sp] = 555;
        L554: goto L1534;
        L555: if ($_fail) { goto L566; }
        L556: $_stack[++$_stack_sp] = $_p;
        L557: $_stack[++$_stack_sp] = 559;
        L558: goto L1363;
        L559: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L560: if (!$_fail) { goto L564; }
        L561: $_fail = false;
        L562: $_value = NULL;
        L563: $_p = $_a;
        L564: $_env["action"] = $_value;
        L565: if ($_fail) { goto L566; }
        L566: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L567: if ($_fail) { goto L569; }
        L568: $_value = $this->_15($_env);
        L569: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L570: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L571: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L572: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L573: $_b = array();
        L574: $_b[0] = $_fail;
        L575: $_b[1] = $_value;
        L576: $_b[2] = $_p;
        L577: $_cache[$_a] = $_b;
        L578: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L579: if ($_a === 421) { goto L421; } else if ($_a === 450) { goto L450; } else { return array(FALSE, NULL, 4); }
        L580: $_stack[++$_stack_sp] = "5@";
        L581: $_stack[$_stack_sp] .= $_p;
        L582: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L589; }
        L583: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L584: $_b = $_cache[$_a];
        L585: $_fail = $_b[0];
        L586: $_value = $_b[1];
        L587: $_p = $_b[2];
        L588: goto L688;
        L589: $_stack[++$_stack_sp] = $_env;
        L590: $_env = array();
        L591: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L592: $_stack[++$_stack_sp] = $_p;
        L593: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L594: $_stack[++$_stack_sp] = $_b;
        L595: $_stack[++$_stack_sp] = NULL;
        L596: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "&") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"&"', $_expected)) { $_expected[] = '"&"'; } } }
        L597: if ($_fail) { goto L603; }
        L598: $_stack[$_stack_sp] = $_value;
        L599: $_stack[++$_stack_sp] = 601;
        L600: goto L690;
        L601: $_env["expression"] = $_value;
        L602: if ($_fail) { goto L603; }
        L603: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L604: if ($_fail) { goto L606; }
        L605: $_value = $this->_18($_env);
        L606: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L607: if (!$_fail) { goto L679; }
        L608: $_p = $_stack[$_stack_sp];
        L609: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L610: $_stack[++$_stack_sp] = $_b;
        L611: $_stack[++$_stack_sp] = NULL;
        L612: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "!") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"!"', $_expected)) { $_expected[] = '"!"'; } } }
        L613: if ($_fail) { goto L619; }
        L614: $_stack[$_stack_sp] = $_value;
        L615: $_stack[++$_stack_sp] = 617;
        L616: goto L690;
        L617: $_env["expression"] = $_value;
        L618: if ($_fail) { goto L619; }
        L619: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L620: if ($_fail) { goto L622; }
        L621: $_value = $this->_19($_env);
        L622: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L623: if (!$_fail) { goto L679; }
        L624: $_p = $_stack[$_stack_sp];
        L625: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L626: $_stack[++$_stack_sp] = $_b;
        L627: $_stack[++$_stack_sp] = NULL;
        L628: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "?") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"?"', $_expected)) { $_expected[] = '"?"'; } } }
        L629: if ($_fail) { goto L635; }
        L630: $_stack[$_stack_sp] = $_value;
        L631: $_stack[++$_stack_sp] = 633;
        L632: goto L1363;
        L633: $_env["code"] = $_value;
        L634: if ($_fail) { goto L635; }
        L635: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L636: if ($_fail) { goto L638; }
        L637: $_value = $this->_20($_env);
        L638: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L639: if (!$_fail) { goto L679; }
        L640: $_p = $_stack[$_stack_sp];
        L641: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L642: $_stack[++$_stack_sp] = $_b;
        L643: $_stack[++$_stack_sp] = NULL;
        L644: $_stack[++$_stack_sp] = 646;
        L645: goto L1324;
        L646: $_env["varname"] = $_value;
        L647: if ($_fail) { goto L651; }
        L648: $_stack[$_stack_sp] = $_value;
        L649: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === ":^") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('":^"', $_expected)) { $_expected[] = '":^"'; } } }
        L650: if ($_fail) { goto L651; }
        L651: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L652: if ($_fail) { goto L654; }
        L653: $_value = $this->_21($_env);
        L654: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L655: if (!$_fail) { goto L679; }
        L656: $_p = $_stack[$_stack_sp];
        L657: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L658: $_stack[++$_stack_sp] = $_b;
        L659: $_stack[++$_stack_sp] = NULL;
        L660: $_stack[++$_stack_sp] = 662;
        L661: goto L1324;
        L662: $_env["varname"] = $_value;
        L663: if ($_fail) { goto L671; }
        L664: $_stack[$_stack_sp] = $_value;
        L665: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ":") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('":"', $_expected)) { $_expected[] = '":"'; } } }
        L666: if ($_fail) { goto L671; }
        L667: $_stack[++$_stack_sp] = 669;
        L668: goto L690;
        L669: $_env["expression"] = $_value;
        L670: if ($_fail) { goto L671; }
        L671: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L672: if ($_fail) { goto L674; }
        L673: $_value = $this->_22($_env);
        L674: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L675: if (!$_fail) { goto L679; }
        L676: $_p = $_stack[$_stack_sp];
        L677: $_stack[++$_stack_sp] = 679;
        L678: goto L690;
        L679: unset($_stack[$_stack_sp--]);
        L680: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L681: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L682: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L683: $_b = array();
        L684: $_b[0] = $_fail;
        L685: $_b[1] = $_value;
        L686: $_b[2] = $_p;
        L687: $_cache[$_a] = $_b;
        L688: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L689: if ($_a === 509) { goto L509; } else if ($_a === 529) { goto L529; } else { return array(FALSE, NULL, 5); }
        L690: $_stack[++$_stack_sp] = "6@";
        L691: $_stack[$_stack_sp] .= $_p;
        L692: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L699; }
        L693: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L694: $_b = $_cache[$_a];
        L695: $_fail = $_b[0];
        L696: $_value = $_b[1];
        L697: $_p = $_b[2];
        L698: goto L754;
        L699: $_stack[++$_stack_sp] = $_env;
        L700: $_env = array();
        L701: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L702: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L703: $_stack[++$_stack_sp] = $_b;
        L704: $_stack[++$_stack_sp] = NULL;
        L705: $_stack[++$_stack_sp] = 707;
        L706: goto L756;
        L707: $_env["expression"] = $_value;
        L708: if ($_fail) { goto L742; }
        L709: $_stack[$_stack_sp] = $_value;
        L710: $_stack[++$_stack_sp] = $_p;
        L711: $_stack[++$_stack_sp] = $_p;
        L712: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L713: $_stack[++$_stack_sp] = $_b;
        L714: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "?") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"?"', $_expected)) { $_expected[] = '"?"'; } } }
        L715: if ($_fail) { goto L717; }
        L716: $_value = $this->_24($_env);
        L717: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L718: if (!$_fail) { goto L734; }
        L719: $_p = $_stack[$_stack_sp];
        L720: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L721: $_stack[++$_stack_sp] = $_b;
        L722: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "*") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*"', $_expected)) { $_expected[] = '"*"'; } } }
        L723: if ($_fail) { goto L725; }
        L724: $_value = $this->_25($_env);
        L725: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L726: if (!$_fail) { goto L734; }
        L727: $_p = $_stack[$_stack_sp];
        L728: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L729: $_stack[++$_stack_sp] = $_b;
        L730: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "+") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"+"', $_expected)) { $_expected[] = '"+"'; } } }
        L731: if ($_fail) { goto L733; }
        L732: $_value = $this->_26($_env);
        L733: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L734: unset($_stack[$_stack_sp--]);
        L735: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L736: if (!$_fail) { goto L740; }
        L737: $_fail = false;
        L738: $_value = NULL;
        L739: $_p = $_a;
        L740: $_env["suffix"] = $_value;
        L741: if ($_fail) { goto L742; }
        L742: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L743: if ($_fail) { goto L745; }
        L744: $_value = $this->_23($_env);
        L745: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L746: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L747: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L748: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L749: $_b = array();
        L750: $_b[0] = $_fail;
        L751: $_b[1] = $_value;
        L752: $_b[2] = $_p;
        L753: $_cache[$_a] = $_b;
        L754: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L755: if ($_a === 601) { goto L601; } else if ($_a === 617) { goto L617; } else if ($_a === 669) { goto L669; } else if ($_a === 679) { goto L679; } else { return array(FALSE, NULL, 6); }
        L756: $_stack[++$_stack_sp] = "7@";
        L757: $_stack[$_stack_sp] .= $_p;
        L758: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L765; }
        L759: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L760: $_b = $_cache[$_a];
        L761: $_fail = $_b[0];
        L762: $_value = $_b[1];
        L763: $_p = $_b[2];
        L764: goto L1008;
        L765: $_stack[++$_stack_sp] = $_env;
        L766: $_env = array();
        L767: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L768: $_stack[++$_stack_sp] = $_p;
        L769: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L770: $_stack[++$_stack_sp] = $_b;
        L771: $_stack[++$_stack_sp] = NULL;
        L772: $_stack[++$_stack_sp] = $_p;
        L773: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L774: $_stack[++$_stack_sp] = $_b;
        L775: $_stack[++$_stack_sp] = NULL;
        L776: $_stack[++$_stack_sp] = 778;
        L777: goto L1324;
        L778: $_env["name"] = $_value;
        L779: if ($_fail) { goto L783; }
        L780: $_stack[$_stack_sp] = $_value;
        L781: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L782: if ($_fail) { goto L783; }
        L783: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L784: if ($_fail) { goto L786; }
        L785: $_value = $this->_28($_env);
        L786: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L787: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L788: if (!$_fail) { goto L792; }
        L789: $_fail = false;
        L790: $_value = NULL;
        L791: $_p = $_a;
        L792: $_env["importname"] = $_value;
        L793: if ($_fail) { goto L889; }
        L794: $_stack[$_stack_sp] = $_value;
        L795: $_stack[++$_stack_sp] = 797;
        L796: goto L1324;
        L797: $_env["macroname"] = $_value;
        L798: if ($_fail) { goto L889; }
        L799: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L800: if ($_fail) { goto L889; }
        L801: $_stack[++$_stack_sp] = 803;
        L802: goto L1534;
        L803: if ($_fail) { goto L889; }
        L804: $_stack[++$_stack_sp] = $_p;
        L805: $_stack[++$_stack_sp] = $_env;
        L806: $_env = array();
        L807: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L808: $_stack[++$_stack_sp] = $_b;
        L809: $_stack[++$_stack_sp] = NULL;
        L810: $_stack[++$_stack_sp] = $_env;
        L811: $_env = array();
        L812: $_stack[++$_stack_sp] = 814;
        L813: goto L398;
        L814: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L815: $_env["first"] = $_value;
        L816: if ($_fail) { goto L859; }
        L817: $_stack[$_stack_sp] = $_value;
        L818: $_stack[++$_stack_sp] = $_p;
        L819: $_stack[++$_stack_sp] = array();
        L820: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L821: $_stack[++$_stack_sp] = $_b;
        L822: $_stack[++$_stack_sp] = NULL;
        L823: $_stack[++$_stack_sp] = $_env;
        L824: $_env = array();
        L825: $_stack[++$_stack_sp] = NULL;
        L826: $_stack[++$_stack_sp] = 828;
        L827: goto L1534;
        L828: if ($_fail) { goto L835; }
        L829: $_stack[$_stack_sp] = $_value;
        L830: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ",") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('","', $_expected)) { $_expected[] = '","'; } } }
        L831: if ($_fail) { goto L835; }
        L832: $_stack[++$_stack_sp] = 834;
        L833: goto L1534;
        L834: if ($_fail) { goto L835; }
        L835: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L836: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L837: if ($_fail) { goto L846; }
        L838: $_stack[$_stack_sp] = $_value;
        L839: $_stack[++$_stack_sp] = $_env;
        L840: $_env = array();
        L841: $_stack[++$_stack_sp] = 843;
        L842: goto L398;
        L843: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L844: $_env["next"] = $_value;
        L845: if ($_fail) { goto L846; }
        L846: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L847: if ($_fail) { goto L849; }
        L848: $_value = $this->_30($_env);
        L849: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L850: if ($_fail) { goto L854; }
        L851: $_stack[$_stack_sp][] = $_value;
        L852: $_stack[$_stack_sp - 1] = $_p;
        L853: goto L820;
        L854: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L855: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L856: $_fail = false;
        L857: $_env["rest"] = $_value;
        L858: if ($_fail) { goto L859; }
        L859: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L860: if ($_fail) { goto L862; }
        L861: $_value = $this->_29($_env);
        L862: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L863: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L864: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L865: if (!$_fail) { goto L869; }
        L866: $_fail = false;
        L867: $_value = NULL;
        L868: $_p = $_a;
        L869: $_env["arguments"] = $_value;
        L870: if ($_fail) { goto L889; }
        L871: $_stack[++$_stack_sp] = 873;
        L872: goto L1534;
        L873: if ($_fail) { goto L889; }
        L874: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ")") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('")"', $_expected)) { $_expected[] = '")"'; } } }
        L875: if ($_fail) { goto L889; }
        L876: $_stack[++$_stack_sp] = $_p;
        L877: $_stack[++$_stack_sp] = NULL;
        L878: $_stack[++$_stack_sp] = 880;
        L879: goto L1534;
        L880: if ($_fail) { goto L884; }
        L881: $_stack[$_stack_sp] = $_value;
        L882: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L883: if ($_fail) { goto L884; }
        L884: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L885: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L886: $_value = NULL;
        L887: $_fail = !$_fail;
        L888: if ($_fail) { goto L889; }
        L889: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L890: if ($_fail) { goto L892; }
        L891: $_value = $this->_27($_env);
        L892: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L893: if (!$_fail) { goto L999; }
        L894: $_p = $_stack[$_stack_sp];
        L895: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L896: $_stack[++$_stack_sp] = $_b;
        L897: $_stack[++$_stack_sp] = NULL;
        L898: $_stack[++$_stack_sp] = $_p;
        L899: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L900: $_stack[++$_stack_sp] = $_b;
        L901: $_stack[++$_stack_sp] = NULL;
        L902: $_stack[++$_stack_sp] = 904;
        L903: goto L1324;
        L904: $_env["name"] = $_value;
        L905: if ($_fail) { goto L909; }
        L906: $_stack[$_stack_sp] = $_value;
        L907: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L908: if ($_fail) { goto L909; }
        L909: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L910: if ($_fail) { goto L912; }
        L911: $_value = $this->_32($_env);
        L912: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L913: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L914: if (!$_fail) { goto L918; }
        L915: $_fail = false;
        L916: $_value = NULL;
        L917: $_p = $_a;
        L918: $_env["importname"] = $_value;
        L919: if ($_fail) { goto L943; }
        L920: $_stack[$_stack_sp] = $_value;
        L921: $_stack[++$_stack_sp] = 923;
        L922: goto L1324;
        L923: $_env["rulename"] = $_value;
        L924: if ($_fail) { goto L943; }
        L925: $_stack[++$_stack_sp] = $_p;
        L926: $_stack[++$_stack_sp] = $_p;
        L927: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L928: if (!$_fail) { goto L938; }
        L929: $_p = $_stack[$_stack_sp];
        L930: $_stack[++$_stack_sp] = NULL;
        L931: $_stack[++$_stack_sp] = 933;
        L932: goto L1534;
        L933: if ($_fail) { goto L937; }
        L934: $_stack[$_stack_sp] = $_value;
        L935: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "=") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"="', $_expected)) { $_expected[] = '"="'; } } }
        L936: if ($_fail) { goto L937; }
        L937: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L938: unset($_stack[$_stack_sp--]);
        L939: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L940: $_value = NULL;
        L941: $_fail = !$_fail;
        L942: if ($_fail) { goto L943; }
        L943: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L944: if ($_fail) { goto L946; }
        L945: $_value = $this->_31($_env);
        L946: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L947: if (!$_fail) { goto L999; }
        L948: $_p = $_stack[$_stack_sp];
        L949: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L950: $_stack[++$_stack_sp] = $_b;
        L951: $_stack[++$_stack_sp] = NULL;
        L952: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L953: if ($_fail) { goto L967; }
        L954: $_stack[$_stack_sp] = $_value;
        L955: $_stack[++$_stack_sp] = 957;
        L956: goto L1534;
        L957: if ($_fail) { goto L967; }
        L958: $_stack[++$_stack_sp] = 960;
        L959: goto L398;
        L960: $_env["expression"] = $_value;
        L961: if ($_fail) { goto L967; }
        L962: $_stack[++$_stack_sp] = 964;
        L963: goto L1534;
        L964: if ($_fail) { goto L967; }
        L965: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ")") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('")"', $_expected)) { $_expected[] = '")"'; } } }
        L966: if ($_fail) { goto L967; }
        L967: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L968: if ($_fail) { goto L970; }
        L969: $_value = $this->_33($_env);
        L970: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L971: if (!$_fail) { goto L999; }
        L972: $_p = $_stack[$_stack_sp];
        L973: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L974: $_stack[++$_stack_sp] = $_b;
        L975: $_stack[++$_stack_sp] = 977;
        L976: goto L1111;
        L977: $_env["literal"] = $_value;
        L978: if ($_fail) { goto L980; }
        L979: $_value = $this->_34($_env);
        L980: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L981: if (!$_fail) { goto L999; }
        L982: $_p = $_stack[$_stack_sp];
        L983: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L984: $_stack[++$_stack_sp] = $_b;
        L985: $_stack[++$_stack_sp] = 987;
        L986: goto L1010;
        L987: $_env["range"] = $_value;
        L988: if ($_fail) { goto L990; }
        L989: $_value = $this->_35($_env);
        L990: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L991: if (!$_fail) { goto L999; }
        L992: $_p = $_stack[$_stack_sp];
        L993: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L994: $_stack[++$_stack_sp] = $_b;
        L995: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ".") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"."', $_expected)) { $_expected[] = '"."'; } } }
        L996: if ($_fail) { goto L998; }
        L997: $_value = $this->_36($_env);
        L998: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L999: unset($_stack[$_stack_sp--]);
        L1000: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1001: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1002: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1003: $_b = array();
        L1004: $_b[0] = $_fail;
        L1005: $_b[1] = $_value;
        L1006: $_b[2] = $_p;
        L1007: $_cache[$_a] = $_b;
        L1008: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1009: if ($_a !== 707) return array(FALSE, NULL, 7); goto L707;
        L1010: $_stack[++$_stack_sp] = "8@";
        L1011: $_stack[$_stack_sp] .= $_p;
        L1012: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1019; }
        L1013: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1014: $_b = $_cache[$_a];
        L1015: $_fail = $_b[0];
        L1016: $_value = $_b[1];
        L1017: $_p = $_b[2];
        L1018: goto L1109;
        L1019: $_stack[++$_stack_sp] = $_env;
        L1020: $_env = array();
        L1021: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1022: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1023: $_stack[++$_stack_sp] = $_b;
        L1024: $_stack[++$_stack_sp] = NULL;
        L1025: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "[") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"["', $_expected)) { $_expected[] = '"["'; } } }
        L1026: if ($_fail) { goto L1097; }
        L1027: $_stack[$_stack_sp] = $_value;
        L1028: $_stack[++$_stack_sp] = $_p;
        L1029: $_stack[++$_stack_sp] = array();
        L1030: $_stack[++$_stack_sp] = true;
        L1031: $_stack[++$_stack_sp] = $_p;
        L1032: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1033: $_stack[++$_stack_sp] = $_b;
        L1034: $_stack[++$_stack_sp] = NULL;
        L1035: $_stack[++$_stack_sp] = $_p;
        L1036: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L1037: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1038: $_value = NULL;
        L1039: $_fail = !$_fail;
        L1040: if ($_fail) { goto L1058; }
        L1041: $_stack[++$_stack_sp] = 1043;
        L1042: goto L1207;
        L1043: $_env["a"] = $_value;
        L1044: if ($_fail) { goto L1058; }
        L1045: $_stack[$_stack_sp] = $_value;
        L1046: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "-") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"-"', $_expected)) { $_expected[] = '"-"'; } } }
        L1047: if ($_fail) { goto L1058; }
        L1048: $_stack[++$_stack_sp] = $_p;
        L1049: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L1050: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1051: $_value = NULL;
        L1052: $_fail = !$_fail;
        L1053: if ($_fail) { goto L1058; }
        L1054: $_stack[++$_stack_sp] = 1056;
        L1055: goto L1207;
        L1056: $_env["b"] = $_value;
        L1057: if ($_fail) { goto L1058; }
        L1058: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1059: if ($_fail) { goto L1061; }
        L1060: $_value = $this->_38($_env);
        L1061: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1062: if (!$_fail) { goto L1082; }
        L1063: $_p = $_stack[$_stack_sp];
        L1064: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1065: $_stack[++$_stack_sp] = $_b;
        L1066: $_stack[++$_stack_sp] = NULL;
        L1067: $_stack[++$_stack_sp] = $_p;
        L1068: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L1069: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1070: $_value = NULL;
        L1071: $_fail = !$_fail;
        L1072: if ($_fail) { goto L1078; }
        L1073: $_stack[++$_stack_sp] = 1075;
        L1074: goto L1207;
        L1075: $_env["c"] = $_value;
        L1076: if ($_fail) { goto L1078; }
        L1077: $_stack[$_stack_sp] = $_value;
        L1078: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1079: if ($_fail) { goto L1081; }
        L1080: $_value = $this->_39($_env);
        L1081: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1082: unset($_stack[$_stack_sp--]);
        L1083: if ($_fail) { goto L1088; }
        L1084: $_stack[$_stack_sp] = false;
        L1085: $_stack[$_stack_sp - 1][] = $_value;
        L1086: $_stack[$_stack_sp - 2] = $_p;
        L1087: goto L1031;
        L1088: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1089: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1090: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1091: if ($_a) { goto L1093; }
        L1092: $_fail = false;
        L1093: $_env["matches"] = $_value;
        L1094: if ($_fail) { goto L1097; }
        L1095: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "]") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"]"', $_expected)) { $_expected[] = '"]"'; } } }
        L1096: if ($_fail) { goto L1097; }
        L1097: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1098: if ($_fail) { goto L1100; }
        L1099: $_value = $this->_37($_env);
        L1100: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1101: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1102: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1103: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1104: $_b = array();
        L1105: $_b[0] = $_fail;
        L1106: $_b[1] = $_value;
        L1107: $_b[2] = $_p;
        L1108: $_cache[$_a] = $_b;
        L1109: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1110: if ($_a !== 987) return array(FALSE, NULL, 8); goto L987;
        L1111: $_stack[++$_stack_sp] = "9@";
        L1112: $_stack[$_stack_sp] .= $_p;
        L1113: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1120; }
        L1114: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1115: $_b = $_cache[$_a];
        L1116: $_fail = $_b[0];
        L1117: $_value = $_b[1];
        L1118: $_p = $_b[2];
        L1119: goto L1205;
        L1120: $_stack[++$_stack_sp] = $_env;
        L1121: $_env = array();
        L1122: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1123: $_stack[++$_stack_sp] = $_p;
        L1124: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1125: $_stack[++$_stack_sp] = $_b;
        L1126: $_stack[++$_stack_sp] = NULL;
        L1127: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 34))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\"]', $_expected)) { $_expected[] = '[\\"]'; } } }
        L1128: if ($_fail) { goto L1155; }
        L1129: $_stack[$_stack_sp] = $_value;
        L1130: $_stack[++$_stack_sp] = $_p;
        L1131: $_stack[++$_stack_sp] = array();
        L1132: $_stack[++$_stack_sp] = NULL;
        L1133: $_stack[++$_stack_sp] = $_p;
        L1134: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 34))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\"]', $_expected)) { $_expected[] = '[\\"]'; } } }
        L1135: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1136: $_value = NULL;
        L1137: $_fail = !$_fail;
        L1138: if ($_fail) { goto L1143; }
        L1139: $_stack[++$_stack_sp] = 1141;
        L1140: goto L1207;
        L1141: if ($_fail) { goto L1143; }
        L1142: $_stack[$_stack_sp] = $_value;
        L1143: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1144: if ($_fail) { goto L1148; }
        L1145: $_stack[$_stack_sp][] = $_value;
        L1146: $_stack[$_stack_sp - 1] = $_p;
        L1147: goto L1132;
        L1148: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1149: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1150: $_fail = false;
        L1151: $_env["value"] = $_value;
        L1152: if ($_fail) { goto L1155; }
        L1153: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 34))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\"]', $_expected)) { $_expected[] = '[\\"]'; } } }
        L1154: if ($_fail) { goto L1155; }
        L1155: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1156: if ($_fail) { goto L1158; }
        L1157: $_value = $this->_40($_env);
        L1158: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1159: if (!$_fail) { goto L1196; }
        L1160: $_p = $_stack[$_stack_sp];
        L1161: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1162: $_stack[++$_stack_sp] = $_b;
        L1163: $_stack[++$_stack_sp] = NULL;
        L1164: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L1165: if ($_fail) { goto L1192; }
        L1166: $_stack[$_stack_sp] = $_value;
        L1167: $_stack[++$_stack_sp] = $_p;
        L1168: $_stack[++$_stack_sp] = array();
        L1169: $_stack[++$_stack_sp] = NULL;
        L1170: $_stack[++$_stack_sp] = $_p;
        L1171: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L1172: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1173: $_value = NULL;
        L1174: $_fail = !$_fail;
        L1175: if ($_fail) { goto L1180; }
        L1176: $_stack[++$_stack_sp] = 1178;
        L1177: goto L1207;
        L1178: if ($_fail) { goto L1180; }
        L1179: $_stack[$_stack_sp] = $_value;
        L1180: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1181: if ($_fail) { goto L1185; }
        L1182: $_stack[$_stack_sp][] = $_value;
        L1183: $_stack[$_stack_sp - 1] = $_p;
        L1184: goto L1169;
        L1185: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1186: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1187: $_fail = false;
        L1188: $_env["value"] = $_value;
        L1189: if ($_fail) { goto L1192; }
        L1190: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L1191: if ($_fail) { goto L1192; }
        L1192: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1193: if ($_fail) { goto L1195; }
        L1194: $_value = $this->_41($_env);
        L1195: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1196: unset($_stack[$_stack_sp--]);
        L1197: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1198: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1199: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1200: $_b = array();
        L1201: $_b[0] = $_fail;
        L1202: $_b[1] = $_value;
        L1203: $_b[2] = $_p;
        L1204: $_cache[$_a] = $_b;
        L1205: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1206: if ($_a === 234) { goto L234; } else if ($_a === 977) { goto L977; } else { return array(FALSE, NULL, 9); }
        L1207: $_stack[++$_stack_sp] = "10@";
        L1208: $_stack[$_stack_sp] .= $_p;
        L1209: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1216; }
        L1210: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1211: $_b = $_cache[$_a];
        L1212: $_fail = $_b[0];
        L1213: $_value = $_b[1];
        L1214: $_p = $_b[2];
        L1215: goto L1322;
        L1216: $_stack[++$_stack_sp] = $_env;
        L1217: $_env = array();
        L1218: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1219: $_stack[++$_stack_sp] = $_p;
        L1220: $_stack[++$_stack_sp] = "";
        L1221: $_stack[++$_stack_sp] = $_p;
        L1222: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\\") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\"', $_expected)) { $_expected[] = '"\\\\"'; } } }
        L1223: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1224: $_value = NULL;
        L1225: $_fail = !$_fail;
        L1226: if ($_fail) { goto L1231; }
        L1227: $_stack[$_stack_sp] .= $_value;
        L1228: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1229: if ($_fail) { goto L1231; }
        L1230: $_stack[$_stack_sp] .= $_value;
        L1231: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1232: if (!$_fail) { goto L1313; }
        L1233: $_p = $_stack[$_stack_sp];
        L1234: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1235: $_stack[++$_stack_sp] = $_b;
        L1236: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\n") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\n"', $_expected)) { $_expected[] = '"\\\\n"'; } } }
        L1237: if ($_fail) { goto L1239; }
        L1238: $_value = $this->_42($_env);
        L1239: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1240: if (!$_fail) { goto L1313; }
        L1241: $_p = $_stack[$_stack_sp];
        L1242: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1243: $_stack[++$_stack_sp] = $_b;
        L1244: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\r") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\r"', $_expected)) { $_expected[] = '"\\\\r"'; } } }
        L1245: if ($_fail) { goto L1247; }
        L1246: $_value = $this->_43($_env);
        L1247: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1248: if (!$_fail) { goto L1313; }
        L1249: $_p = $_stack[$_stack_sp];
        L1250: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1251: $_stack[++$_stack_sp] = $_b;
        L1252: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\t") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\t"', $_expected)) { $_expected[] = '"\\\\t"'; } } }
        L1253: if ($_fail) { goto L1255; }
        L1254: $_value = $this->_44($_env);
        L1255: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1256: if (!$_fail) { goto L1313; }
        L1257: $_p = $_stack[$_stack_sp];
        L1258: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1259: $_stack[++$_stack_sp] = $_b;
        L1260: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\\\") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\\\\\"', $_expected)) { $_expected[] = '"\\\\\\\\"'; } } }
        L1261: if ($_fail) { goto L1263; }
        L1262: $_value = $this->_45($_env);
        L1263: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1264: if (!$_fail) { goto L1313; }
        L1265: $_p = $_stack[$_stack_sp];
        L1266: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1267: $_stack[++$_stack_sp] = $_b;
        L1268: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\\"") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\\\""', $_expected)) { $_expected[] = '"\\\\\\""'; } } }
        L1269: if ($_fail) { goto L1271; }
        L1270: $_value = $this->_46($_env);
        L1271: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1272: if (!$_fail) { goto L1313; }
        L1273: $_p = $_stack[$_stack_sp];
        L1274: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1275: $_stack[++$_stack_sp] = $_b;
        L1276: $_stack[++$_stack_sp] = "";
        L1277: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\\") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\"', $_expected)) { $_expected[] = '"\\\\"'; } } }
        L1278: if ($_fail) { goto L1283; }
        L1279: $_stack[$_stack_sp] .= $_value;
        L1280: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 39))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[\\\']', $_expected)) { $_expected[] = '[\\\']'; } } }
        L1281: if ($_fail) { goto L1283; }
        L1282: $_stack[$_stack_sp] .= $_value;
        L1283: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1284: if ($_fail) { goto L1286; }
        L1285: $_value = $this->_47($_env);
        L1286: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1287: if (!$_fail) { goto L1313; }
        L1288: $_p = $_stack[$_stack_sp];
        L1289: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1290: $_stack[++$_stack_sp] = $_b;
        L1291: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\]") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\]"', $_expected)) { $_expected[] = '"\\\\]"'; } } }
        L1292: if ($_fail) { goto L1294; }
        L1293: $_value = $this->_48($_env);
        L1294: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1295: if (!$_fail) { goto L1313; }
        L1296: $_p = $_stack[$_stack_sp];
        L1297: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1298: $_stack[++$_stack_sp] = $_b;
        L1299: $_stack[++$_stack_sp] = NULL;
        L1300: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "\\x") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\\\x"', $_expected)) { $_expected[] = '"\\\\x"'; } } }
        L1301: if ($_fail) { goto L1309; }
        L1302: $_stack[$_stack_sp] = $_value;
        L1303: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((48 <= $_a && $_a <= 57) || (97 <= $_a && $_a <= 102) || (65 <= $_a && $_a <= 70))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[0-9a-fA-F]', $_expected)) { $_expected[] = '[0-9a-fA-F]'; } } }
        L1304: $_env["a"] = $_value;
        L1305: if ($_fail) { goto L1309; }
        L1306: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((48 <= $_a && $_a <= 57) || (97 <= $_a && $_a <= 102) || (65 <= $_a && $_a <= 70))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[0-9a-fA-F]', $_expected)) { $_expected[] = '[0-9a-fA-F]'; } } }
        L1307: $_env["b"] = $_value;
        L1308: if ($_fail) { goto L1309; }
        L1309: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1310: if ($_fail) { goto L1312; }
        L1311: $_value = $this->_49($_env);
        L1312: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1313: unset($_stack[$_stack_sp--]);
        L1314: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1315: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1316: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1317: $_b = array();
        L1318: $_b[0] = $_fail;
        L1319: $_b[1] = $_value;
        L1320: $_b[2] = $_p;
        L1321: $_cache[$_a] = $_b;
        L1322: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1323: if ($_a === 1043) { goto L1043; } else if ($_a === 1056) { goto L1056; } else if ($_a === 1075) { goto L1075; } else if ($_a === 1141) { goto L1141; } else if ($_a === 1178) { goto L1178; } else { return array(FALSE, NULL, 10); }
        L1324: $_stack[++$_stack_sp] = "11@";
        L1325: $_stack[$_stack_sp] .= $_p;
        L1326: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1333; }
        L1327: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1328: $_b = $_cache[$_a];
        L1329: $_fail = $_b[0];
        L1330: $_value = $_b[1];
        L1331: $_p = $_b[2];
        L1332: goto L1361;
        L1333: $_stack[++$_stack_sp] = $_env;
        L1334: $_env = array();
        L1335: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1336: $_stack[++$_stack_sp] = "";
        L1337: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((97 <= $_a && $_a <= 122) || (65 <= $_a && $_a <= 90) || ($_a === 95))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[a-zA-Z_]', $_expected)) { $_expected[] = '[a-zA-Z_]'; } } }
        L1338: if ($_fail) { goto L1352; }
        L1339: $_stack[$_stack_sp] .= $_value;
        L1340: $_stack[++$_stack_sp] = $_p;
        L1341: $_stack[++$_stack_sp] = "";
        L1342: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && ((97 <= $_a && $_a <= 122) || (65 <= $_a && $_a <= 90) || (48 <= $_a && $_a <= 57) || ($_a === 95))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[a-zA-Z0-9_]', $_expected)) { $_expected[] = '[a-zA-Z0-9_]'; } } }
        L1343: if ($_fail) { goto L1347; }
        L1344: $_stack[$_stack_sp] .= $_value;
        L1345: $_stack[$_stack_sp - 1] = $_p;
        L1346: goto L1342;
        L1347: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1348: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1349: $_fail = false;
        L1350: if ($_fail) { goto L1352; }
        L1351: $_stack[$_stack_sp] .= $_value;
        L1352: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1353: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1354: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1355: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1356: $_b = array();
        L1357: $_b[0] = $_fail;
        L1358: $_b[1] = $_value;
        L1359: $_b[2] = $_p;
        L1360: $_cache[$_a] = $_b;
        L1361: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1362: if ($_a === 52) { goto L52; } else if ($_a === 72) { goto L72; } else if ($_a === 115) { goto L115; } else if ($_a === 214) { goto L214; } else if ($_a === 313) { goto L313; } else if ($_a === 366) { goto L366; } else if ($_a === 646) { goto L646; } else if ($_a === 662) { goto L662; } else if ($_a === 778) { goto L778; } else if ($_a === 797) { goto L797; } else if ($_a === 904) { goto L904; } else if ($_a === 923) { goto L923; } else if ($_a === 1808) { goto L1808; } else if ($_a === 1837) { goto L1837; } else { return array(FALSE, NULL, 11); }
        L1363: $_stack[++$_stack_sp] = "12@";
        L1364: $_stack[$_stack_sp] .= $_p;
        L1365: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1372; }
        L1366: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1367: $_b = $_cache[$_a];
        L1368: $_fail = $_b[0];
        L1369: $_value = $_b[1];
        L1370: $_p = $_b[2];
        L1371: goto L1452;
        L1372: $_stack[++$_stack_sp] = $_env;
        L1373: $_env = array();
        L1374: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1375: $_stack[++$_stack_sp] = $_p;
        L1376: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1377: $_stack[++$_stack_sp] = $_b;
        L1378: $_stack[++$_stack_sp] = NULL;
        L1379: $_stack[++$_stack_sp] = $_p;
        L1380: $_stack[++$_stack_sp] = NULL;
        L1381: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "->") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"->"', $_expected)) { $_expected[] = '"->"'; } } }
        L1382: if ($_fail) { goto L1387; }
        L1383: $_stack[$_stack_sp] = $_value;
        L1384: $_stack[++$_stack_sp] = 1386;
        L1385: goto L1534;
        L1386: if ($_fail) { goto L1387; }
        L1387: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1388: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1389: if (!$_fail) { goto L1393; }
        L1390: $_fail = false;
        L1391: $_value = NULL;
        L1392: $_p = $_a;
        L1393: if ($_fail) { goto L1403; }
        L1394: $_stack[$_stack_sp] = $_value;
        L1395: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "{") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{"', $_expected)) { $_expected[] = '"{"'; } } }
        L1396: if ($_fail) { goto L1403; }
        L1397: $_stack[++$_stack_sp] = 1399;
        L1398: goto L1454;
        L1399: $_env["code"] = $_value;
        L1400: if ($_fail) { goto L1403; }
        L1401: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1402: if ($_fail) { goto L1403; }
        L1403: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1404: if ($_fail) { goto L1406; }
        L1405: $_value = $this->_50($_env);
        L1406: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1407: if (!$_fail) { goto L1443; }
        L1408: $_p = $_stack[$_stack_sp];
        L1409: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1410: $_stack[++$_stack_sp] = $_b;
        L1411: $_stack[++$_stack_sp] = NULL;
        L1412: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "->") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"->"', $_expected)) { $_expected[] = '"->"'; } } }
        L1413: if ($_fail) { goto L1439; }
        L1414: $_stack[$_stack_sp] = $_value;
        L1415: $_stack[++$_stack_sp] = $_p;
        L1416: $_stack[++$_stack_sp] = "";
        L1417: $_stack[++$_stack_sp] = "";
        L1418: $_stack[++$_stack_sp] = $_p;
        L1419: $_stack[++$_stack_sp] = 1421;
        L1420: goto L1736;
        L1421: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1422: $_value = NULL;
        L1423: $_fail = !$_fail;
        L1424: if ($_fail) { goto L1429; }
        L1425: $_stack[$_stack_sp] .= $_value;
        L1426: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1427: if ($_fail) { goto L1429; }
        L1428: $_stack[$_stack_sp] .= $_value;
        L1429: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1430: if ($_fail) { goto L1434; }
        L1431: $_stack[$_stack_sp] .= $_value;
        L1432: $_stack[$_stack_sp - 1] = $_p;
        L1433: goto L1417;
        L1434: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1435: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1436: $_fail = false;
        L1437: $_env["code"] = $_value;
        L1438: if ($_fail) { goto L1439; }
        L1439: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1440: if ($_fail) { goto L1442; }
        L1441: $_value = $this->_51($_env);
        L1442: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1443: unset($_stack[$_stack_sp--]);
        L1444: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1445: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1446: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1447: $_b = array();
        L1448: $_b[0] = $_fail;
        L1449: $_b[1] = $_value;
        L1450: $_b[2] = $_p;
        L1451: $_cache[$_a] = $_b;
        L1452: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1453: if ($_a === 137) { goto L137; } else if ($_a === 172) { goto L172; } else if ($_a === 559) { goto L559; } else if ($_a === 633) { goto L633; } else { return array(FALSE, NULL, 12); }
        L1454: $_stack[++$_stack_sp] = "13@";
        L1455: $_stack[$_stack_sp] .= $_p;
        L1456: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1463; }
        L1457: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1458: $_b = $_cache[$_a];
        L1459: $_fail = $_b[0];
        L1460: $_value = $_b[1];
        L1461: $_p = $_b[2];
        L1462: goto L1532;
        L1463: $_stack[++$_stack_sp] = $_env;
        L1464: $_env = array();
        L1465: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1466: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1467: $_stack[++$_stack_sp] = $_b;
        L1468: $_stack[++$_stack_sp] = $_p;
        L1469: $_stack[++$_stack_sp] = array();
        L1470: $_stack[++$_stack_sp] = $_p;
        L1471: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1472: $_stack[++$_stack_sp] = $_b;
        L1473: $_stack[++$_stack_sp] = NULL;
        L1474: $_stack[++$_stack_sp] = $_p;
        L1475: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "{") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{"', $_expected)) { $_expected[] = '"{"'; } } }
        L1476: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1477: $_value = NULL;
        L1478: $_fail = !$_fail;
        L1479: if ($_fail) { goto L1490; }
        L1480: $_stack[++$_stack_sp] = $_p;
        L1481: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1482: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1483: $_value = NULL;
        L1484: $_fail = !$_fail;
        L1485: if ($_fail) { goto L1490; }
        L1486: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1487: $_env["c"] = $_value;
        L1488: if ($_fail) { goto L1490; }
        L1489: $_stack[$_stack_sp] = $_value;
        L1490: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1491: if ($_fail) { goto L1493; }
        L1492: $_value = $this->_53($_env);
        L1493: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1494: if (!$_fail) { goto L1512; }
        L1495: $_p = $_stack[$_stack_sp];
        L1496: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1497: $_stack[++$_stack_sp] = $_b;
        L1498: $_stack[++$_stack_sp] = NULL;
        L1499: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "{") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"{"', $_expected)) { $_expected[] = '"{"'; } } }
        L1500: if ($_fail) { goto L1508; }
        L1501: $_stack[$_stack_sp] = $_value;
        L1502: $_stack[++$_stack_sp] = 1504;
        L1503: goto L1454;
        L1504: $_env["i"] = $_value;
        L1505: if ($_fail) { goto L1508; }
        L1506: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "}") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"}"', $_expected)) { $_expected[] = '"}"'; } } }
        L1507: if ($_fail) { goto L1508; }
        L1508: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1509: if ($_fail) { goto L1511; }
        L1510: $_value = $this->_54($_env);
        L1511: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1512: unset($_stack[$_stack_sp--]);
        L1513: if ($_fail) { goto L1517; }
        L1514: $_stack[$_stack_sp][] = $_value;
        L1515: $_stack[$_stack_sp - 1] = $_p;
        L1516: goto L1470;
        L1517: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1518: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1519: $_fail = false;
        L1520: $_env["inside"] = $_value;
        L1521: if ($_fail) { goto L1523; }
        L1522: $_value = $this->_52($_env);
        L1523: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1524: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1525: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1526: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1527: $_b = array();
        L1528: $_b[0] = $_fail;
        L1529: $_b[1] = $_value;
        L1530: $_b[2] = $_p;
        L1531: $_cache[$_a] = $_b;
        L1532: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1533: if ($_a === 1399) { goto L1399; } else if ($_a === 1504) { goto L1504; } else { return array(FALSE, NULL, 13); }
        L1534: $_stack[++$_stack_sp] = "14@";
        L1535: $_stack[$_stack_sp] .= $_p;
        L1536: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1543; }
        L1537: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1538: $_b = $_cache[$_a];
        L1539: $_fail = $_b[0];
        L1540: $_value = $_b[1];
        L1541: $_p = $_b[2];
        L1542: goto L1630;
        L1543: $_stack[++$_stack_sp] = $_env;
        L1544: $_env = array();
        L1545: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1546: $_stack[++$_stack_sp] = $_p;
        L1547: $_stack[++$_stack_sp] = "";
        L1548: $_stack[++$_stack_sp] = $_p;
        L1549: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 32) || ($_a === 9) || ($_a === 13) || ($_a === 10))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[ \\t\\r\\n]', $_expected)) { $_expected[] = '[ \\t\\r\\n]'; } } }
        L1550: if (!$_fail) { goto L1614; }
        L1551: $_p = $_stack[$_stack_sp];
        L1552: $_stack[++$_stack_sp] = "";
        L1553: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "//") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"//"', $_expected)) { $_expected[] = '"//"'; } } }
        L1554: if ($_fail) { goto L1580; }
        L1555: $_stack[$_stack_sp] .= $_value;
        L1556: $_stack[++$_stack_sp] = $_p;
        L1557: $_stack[++$_stack_sp] = "";
        L1558: $_stack[++$_stack_sp] = "";
        L1559: $_stack[++$_stack_sp] = $_p;
        L1560: $_stack[++$_stack_sp] = 1562;
        L1561: goto L1736;
        L1562: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1563: $_value = NULL;
        L1564: $_fail = !$_fail;
        L1565: if ($_fail) { goto L1570; }
        L1566: $_stack[$_stack_sp] .= $_value;
        L1567: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1568: if ($_fail) { goto L1570; }
        L1569: $_stack[$_stack_sp] .= $_value;
        L1570: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1571: if ($_fail) { goto L1575; }
        L1572: $_stack[$_stack_sp] .= $_value;
        L1573: $_stack[$_stack_sp - 1] = $_p;
        L1574: goto L1558;
        L1575: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1576: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1577: $_fail = false;
        L1578: if ($_fail) { goto L1580; }
        L1579: $_stack[$_stack_sp] .= $_value;
        L1580: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1581: if (!$_fail) { goto L1614; }
        L1582: $_p = $_stack[$_stack_sp];
        L1583: $_stack[++$_stack_sp] = "";
        L1584: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "/*") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"/*"', $_expected)) { $_expected[] = '"/*"'; } } }
        L1585: if ($_fail) { goto L1613; }
        L1586: $_stack[$_stack_sp] .= $_value;
        L1587: $_stack[++$_stack_sp] = $_p;
        L1588: $_stack[++$_stack_sp] = "";
        L1589: $_stack[++$_stack_sp] = "";
        L1590: $_stack[++$_stack_sp] = $_p;
        L1591: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L1592: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1593: $_value = NULL;
        L1594: $_fail = !$_fail;
        L1595: if ($_fail) { goto L1600; }
        L1596: $_stack[$_stack_sp] .= $_value;
        L1597: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1598: if ($_fail) { goto L1600; }
        L1599: $_stack[$_stack_sp] .= $_value;
        L1600: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1601: if ($_fail) { goto L1605; }
        L1602: $_stack[$_stack_sp] .= $_value;
        L1603: $_stack[$_stack_sp - 1] = $_p;
        L1604: goto L1589;
        L1605: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1606: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1607: $_fail = false;
        L1608: if ($_fail) { goto L1613; }
        L1609: $_stack[$_stack_sp] .= $_value;
        L1610: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L1611: if ($_fail) { goto L1613; }
        L1612: $_stack[$_stack_sp] .= $_value;
        L1613: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1614: unset($_stack[$_stack_sp--]);
        L1615: if ($_fail) { goto L1619; }
        L1616: $_stack[$_stack_sp] .= $_value;
        L1617: $_stack[$_stack_sp - 1] = $_p;
        L1618: goto L1548;
        L1619: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1620: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1621: $_fail = false;
        L1622: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1623: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1624: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1625: $_b = array();
        L1626: $_b[0] = $_fail;
        L1627: $_b[1] = $_value;
        L1628: $_b[2] = $_p;
        L1629: $_cache[$_a] = $_b;
        L1630: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1631: if ($_a === 29) { goto L29; } else if ($_a === 97) { goto L97; } else if ($_a === 119) { goto L119; } else if ($_a === 134) { goto L134; } else if ($_a === 141) { goto L141; } else if ($_a === 156) { goto L156; } else if ($_a === 169) { goto L169; } else if ($_a === 176) { goto L176; } else if ($_a === 238) { goto L238; } else if ($_a === 322) { goto L322; } else if ($_a === 327) { goto L327; } else if ($_a === 334) { goto L334; } else if ($_a === 371) { goto L371; } else if ($_a === 376) { goto L376; } else if ($_a === 383) { goto L383; } else if ($_a === 435) { goto L435; } else if ($_a === 441) { goto L441; } else if ($_a === 555) { goto L555; } else if ($_a === 803) { goto L803; } else if ($_a === 828) { goto L828; } else if ($_a === 834) { goto L834; } else if ($_a === 873) { goto L873; } else if ($_a === 880) { goto L880; } else if ($_a === 933) { goto L933; } else if ($_a === 957) { goto L957; } else if ($_a === 964) { goto L964; } else if ($_a === 1386) { goto L1386; } else if ($_a === 1797) { goto L1797; } else if ($_a === 1822) { goto L1822; } else if ($_a === 1828) { goto L1828; } else if ($_a === 1867) { goto L1867; } else { return array(FALSE, NULL, 14); }
        L1632: $_stack[++$_stack_sp] = "15@";
        L1633: $_stack[$_stack_sp] .= $_p;
        L1634: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1641; }
        L1635: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1636: $_b = $_cache[$_a];
        L1637: $_fail = $_b[0];
        L1638: $_value = $_b[1];
        L1639: $_p = $_b[2];
        L1640: goto L1734;
        L1641: $_stack[++$_stack_sp] = $_env;
        L1642: $_env = array();
        L1643: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1644: $_stack[++$_stack_sp] = $_p;
        L1645: $_stack[++$_stack_sp] = array();
        L1646: $_stack[++$_stack_sp] = true;
        L1647: $_stack[++$_stack_sp] = $_p;
        L1648: $_fail = TRUE; if (isset($_s[$_p]) && is_int($_a = ord($_s[$_p])) && (($_a === 32) || ($_a === 9) || ($_a === 13) || ($_a === 10))) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('[ \\t\\r\\n]', $_expected)) { $_expected[] = '[ \\t\\r\\n]'; } } }
        L1649: if (!$_fail) { goto L1715; }
        L1650: $_p = $_stack[$_stack_sp];
        L1651: $_stack[++$_stack_sp] = NULL;
        L1652: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "//") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"//"', $_expected)) { $_expected[] = '"//"'; } } }
        L1653: if ($_fail) { goto L1681; }
        L1654: $_stack[$_stack_sp] = $_value;
        L1655: $_stack[++$_stack_sp] = $_p;
        L1656: $_stack[++$_stack_sp] = "";
        L1657: $_stack[++$_stack_sp] = "";
        L1658: $_stack[++$_stack_sp] = $_p;
        L1659: $_stack[++$_stack_sp] = 1661;
        L1660: goto L1736;
        L1661: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1662: $_value = NULL;
        L1663: $_fail = !$_fail;
        L1664: if ($_fail) { goto L1669; }
        L1665: $_stack[$_stack_sp] .= $_value;
        L1666: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1667: if ($_fail) { goto L1669; }
        L1668: $_stack[$_stack_sp] .= $_value;
        L1669: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1670: if ($_fail) { goto L1674; }
        L1671: $_stack[$_stack_sp] .= $_value;
        L1672: $_stack[$_stack_sp - 1] = $_p;
        L1673: goto L1657;
        L1674: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1675: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1676: $_fail = false;
        L1677: if ($_fail) { goto L1681; }
        L1678: $_stack[++$_stack_sp] = 1680;
        L1679: goto L1736;
        L1680: if ($_fail) { goto L1681; }
        L1681: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1682: if (!$_fail) { goto L1715; }
        L1683: $_p = $_stack[$_stack_sp];
        L1684: $_stack[++$_stack_sp] = "";
        L1685: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "/*") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"/*"', $_expected)) { $_expected[] = '"/*"'; } } }
        L1686: if ($_fail) { goto L1714; }
        L1687: $_stack[$_stack_sp] .= $_value;
        L1688: $_stack[++$_stack_sp] = $_p;
        L1689: $_stack[++$_stack_sp] = "";
        L1690: $_stack[++$_stack_sp] = "";
        L1691: $_stack[++$_stack_sp] = $_p;
        L1692: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L1693: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1694: $_value = NULL;
        L1695: $_fail = !$_fail;
        L1696: if ($_fail) { goto L1701; }
        L1697: $_stack[$_stack_sp] .= $_value;
        L1698: $_fail = TRUE; if (isset($_s[$_p])) { $_fail = FALSE; $_value = $_s[$_p]; $_p++; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('any character', $_expected)) { $_expected[] = 'any character'; } } }
        L1699: if ($_fail) { goto L1701; }
        L1700: $_stack[$_stack_sp] .= $_value;
        L1701: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1702: if ($_fail) { goto L1706; }
        L1703: $_stack[$_stack_sp] .= $_value;
        L1704: $_stack[$_stack_sp - 1] = $_p;
        L1705: goto L1690;
        L1706: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1707: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1708: $_fail = false;
        L1709: if ($_fail) { goto L1714; }
        L1710: $_stack[$_stack_sp] .= $_value;
        L1711: $_fail = TRUE; if (($_a = substr($_s, $_p, 2)) === "*/") { $_fail = FALSE; $_value = $_a; $_p += 2; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"*/"', $_expected)) { $_expected[] = '"*/"'; } } }
        L1712: if ($_fail) { goto L1714; }
        L1713: $_stack[$_stack_sp] .= $_value;
        L1714: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1715: unset($_stack[$_stack_sp--]);
        L1716: if ($_fail) { goto L1721; }
        L1717: $_stack[$_stack_sp] = false;
        L1718: $_stack[$_stack_sp - 1][] = $_value;
        L1719: $_stack[$_stack_sp - 2] = $_p;
        L1720: goto L1647;
        L1721: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1722: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1723: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1724: if ($_a) { goto L1726; }
        L1725: $_fail = false;
        L1726: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1727: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1728: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1729: $_b = array();
        L1730: $_b[0] = $_fail;
        L1731: $_b[1] = $_value;
        L1732: $_b[2] = $_p;
        L1733: $_cache[$_a] = $_b;
        L1734: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1735: if ($_a === 42) { goto L42; } else if ($_a === 112) { goto L112; } else if ($_a === 191) { goto L191; } else if ($_a === 202) { goto L202; } else if ($_a === 219) { goto L219; } else if ($_a === 522) { goto L522; } else { return array(FALSE, NULL, 15); }
        L1736: $_stack[++$_stack_sp] = "16@";
        L1737: $_stack[$_stack_sp] .= $_p;
        L1738: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1745; }
        L1739: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1740: $_b = $_cache[$_a];
        L1741: $_fail = $_b[0];
        L1742: $_value = $_b[1];
        L1743: $_p = $_b[2];
        L1744: goto L1775;
        L1745: $_stack[++$_stack_sp] = $_env;
        L1746: $_env = array();
        L1747: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1748: $_stack[++$_stack_sp] = $_p;
        L1749: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\n") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\n"', $_expected)) { $_expected[] = '"\\n"'; } } }
        L1750: if (!$_fail) { goto L1766; }
        L1751: $_p = $_stack[$_stack_sp];
        L1752: $_stack[++$_stack_sp] = "";
        L1753: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\r") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\r"', $_expected)) { $_expected[] = '"\\r"'; } } }
        L1754: if ($_fail) { goto L1765; }
        L1755: $_stack[$_stack_sp] .= $_value;
        L1756: $_stack[++$_stack_sp] = $_p;
        L1757: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "\n") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"\\n"', $_expected)) { $_expected[] = '"\\n"'; } } }
        L1758: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1759: if (!$_fail) { goto L1763; }
        L1760: $_fail = false;
        L1761: $_value = NULL;
        L1762: $_p = $_a;
        L1763: if ($_fail) { goto L1765; }
        L1764: $_stack[$_stack_sp] .= $_value;
        L1765: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1766: unset($_stack[$_stack_sp--]);
        L1767: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1768: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1769: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1770: $_b = array();
        L1771: $_b[0] = $_fail;
        L1772: $_b[1] = $_value;
        L1773: $_b[2] = $_p;
        L1774: $_cache[$_a] = $_b;
        L1775: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1776: if ($_a === 1421) { goto L1421; } else if ($_a === 1562) { goto L1562; } else if ($_a === 1661) { goto L1661; } else if ($_a === 1680) { goto L1680; } else { return array(FALSE, NULL, 16); }
        L1777: $_stack[++$_stack_sp] = "17@";
        L1778: $_stack[$_stack_sp] .= $_p;
        L1779: if (!isset($_cache[$_stack[$_stack_sp]])) { goto L1786; }
        L1780: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1781: $_b = $_cache[$_a];
        L1782: $_fail = $_b[0];
        L1783: $_value = $_b[1];
        L1784: $_p = $_b[2];
        L1785: goto L1882;
        L1786: $_stack[++$_stack_sp] = $_env;
        L1787: $_env = array();
        L1788: $this->_environment_stack[++$this->_environment_stack_sp] = -1;
        L1789: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1790: $_stack[++$_stack_sp] = $_b;
        L1791: $_stack[++$_stack_sp] = NULL;
        L1792: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === "(") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('"("', $_expected)) { $_expected[] = '"("'; } } }
        L1793: if ($_fail) { goto L1870; }
        L1794: $_stack[$_stack_sp] = $_value;
        L1795: $_stack[++$_stack_sp] = 1797;
        L1796: goto L1534;
        L1797: if ($_fail) { goto L1870; }
        L1798: $_stack[++$_stack_sp] = $_p;
        L1799: $_stack[++$_stack_sp] = $_env;
        L1800: $_env = array();
        L1801: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1802: $_stack[++$_stack_sp] = $_b;
        L1803: $_stack[++$_stack_sp] = NULL;
        L1804: $_stack[++$_stack_sp] = $_env;
        L1805: $_env = array();
        L1806: $_stack[++$_stack_sp] = 1808;
        L1807: goto L1324;
        L1808: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1809: $_env["first"] = $_value;
        L1810: if ($_fail) { goto L1853; }
        L1811: $_stack[$_stack_sp] = $_value;
        L1812: $_stack[++$_stack_sp] = $_p;
        L1813: $_stack[++$_stack_sp] = array();
        L1814: $_b = array(); foreach ($_env as $_ref => $_) { $_b[$_ref] =& $_env[$_ref]; }
        L1815: $_stack[++$_stack_sp] = $_b;
        L1816: $_stack[++$_stack_sp] = NULL;
        L1817: $_stack[++$_stack_sp] = $_env;
        L1818: $_env = array();
        L1819: $_stack[++$_stack_sp] = NULL;
        L1820: $_stack[++$_stack_sp] = 1822;
        L1821: goto L1534;
        L1822: if ($_fail) { goto L1829; }
        L1823: $_stack[$_stack_sp] = $_value;
        L1824: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ",") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('","', $_expected)) { $_expected[] = '","'; } } }
        L1825: if ($_fail) { goto L1829; }
        L1826: $_stack[++$_stack_sp] = 1828;
        L1827: goto L1534;
        L1828: if ($_fail) { goto L1829; }
        L1829: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1830: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1831: if ($_fail) { goto L1840; }
        L1832: $_stack[$_stack_sp] = $_value;
        L1833: $_stack[++$_stack_sp] = $_env;
        L1834: $_env = array();
        L1835: $_stack[++$_stack_sp] = 1837;
        L1836: goto L1324;
        L1837: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1838: $_env["next"] = $_value;
        L1839: if ($_fail) { goto L1840; }
        L1840: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1841: if ($_fail) { goto L1843; }
        L1842: $_value = $this->_57($_env);
        L1843: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1844: if ($_fail) { goto L1848; }
        L1845: $_stack[$_stack_sp][] = $_value;
        L1846: $_stack[$_stack_sp - 1] = $_p;
        L1847: goto L1814;
        L1848: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1849: $_p = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1850: $_fail = false;
        L1851: $_env["rest"] = $_value;
        L1852: if ($_fail) { goto L1853; }
        L1853: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1854: if ($_fail) { goto L1856; }
        L1855: $_value = $this->_56($_env);
        L1856: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1857: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1858: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1859: if (!$_fail) { goto L1863; }
        L1860: $_fail = false;
        L1861: $_value = NULL;
        L1862: $_p = $_a;
        L1863: $_env["parameters"] = $_value;
        L1864: if ($_fail) { goto L1870; }
        L1865: $_stack[++$_stack_sp] = 1867;
        L1866: goto L1534;
        L1867: if ($_fail) { goto L1870; }
        L1868: $_fail = TRUE; if (isset($_s[$_p]) && ($_a = $_s[$_p]) === ")") { $_fail = FALSE; $_value = $_a; $_p += 1; } else { if ($_p >= $_maxp) { if ($_p > $_maxp) { $_maxp = $_p; $_expected = array(); } if (!in_array('")"', $_expected)) { $_expected[] = '")"'; } } }
        L1869: if ($_fail) { goto L1870; }
        L1870: $_value = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1871: if ($_fail) { goto L1873; }
        L1872: $_value = $this->_55($_env);
        L1873: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1874: unset($this->_environment_stack[$this->_environment_stack_sp--]);
        L1875: $_env = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1876: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1877: $_b = array();
        L1878: $_b[0] = $_fail;
        L1879: $_b[1] = $_value;
        L1880: $_b[2] = $_p;
        L1881: $_cache[$_a] = $_b;
        L1882: $_a = $_stack[$_stack_sp]; unset($_stack[$_stack_sp--]);
        L1883: if ($_a === 160) { goto L160; } else if ($_a === 318) { goto L318; } else { return array(FALSE, NULL, 17); }
        Lend:
        list($ok, $result) = array(!$_fail, $_value);
        if (!$ok) {
            $before = str_replace(array("\r\n", "\r"), "\n", substr($_s, 0, $_maxp));
            $after = str_replace(array("\r\n", "\r"), "\n", substr($_s, $_maxp));
            $line = 1;
            if (($pos = strrpos($before, "\n")) !== FALSE) {
                $line = substr_count($before, "\n") + 1;
                $before = (string) substr($before, $pos + 1);
            }
            if (($pos = strpos($after, "\n")) !== FALSE) {
                $after = substr($after, 0, $pos);
            }
            return array(FALSE, NULL, (object) array('position' => $_maxp, 'line' => $line, 'column' => strlen($before) + 1, 'context' => $before . $after, 'expected' => $_expected));
        }
        return array(TRUE, $result, NULL);
    }
    private function _0() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("phpeg", array_merge($declarations, $definitions));
    
    }
    private function _1() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("namespace", $namespace);
    
    }
    private function _2() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $first . implode("", $rest);
    
    }
    private function _3() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $s . $next;
    
    }
    private function _4() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("name", $name);
    
    }
    private function _5() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("init", $code);
    
    }
    private function _6() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("invoke", (array) $parameters, $code);
    
    }
    private function _7() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("import", $spec, $path);
    
    }
    private function _8() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return TRUE;
    
    }
    private function _9() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $name;
    
    }
    private function _10() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("macro", $name, $parameters, $expression);
    
    }
    private function _11() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("rule", $name, $expression);
    
    }
    private function _12() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        if (count($expressions) < 2) {
                    return $expressions[0];
                } else {
                    return array("first", $expressions);
                }
            
    
    }
    private function _13() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array_merge(array($first), $rest);
    
    }
    private function _14() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $next;
    
    }
    private function _15() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        $ret = count($expressions) < 2
                       ? $expressions[0]
                       : array("all", $expressions);
        
                if ($action) {
                    $ret = array("action", $ret, $action);
                }
        
                return $ret;
            
    
    }
    private function _16() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array_merge(array($first), $rest);
    
    }
    private function _17() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $next;
    
    }
    private function _18() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("and", $expression);
    
    }
    private function _19() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("not", $expression);
    
    }
    private function _20() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("semantic_predicate", $code);
    
    }
    private function _21() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("bind", $varname, array("position"));
    
    }
    private function _22() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("bind", $varname, $expression);
    
    }
    private function _23() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $suffix ? array($suffix, $expression) : $expression;
    
    }
    private function _24() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "optional";
    
    }
    private function _25() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "zero_or_more";
    
    }
    private function _26() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "one_or_more";
    
    }
    private function _27() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("expand", $importname ? array($importname, $macroname) : $macroname, (array) $arguments);
    
    }
    private function _28() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $name;
    
    }
    private function _29() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array_merge(array($first), $rest);
    
    }
    private function _30() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $next;
    
    }
    private function _31() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("apply", $importname ? array($importname, $rulename) : $rulename);
    
    }
    private function _32() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $name;
    
    }
    private function _33() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $expression;
    
    }
    private function _34() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("literal", $literal);
    
    }
    private function _35() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("range", $range);
    
    }
    private function _36() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array("any");
    
    }
    private function _37() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $matches;
    
    }
    private function _38() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array(ord($a), ord($b));
    
    }
    private function _39() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return ord($c);
    
    }
    private function _40() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return implode("", $value);
    
    }
    private function _41() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return implode("", $value);
    
    }
    private function _42() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\n";
    
    }
    private function _43() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\r";
    
    }
    private function _44() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\t";
    
    }
    private function _45() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "\\";
    
    }
    private function _46() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return '"';
    
    }
    private function _47() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "'";
    
    }
    private function _48() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return ']';
    
    }
    private function _49() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return chr(hexdec($a . $b));
    
    }
    private function _50() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return ltrim($code);
    
    }
    private function _51() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "return " . trim($code) . ";";
    
    }
    private function _52() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return implode("", $inside);
    
    }
    private function _53() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $c;
    
    }
    private function _54() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return "{" . $i . "}";
    
    }
    private function _55() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return (array) $parameters;
    
    }
    private function _56() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return array_merge(array($first), $rest);
    
    }
    private function _57() {
        extract($this->_environments[$this->_environment_stack[$this->_environment_stack_sp]], EXTR_OVERWRITE | EXTR_REFS);
        extract(func_get_arg(0), EXTR_OVERWRITE | EXTR_REFS);
        return $next;
    
    }
}
